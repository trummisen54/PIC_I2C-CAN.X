

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 27 00:03:42 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29 ;; Function _multiToSingle is unused but had its address taken
    30  0000                     _B0CONbits	set	3712
    31  0000                     _B0D0	set	3718
    32  0000                     _B0D1	set	3719
    33  0000                     _B0D2	set	3720
    34  0000                     _B0D3	set	3721
    35  0000                     _B0D4	set	3722
    36  0000                     _B0D5	set	3723
    37  0000                     _B0D6	set	3724
    38  0000                     _B0D7	set	3725
    39  0000                     _B0DLC	set	3717
    40  0000                     _B0EIDH	set	3715
    41  0000                     _B0EIDL	set	3716
    42  0000                     _B0SIDH	set	3713
    43  0000                     _B0SIDL	set	3714
    44  0000                     _BRGCON1	set	3651
    45  0000                     _BRGCON2	set	3652
    46  0000                     _BRGCON3	set	3653
    47  0000                     _BSEL0	set	3709
    48  0000                     _MSEL0	set	3705
    49  0000                     _MSEL1	set	3706
    50  0000                     _MSEL2	set	3707
    51  0000                     _MSEL3	set	3708
    52  0000                     _RXF0EIDH	set	3810
    53  0000                     _RXF0EIDL	set	3811
    54  0000                     _RXF0SIDH	set	3808
    55  0000                     _RXF0SIDL	set	3809
    56  0000                     _RXF1EIDH	set	3814
    57  0000                     _RXF1EIDL	set	3815
    58  0000                     _RXF1SIDH	set	3812
    59  0000                     _RXF1SIDL	set	3813
    60  0000                     _RXF2EIDH	set	3818
    61  0000                     _RXF2EIDL	set	3819
    62  0000                     _RXF2SIDH	set	3816
    63  0000                     _RXF2SIDL	set	3817
    64  0000                     _RXFBCON0	set	3697
    65  0000                     _RXFBCON1	set	3698
    66  0000                     _RXFBCON2	set	3699
    67  0000                     _RXFBCON3	set	3700
    68  0000                     _RXFBCON4	set	3701
    69  0000                     _RXFBCON5	set	3702
    70  0000                     _RXFBCON6	set	3703
    71  0000                     _RXFBCON7	set	3704
    72  0000                     _RXFCON0	set	3654
    73  0000                     _RXFCON1	set	3655
    74  0000                     _RXM0EIDH	set	3834
    75  0000                     _RXM0EIDL	set	3835
    76  0000                     _RXM0SIDH	set	3832
    77  0000                     _RXM0SIDL	set	3833
    78  0000                     _RXM1EIDH	set	3838
    79  0000                     _RXM1EIDL	set	3839
    80  0000                     _RXM1SIDH	set	3836
    81  0000                     _RXM1SIDL	set	3837
    82  0000                     _ANCON0	set	3933
    83  0000                     _ANCON1	set	3932
    84  0000                     _RXB1CON	set	3888
    85  0000                     _RXB1CONbits	set	3888
    86  0000                     _RXB1D0	set	3894
    87  0000                     _RXB1D1	set	3895
    88  0000                     _RXB1D2	set	3896
    89  0000                     _RXB1D3	set	3897
    90  0000                     _RXB1D4	set	3898
    91  0000                     _RXB1D5	set	3899
    92  0000                     _RXB1D6	set	3900
    93  0000                     _RXB1D7	set	3901
    94  0000                     _RXB1DLC	set	3893
    95  0000                     _RXB1EIDH	set	3891
    96  0000                     _RXB1EIDL	set	3892
    97  0000                     _RXB1SIDH	set	3889
    98  0000                     _RXB1SIDL	set	3890
    99  0000                     _TXB0CONbits	set	3872
   100  0000                     _TXB0D0	set	3878
   101  0000                     _TXB0D1	set	3879
   102  0000                     _TXB0D2	set	3880
   103  0000                     _TXB0D3	set	3881
   104  0000                     _TXB0D4	set	3882
   105  0000                     _TXB0D5	set	3883
   106  0000                     _TXB0D6	set	3884
   107  0000                     _TXB0D7	set	3885
   108  0000                     _TXB0DLC	set	3877
   109  0000                     _TXB0EIDH	set	3875
   110  0000                     _TXB0EIDL	set	3876
   111  0000                     _TXB0SIDH	set	3873
   112  0000                     _TXB0SIDL	set	3874
   113  0000                     _CANCON	set	3951
   114  0000                     _CANSTATbits	set	3950
   115  0000                     _ECANCON	set	3954
   116  0000                     _INTCONbits	set	4082
   117  0000                     _LATAbits	set	3977
   118  0000                     _LATCbits	set	3979
   119  0000                     _OSCCON	set	4051
   120  0000                     _OSCCONbits	set	4051
   121  0000                     _OSCTUNEbits	set	3995
   122  0000                     _PIE1bits	set	3997
   123  0000                     _PIR1bits	set	3998
   124  0000                     _PIR5bits	set	3959
   125  0000                     _PORTBbits	set	3969
   126  0000                     _RCONbits	set	4048
   127  0000                     _RXB0CON	set	3936
   128  0000                     _RXB0CONbits	set	3936
   129  0000                     _RXB0D0	set	3942
   130  0000                     _RXB0D1	set	3943
   131  0000                     _RXB0D2	set	3944
   132  0000                     _RXB0D3	set	3945
   133  0000                     _RXB0D4	set	3946
   134  0000                     _RXB0D5	set	3947
   135  0000                     _RXB0D6	set	3948
   136  0000                     _RXB0D7	set	3949
   137  0000                     _RXB0DLC	set	3941
   138  0000                     _RXB0EIDH	set	3939
   139  0000                     _RXB0EIDL	set	3940
   140  0000                     _RXB0SIDH	set	3937
   141  0000                     _RXB0SIDL	set	3938
   142  0000                     _SSPADD	set	4040
   143  0000                     _SSPBUF	set	4041
   144  0000                     _SSPCON1	set	4038
   145  0000                     _SSPCON1bits	set	4038
   146  0000                     _SSPCON2	set	4037
   147  0000                     _SSPSTAT	set	4039
   148  0000                     _SSPSTATbits	set	4039
   149  0000                     _T0CONbits	set	4053
   150  0000                     _TRISA	set	3986
   151  0000                     _TRISB	set	3987
   152  0000                     _TRISC	set	3988
   153                           
   154                           ; #config settings
   155  0000                     
   156                           	psect	cinit
   157  000978                     __pcinit:
   158                           	opt stack 0
   159  000978                     start_initialization:
   160                           	opt stack 0
   161  000978                     __initialization:
   162                           	opt stack 0
   163                           
   164                           ; Clear objects allocated to BIGRAM (1302 bytes)
   165  000978  EE00  F071         	lfsr	0,__pbssBIGRAM
   166  00097C  EE15 F016          	lfsr	1,1302
   167  000980                     clear_0:
   168  000980  6AEE               	clrf	postinc0,c
   169  000982  50E5               	movf	postdec1,w,c
   170  000984  50E1               	movf	fsr1l,w,c
   171  000986  E1FC               	bnz	clear_0
   172  000988  50E2               	movf	fsr1h,w,c
   173  00098A  E1FA               	bnz	clear_0
   174                           
   175                           ; Clear objects allocated to BANK0 (2 bytes)
   176  00098C  0100               	movlb	0
   177  00098E  6B70               	clrf	(__pbssBANK0+1)& (0+255),b
   178  000990  6B6F               	clrf	__pbssBANK0& (0+255),b
   179                           
   180                           ; Clear objects allocated to COMRAM (64 bytes)
   181  000992  EE00  F001         	lfsr	0,__pbssCOMRAM
   182  000996  0E40               	movlw	64
   183  000998                     clear_1:
   184  000998  6AEE               	clrf	postinc0,c
   185  00099A  06E8               	decf	wreg,f,c
   186  00099C  E1FD               	bnz	clear_1
   187  00099E                     end_of_initialization:
   188                           	opt stack 0
   189  00099E                     __end_of__initialization:
   190                           	opt stack 0
   191  00099E  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   192  0009A0  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   193  0009A2  0100               	movlb	0
   194  0009A4  EFB9  F002         	goto	_main	;jump to C main() function
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           postdec1	equ	0xFE5
   198                           fsr1h	equ	0xFE2
   199                           fsr1l	equ	0xFE1
   200                           
   201                           	psect	bssCOMRAM
   202  000001                     __pbssCOMRAM:
   203                           	opt stack 0
   204  000001                     _i2c_reg_map:
   205                           	opt stack 0
   206  000001                     	ds	16
   207  000011                     _FIRST_SEND:
   208                           	opt stack 0
   209  000011                     	ds	2
   210  000013                     _I2C_FLAG:
   211                           	opt stack 0
   212  000013                     	ds	2
   213  000015                     _Interrupt_counter:
   214                           	opt stack 0
   215  000015                     	ds	2
   216  000017                     _MAP_BACKLIGHT:
   217                           	opt stack 0
   218  000017                     	ds	2
   219  000019                     _MAP_BRAKE:
   220                           	opt stack 0
   221  000019                     	ds	2
   222  00001B                     _MAP_DIRECTION:
   223                           	opt stack 0
   224  00001B                     	ds	2
   225  00001D                     _MAP_H_BLINK:
   226                           	opt stack 0
   227  00001D                     	ds	2
   228  00001F                     _MAP_SAFETYPIN:
   229                           	opt stack 0
   230  00001F                     	ds	2
   231  000021                     _MAP_V_BLINK:
   232                           	opt stack 0
   233  000021                     	ds	2
   234  000023                     _bitlenctr:
   235                           	opt stack 0
   236  000023                     	ds	2
   237  000025                     _curState:
   238                           	opt stack 0
   239  000025                     	ds	2
   240  000027                     _heartBeatCounter:
   241                           	opt stack 0
   242  000027                     	ds	2
   243  000029                     _heartbeatCount:
   244                           	opt stack 0
   245  000029                     	ds	2
   246  00002B                     _rawIndex:
   247                           	opt stack 0
   248  00002B                     	ds	2
   249  00002D                     _val:
   250                           	opt stack 0
   251  00002D                     	ds	2
   252  00002F                     _MAP_BITDATA:
   253                           	opt stack 0
   254  00002F                     	ds	1
   255  000030                     _MAP_REC_BATTERYSTATUS:
   256                           	opt stack 0
   257  000030                     	ds	1
   258  000031                     _MAP_REC_VELOCITY:
   259                           	opt stack 0
   260  000031                     	ds	1
   261  000032                     _buttonWasPressed:
   262                           	opt stack 0
   263  000032                     	ds	1
   264  000033                     _count:
   265                           	opt stack 0
   266  000033                     	ds	1
   267  000034                     _i2c_byte_count:
   268                           	opt stack 0
   269  000034                     	ds	1
   270  000035                     _i2c_reg_addr:
   271                           	opt stack 0
   272  000035                     	ds	1
   273  000036                     _temp_D2:
   274                           	opt stack 0
   275  000036                     	ds	1
   276  000037                     _temp_D3:
   277                           	opt stack 0
   278  000037                     	ds	1
   279  000038                     _temp_D4:
   280                           	opt stack 0
   281  000038                     	ds	1
   282  000039                     _temp_D5:
   283                           	opt stack 0
   284  000039                     	ds	1
   285  00003A                     _temp_D6:
   286                           	opt stack 0
   287  00003A                     	ds	1
   288  00003B                     _temp_D7:
   289                           	opt stack 0
   290  00003B                     	ds	1
   291  00003C                     _temp_DLC:
   292                           	opt stack 0
   293  00003C                     	ds	1
   294  00003D                     _temp_EIDH:
   295                           	opt stack 0
   296  00003D                     	ds	1
   297  00003E                     _temp_EIDL:
   298                           	opt stack 0
   299  00003E                     	ds	1
   300  00003F                     _temp_SIDH:
   301                           	opt stack 0
   302  00003F                     	ds	1
   303  000040                     _temp_SIDL:
   304                           	opt stack 0
   305  000040                     	ds	1
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           postdec1	equ	0xFE5
   309                           fsr1h	equ	0xFE2
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	bssBANK0
   313  00006F                     __pbssBANK0:
   314                           	opt stack 0
   315  00006F                     _MAP_HEARTBEAT:
   316                           	opt stack 0
   317  00006F                     	ds	2
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1h	equ	0xFE2
   322                           fsr1l	equ	0xFE1
   323                           
   324                           	psect	bssBIGRAM
   325  000071                     __pbssBIGRAM:
   326                           	opt stack 0
   327  000071                     _raw:
   328                           	opt stack 0
   329  000071                     	ds	500
   330  000265                     _bitArray:
   331                           	opt stack 0
   332  000265                     	ds	402
   333  0003F7                     _singleArray:
   334                           	opt stack 0
   335  0003F7                     	ds	400
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           postdec1	equ	0xFE5
   339                           fsr1h	equ	0xFE2
   340                           fsr1l	equ	0xFE1
   341                           
   342                           	psect	cstackBANK0
   343  000060                     __pcstackBANK0:
   344                           	opt stack 0
   345  000060                     ?_findStart:
   346                           	opt stack 0
   347  000060                     ECAN_Receive@RXMsgFlag:
   348                           	opt stack 0
   349  000060                     ECAN_Transmit@SIDL:
   350                           	opt stack 0
   351  000060                     setBit@shift:
   352                           	opt stack 0
   353  000060                     I2CSetup@i:
   354                           	opt stack 0
   355  000060                     Delay@count:
   356                           	opt stack 0
   357  000060                     singleToBit@start:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x0
   361  000060                     	ds	1
   362  000061                     ECAN_Transmit@DLC:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x1
   366  000061                     	ds	1
   367  000062                     ??_singleToBit:
   368  000062                     ECAN_Transmit@TRANSMIT_ID:
   369                           	opt stack 0
   370  000062                     setBit@value:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x2
   374  000062                     	ds	1
   375  000063                     ECAN_Transmit@DATA1:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x3
   379  000063                     	ds	1
   380  000064                     ??_setBit:
   381  000064                     ECAN_Transmit@DATA2:
   382                           	opt stack 0
   383  000064                     findStart@count:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x4
   387  000064                     	ds	1
   388  000065                     ECAN_Transmit@DATA3:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x5
   392  000065                     	ds	1
   393  000066                     ??_zipCAN:
   394  000066                     ECAN_Transmit@DATA4:
   395                           	opt stack 0
   396  000066                     findStart@i:
   397                           	opt stack 0
   398  000066                     singleToBit@lastVal:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x6
   402  000066                     	ds	1
   403  000067                     ECAN_Transmit@DATA5:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x7
   407  000067                     	ds	1
   408  000068                     ECAN_Transmit@DATA6:
   409                           	opt stack 0
   410  000068                     singleToBit@i:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x8
   414  000068                     	ds	1
   415  000069                     ECAN_Transmit@DATA7:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x9
   419  000069                     	ds	1
   420  00006A                     ECAN_Transmit@SIDH:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0xA
   424  00006A                     	ds	1
   425  00006B                     main@start_condition:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0xB
   429  00006B                     	ds	2
   430  00006D                     main@start:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xD
   434  00006D                     	ds	2
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1h	equ	0xFE2
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	cstackCOMRAM
   442  000041                     __pcstackCOMRAM:
   443                           	opt stack 0
   444  000041                     ??_sample:
   445  000041                     
   446                           ; 2 bytes @ 0x0
   447  000041                     	ds	1
   448  000042                     ??_ISR:
   449                           
   450                           ; 0 bytes @ 0x1
   451  000042                     	ds	14
   452  000050                     postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           postdec1	equ	0xFE5
   455                           fsr1h	equ	0xFE2
   456                           fsr1l	equ	0xFE1
   457                           
   458                           ; 0 bytes @ 0xF
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 15 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  start           2   13[BANK0 ] int 
   469 ;;  start_condit    2   11[BANK0 ] int 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  2   96[None  ] int 
   472 ;; Registers used:
   473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   480 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   482 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   483 ;;Total ram usage:        4 bytes
   484 ;; Hardware stack levels required when called:    4
   485 ;; This function calls:
   486 ;;		_CANSetup
   487 ;;		_Delay
   488 ;;		_ECAN_Receive
   489 ;;		_ECAN_Transmit
   490 ;;		_I2CSetup
   491 ;;		_InitDevice
   492 ;;		_findStart
   493 ;;		_setup_Interrupt
   494 ;;		_singleToBit
   495 ;;		_zipCAN
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text0
   502  000572                     __ptext0:
   503                           	opt stack 0
   504  000572                     _main:
   505                           	opt stack 27
   506                           
   507                           ;main.c: 17: InitDevice();
   508                           
   509                           ;incstack = 0
   510  000572  ECF4  F003         	call	_InitDevice	;wreg free
   511                           
   512                           ;main.c: 18: setup_Interrupt();
   513  000576  ECF3  F004         	call	_setup_Interrupt	;wreg free
   514                           
   515                           ;main.c: 19: CANSetup();
   516  00057A  EC24  F002         	call	_CANSetup	;wreg free
   517                           
   518                           ;main.c: 20: I2CSetup();
   519  00057E  EC31  F004         	call	_I2CSetup	;wreg free
   520                           
   521                           ;main.c: 22: heartBeatCounter = 0;
   522  000582  0E00               	movlw	0
   523  000584  6E28               	movwf	_heartBeatCounter+1,c
   524  000586  0E00               	movlw	0
   525  000588  6E27               	movwf	_heartBeatCounter,c
   526                           
   527                           ;main.c: 23: FIRST_SEND = 1;
   528  00058A  0E00               	movlw	0
   529  00058C  6E12               	movwf	_FIRST_SEND+1,c
   530  00058E  0E01               	movlw	1
   531  000590  6E11               	movwf	_FIRST_SEND,c
   532                           
   533                           ;main.c: 24: I2C_FLAG = 0;
   534  000592  0E00               	movlw	0
   535  000594  6E14               	movwf	_I2C_FLAG+1,c
   536  000596  0E00               	movlw	0
   537  000598  6E13               	movwf	_I2C_FLAG,c
   538                           
   539                           ;main.c: 26: LATAbits.LATA7 = 1;
   540  00059A  8E89               	bsf	3977,7,c	;volatile
   541                           
   542                           ;main.c: 27: LATCbits.LATC6 = 0;
   543  00059C  9C8B               	bcf	3979,6,c	;volatile
   544                           
   545                           ;main.c: 28: LATCbits.LATC7 = 0;
   546  00059E  9E8B               	bcf	3979,7,c	;volatile
   547  0005A0                     l2296:
   548                           
   549                           ;main.c: 32: int start_condition = multiToSingle;
   550  0005A0  0E00               	movlw	0
   551  0005A2  0100               	movlb	0	; () banked
   552  0005A4  6F6C               	movwf	(main@start_condition+1)& (0+255),b
   553  0005A6  0E00               	movlw	0
   554  0005A8  6F6B               	movwf	main@start_condition& (0+255),b
   555                           
   556                           ; BSR set to: 0
   557                           ;main.c: 34: if(start_condition == 1){
   558  0005AA  0100               	movlb	0	; () banked
   559  0005AC  056B               	decf	main@start_condition& (0+255),w,b
   560  0005AE  0100               	movlb	0	; () banked
   561  0005B0  116C               	iorwf	(main@start_condition+1)& (0+255),w,b
   562  0005B2  A4D8               	btfss	status,2,c
   563  0005B4  D00C               	goto	l2302
   564                           
   565                           ; BSR set to: 0
   566                           ;main.c: 35: int start = findStart();
   567  0005B6  ECB1  F003         	call	_findStart	;wreg free
   568  0005BA  C060  F06D         	movff	?_findStart,main@start
   569  0005BE  C061  F06E         	movff	?_findStart+1,main@start+1
   570                           
   571                           ;main.c: 36: singleToBit(start);
   572  0005C2  C06D  F060         	movff	main@start,singleToBit@start
   573  0005C6  C06E  F061         	movff	main@start+1,singleToBit@start+1
   574  0005CA  EC4E  F000         	call	_singleToBit	;wreg free
   575  0005CE                     l2302:
   576                           
   577                           ;main.c: 39: }
   578                           ;main.c: 40: Delay(10);
   579  0005CE  0E00               	movlw	0
   580  0005D0  0100               	movlb	0	; () banked
   581  0005D2  6F61               	movwf	(Delay@count+1)& (0+255),b
   582  0005D4  0E0A               	movlw	10
   583  0005D6  6F60               	movwf	Delay@count& (0+255),b
   584  0005D8  ECE7  F004         	call	_Delay	;wreg free
   585  0005DC  D7E1               	goto	l2296
   586  0005DE                     l2304:
   587                           
   588                           ;main.c: 49: if(ECAN_Receive()){
   589  0005DE  EC42  F003         	call	_ECAN_Receive	;wreg free
   590  0005E2  0900               	iorlw	0
   591  0005E4  B4D8               	btfsc	status,2,c
   592  0005E6  D019               	goto	l2326
   593                           
   594                           ;main.c: 50: FIRST_SEND = 0;
   595  0005E8  0E00               	movlw	0
   596  0005EA  6E12               	movwf	_FIRST_SEND+1,c
   597  0005EC  0E00               	movlw	0
   598  0005EE  6E11               	movwf	_FIRST_SEND,c
   599                           
   600                           ;main.c: 51: LATCbits.LATC6 = 1;
   601  0005F0  8C8B               	bsf	3979,6,c	;volatile
   602                           
   603                           ;main.c: 52: i2c_reg_map[0] = MAP_REC_BATTERYSTATUS;
   604  0005F2  C030  F001         	movff	_MAP_REC_BATTERYSTATUS,_i2c_reg_map	;volatile
   605                           
   606                           ;main.c: 53: i2c_reg_map[1] = MAP_REC_VELOCITY;
   607  0005F6  C031  F002         	movff	_MAP_REC_VELOCITY,_i2c_reg_map+1	;volatile
   608                           
   609                           ;main.c: 54: i2c_reg_map[2] = temp_D2;
   610  0005FA  C036  F003         	movff	_temp_D2,_i2c_reg_map+2	;volatile
   611                           
   612                           ;main.c: 55: i2c_reg_map[3] = temp_D3;
   613  0005FE  C037  F004         	movff	_temp_D3,_i2c_reg_map+3	;volatile
   614                           
   615                           ;main.c: 56: i2c_reg_map[4] = temp_D4;
   616  000602  C038  F005         	movff	_temp_D4,_i2c_reg_map+4	;volatile
   617                           
   618                           ;main.c: 57: i2c_reg_map[5] = temp_D5;
   619  000606  C039  F006         	movff	_temp_D5,_i2c_reg_map+5	;volatile
   620                           
   621                           ;main.c: 58: i2c_reg_map[6] = temp_D6;
   622  00060A  C03A  F007         	movff	_temp_D6,_i2c_reg_map+6	;volatile
   623                           
   624                           ;main.c: 59: i2c_reg_map[7] = temp_D7;
   625  00060E  C03B  F008         	movff	_temp_D7,_i2c_reg_map+7	;volatile
   626                           
   627                           ;main.c: 61: heartBeatCounter = 0;
   628  000612  0E00               	movlw	0
   629  000614  6E28               	movwf	_heartBeatCounter+1,c
   630  000616  0E00               	movlw	0
   631  000618  6E27               	movwf	_heartBeatCounter,c
   632  00061A                     l2326:
   633                           
   634                           ;main.c: 63: }
   635                           ;main.c: 65: if(heartBeatCounter > 25){
   636  00061A  BE28               	btfsc	_heartBeatCounter+1,7,c
   637  00061C  D008               	goto	l2330
   638  00061E  5028               	movf	_heartBeatCounter+1,w,c
   639  000620  E104               	bnz	u1230
   640  000622  0E1A               	movlw	26
   641  000624  5C27               	subwf	_heartBeatCounter,w,c
   642  000626  A0D8               	btfss	status,0,c
   643  000628  D002               	goto	l2330
   644  00062A                     u1230:
   645                           
   646                           ;main.c: 67: i2c_reg_map[2] = 0;
   647  00062A  0E00               	movlw	0
   648  00062C  6E03               	movwf	_i2c_reg_map+2,c	;volatile
   649  00062E                     l2330:
   650                           
   651                           ;main.c: 68: }
   652                           ;main.c: 71: if(I2C_FLAG){
   653  00062E  5013               	movf	_I2C_FLAG,w,c
   654  000630  1014               	iorwf	_I2C_FLAG+1,w,c
   655  000632  B4D8               	btfsc	status,2,c
   656  000634  D01F               	goto	l2338
   657                           
   658                           ;main.c: 72: I2C_FLAG = 0;
   659  000636  0E00               	movlw	0
   660  000638  6E14               	movwf	_I2C_FLAG+1,c
   661  00063A  0E00               	movlw	0
   662  00063C  6E13               	movwf	_I2C_FLAG,c
   663                           
   664                           ;main.c: 73: zipCAN();
   665  00063E  EC73  F001         	call	_zipCAN	;wreg free
   666                           
   667                           ;main.c: 74: ECAN_Transmit(0x32,0xC0, 0x02,
   668                           ;main.c: 75: MAP_BITDATA,
   669                           ;main.c: 76: i2c_reg_map[15],
   670                           ;main.c: 77: i2c_reg_map[10],
   671                           ;main.c: 78: i2c_reg_map[11],
   672                           ;main.c: 79: i2c_reg_map[12],
   673                           ;main.c: 80: i2c_reg_map[13],
   674                           ;main.c: 81: i2c_reg_map[14],
   675                           ;main.c: 82: i2c_reg_map[15]);
   676  000642  0EC0               	movlw	192
   677  000644  0100               	movlb	0	; () banked
   678  000646  6F60               	movwf	ECAN_Transmit@SIDL& (0+255),b
   679  000648  0E02               	movlw	2
   680  00064A  0100               	movlb	0	; () banked
   681  00064C  6F61               	movwf	ECAN_Transmit@DLC& (0+255),b
   682  00064E  C02F  F062         	movff	_MAP_BITDATA,ECAN_Transmit@TRANSMIT_ID
   683  000652  C010  F063         	movff	_i2c_reg_map+15,ECAN_Transmit@DATA1	;volatile
   684  000656  C00B  F064         	movff	_i2c_reg_map+10,ECAN_Transmit@DATA2	;volatile
   685  00065A  C00C  F065         	movff	_i2c_reg_map+11,ECAN_Transmit@DATA3	;volatile
   686  00065E  C00D  F066         	movff	_i2c_reg_map+12,ECAN_Transmit@DATA4	;volatile
   687  000662  C00E  F067         	movff	_i2c_reg_map+13,ECAN_Transmit@DATA5	;volatile
   688  000666  C00F  F068         	movff	_i2c_reg_map+14,ECAN_Transmit@DATA6	;volatile
   689  00066A  C010  F069         	movff	_i2c_reg_map+15,ECAN_Transmit@DATA7	;volatile
   690  00066E  0E32               	movlw	50
   691  000670  EC9B  F004         	call	_ECAN_Transmit
   692  000674                     l2338:
   693                           
   694                           ;main.c: 85: }
   695                           ;main.c: 91: Delay((unsigned int)(64/4)*80 * 5);
   696  000674  0E19               	movlw	25
   697  000676  0100               	movlb	0	; () banked
   698  000678  6F61               	movwf	(Delay@count+1)& (0+255),b
   699  00067A  0E00               	movlw	0
   700  00067C  6F60               	movwf	Delay@count& (0+255),b
   701  00067E  ECE7  F004         	call	_Delay	;wreg free
   702  000682  D7AD               	goto	l2304
   703  000684                     __end_of_main:
   704                           	opt stack 0
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1h	equ	0xFE2
   709                           fsr1l	equ	0xFE1
   710                           status	equ	0xFD8
   711                           
   712 ;; *************** function _zipCAN *****************
   713 ;; Defined at:
   714 ;;		line 337 in file "ECAN.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;		None               void
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;Total ram usage:        2 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    3
   735 ;; This function calls:
   736 ;;		_setBit
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text1
   743  0002E6                     __ptext1:
   744                           	opt stack 0
   745  0002E6                     _zipCAN:
   746                           	opt stack 27
   747                           
   748                           ;ECAN.c: 338: if(i2c_reg_map[8] == 1){
   749                           
   750                           ;incstack = 0
   751  0002E6  0409               	decf	_i2c_reg_map+8,w,c	;volatile
   752  0002E8  A4D8               	btfss	status,2,c
   753  0002EA  D00B               	goto	l2214
   754                           
   755                           ;ECAN.c: 339: setBit(0, i2c_reg_map[8]);
   756  0002EC  0E00               	movlw	0
   757  0002EE  0100               	movlb	0	; () banked
   758  0002F0  6F61               	movwf	(setBit@shift+1)& (0+255),b
   759  0002F2  0E00               	movlw	0
   760  0002F4  6F60               	movwf	setBit@shift& (0+255),b
   761  0002F6  C009  F062         	movff	_i2c_reg_map+8,setBit@value	;volatile
   762  0002FA  0100               	movlb	0	; () banked
   763  0002FC  6B63               	clrf	(setBit@value+1)& (0+255),b
   764  0002FE  ECD4  F004         	call	_setBit	;wreg free
   765  000302                     l2214:
   766                           
   767                           ;ECAN.c: 340: }
   768                           ;ECAN.c: 341: if(i2c_reg_map[9] != MAP_BRAKE){
   769  000302  500A               	movf	_i2c_reg_map+9,w,c	;volatile
   770  000304  0100               	movlb	0	; () banked
   771  000306  6F66               	movwf	??_zipCAN& (0+255),b
   772  000308  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   773  00030A  5019               	movf	_MAP_BRAKE,w,c
   774  00030C  0100               	movlb	0	; () banked
   775  00030E  1966               	xorwf	??_zipCAN& (0+255),w,b
   776  000310  E105               	bnz	u1150
   777  000312  501A               	movf	_MAP_BRAKE+1,w,c
   778  000314  0100               	movlb	0	; () banked
   779  000316  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   780  000318  B4D8               	btfsc	status,2,c
   781  00031A  D00E               	goto	l2220
   782  00031C                     u1150:
   783                           
   784                           ; BSR set to: 0
   785                           ;ECAN.c: 342: setBit(1, i2c_reg_map[9]);
   786  00031C  0E00               	movlw	0
   787  00031E  0100               	movlb	0	; () banked
   788  000320  6F61               	movwf	(setBit@shift+1)& (0+255),b
   789  000322  0E01               	movlw	1
   790  000324  6F60               	movwf	setBit@shift& (0+255),b
   791  000326  C00A  F062         	movff	_i2c_reg_map+9,setBit@value	;volatile
   792  00032A  0100               	movlb	0	; () banked
   793  00032C  6B63               	clrf	(setBit@value+1)& (0+255),b
   794  00032E  ECD4  F004         	call	_setBit	;wreg free
   795                           
   796                           ;ECAN.c: 343: MAP_BRAKE = i2c_reg_map[9];
   797  000332  C00A  F019         	movff	_i2c_reg_map+9,_MAP_BRAKE	;volatile
   798  000336  6A1A               	clrf	_MAP_BRAKE+1,c
   799  000338                     l2220:
   800                           
   801                           ;ECAN.c: 344: }
   802                           ;ECAN.c: 345: if(i2c_reg_map[10] != MAP_BACKLIGHT){
   803  000338  500B               	movf	_i2c_reg_map+10,w,c	;volatile
   804  00033A  0100               	movlb	0	; () banked
   805  00033C  6F66               	movwf	??_zipCAN& (0+255),b
   806  00033E  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   807  000340  5017               	movf	_MAP_BACKLIGHT,w,c
   808  000342  0100               	movlb	0	; () banked
   809  000344  1966               	xorwf	??_zipCAN& (0+255),w,b
   810  000346  E105               	bnz	u1160
   811  000348  5018               	movf	_MAP_BACKLIGHT+1,w,c
   812  00034A  0100               	movlb	0	; () banked
   813  00034C  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   814  00034E  B4D8               	btfsc	status,2,c
   815  000350  D00E               	goto	l2226
   816  000352                     u1160:
   817                           
   818                           ; BSR set to: 0
   819                           ;ECAN.c: 346: setBit(2, i2c_reg_map[10]);
   820  000352  0E00               	movlw	0
   821  000354  0100               	movlb	0	; () banked
   822  000356  6F61               	movwf	(setBit@shift+1)& (0+255),b
   823  000358  0E02               	movlw	2
   824  00035A  6F60               	movwf	setBit@shift& (0+255),b
   825  00035C  C00B  F062         	movff	_i2c_reg_map+10,setBit@value	;volatile
   826  000360  0100               	movlb	0	; () banked
   827  000362  6B63               	clrf	(setBit@value+1)& (0+255),b
   828  000364  ECD4  F004         	call	_setBit	;wreg free
   829                           
   830                           ;ECAN.c: 347: MAP_BACKLIGHT = i2c_reg_map[10];
   831  000368  C00B  F017         	movff	_i2c_reg_map+10,_MAP_BACKLIGHT	;volatile
   832  00036C  6A18               	clrf	_MAP_BACKLIGHT+1,c
   833  00036E                     l2226:
   834                           
   835                           ;ECAN.c: 348: }
   836                           ;ECAN.c: 349: if(i2c_reg_map[11] != MAP_V_BLINK){
   837  00036E  500C               	movf	_i2c_reg_map+11,w,c	;volatile
   838  000370  0100               	movlb	0	; () banked
   839  000372  6F66               	movwf	??_zipCAN& (0+255),b
   840  000374  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   841  000376  5021               	movf	_MAP_V_BLINK,w,c
   842  000378  0100               	movlb	0	; () banked
   843  00037A  1966               	xorwf	??_zipCAN& (0+255),w,b
   844  00037C  E105               	bnz	u1170
   845  00037E  5022               	movf	_MAP_V_BLINK+1,w,c
   846  000380  0100               	movlb	0	; () banked
   847  000382  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   848  000384  B4D8               	btfsc	status,2,c
   849  000386  D00E               	goto	l2232
   850  000388                     u1170:
   851                           
   852                           ; BSR set to: 0
   853                           ;ECAN.c: 350: setBit(3, i2c_reg_map[11]);
   854  000388  0E00               	movlw	0
   855  00038A  0100               	movlb	0	; () banked
   856  00038C  6F61               	movwf	(setBit@shift+1)& (0+255),b
   857  00038E  0E03               	movlw	3
   858  000390  6F60               	movwf	setBit@shift& (0+255),b
   859  000392  C00C  F062         	movff	_i2c_reg_map+11,setBit@value	;volatile
   860  000396  0100               	movlb	0	; () banked
   861  000398  6B63               	clrf	(setBit@value+1)& (0+255),b
   862  00039A  ECD4  F004         	call	_setBit	;wreg free
   863                           
   864                           ;ECAN.c: 351: MAP_V_BLINK = i2c_reg_map[11];
   865  00039E  C00C  F021         	movff	_i2c_reg_map+11,_MAP_V_BLINK	;volatile
   866  0003A2  6A22               	clrf	_MAP_V_BLINK+1,c
   867  0003A4                     l2232:
   868                           
   869                           ;ECAN.c: 352: }
   870                           ;ECAN.c: 353: if(i2c_reg_map[12] != MAP_H_BLINK){
   871  0003A4  500D               	movf	_i2c_reg_map+12,w,c	;volatile
   872  0003A6  0100               	movlb	0	; () banked
   873  0003A8  6F66               	movwf	??_zipCAN& (0+255),b
   874  0003AA  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   875  0003AC  501D               	movf	_MAP_H_BLINK,w,c
   876  0003AE  0100               	movlb	0	; () banked
   877  0003B0  1966               	xorwf	??_zipCAN& (0+255),w,b
   878  0003B2  E105               	bnz	u1180
   879  0003B4  501E               	movf	_MAP_H_BLINK+1,w,c
   880  0003B6  0100               	movlb	0	; () banked
   881  0003B8  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   882  0003BA  B4D8               	btfsc	status,2,c
   883  0003BC  D00E               	goto	l2238
   884  0003BE                     u1180:
   885                           
   886                           ; BSR set to: 0
   887                           ;ECAN.c: 354: setBit(4, i2c_reg_map[12]);
   888  0003BE  0E00               	movlw	0
   889  0003C0  0100               	movlb	0	; () banked
   890  0003C2  6F61               	movwf	(setBit@shift+1)& (0+255),b
   891  0003C4  0E04               	movlw	4
   892  0003C6  6F60               	movwf	setBit@shift& (0+255),b
   893  0003C8  C00D  F062         	movff	_i2c_reg_map+12,setBit@value	;volatile
   894  0003CC  0100               	movlb	0	; () banked
   895  0003CE  6B63               	clrf	(setBit@value+1)& (0+255),b
   896  0003D0  ECD4  F004         	call	_setBit	;wreg free
   897                           
   898                           ;ECAN.c: 355: MAP_H_BLINK = i2c_reg_map[12];
   899  0003D4  C00D  F01D         	movff	_i2c_reg_map+12,_MAP_H_BLINK	;volatile
   900  0003D8  6A1E               	clrf	_MAP_H_BLINK+1,c
   901  0003DA                     l2238:
   902                           
   903                           ;ECAN.c: 356: }
   904                           ;ECAN.c: 357: if(i2c_reg_map[13] != MAP_DIRECTION){
   905  0003DA  500E               	movf	_i2c_reg_map+13,w,c	;volatile
   906  0003DC  0100               	movlb	0	; () banked
   907  0003DE  6F66               	movwf	??_zipCAN& (0+255),b
   908  0003E0  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   909  0003E2  501B               	movf	_MAP_DIRECTION,w,c
   910  0003E4  0100               	movlb	0	; () banked
   911  0003E6  1966               	xorwf	??_zipCAN& (0+255),w,b
   912  0003E8  E105               	bnz	u1190
   913  0003EA  501C               	movf	_MAP_DIRECTION+1,w,c
   914  0003EC  0100               	movlb	0	; () banked
   915  0003EE  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   916  0003F0  B4D8               	btfsc	status,2,c
   917  0003F2  D00E               	goto	l2244
   918  0003F4                     u1190:
   919                           
   920                           ; BSR set to: 0
   921                           ;ECAN.c: 358: setBit(5, i2c_reg_map[13]);
   922  0003F4  0E00               	movlw	0
   923  0003F6  0100               	movlb	0	; () banked
   924  0003F8  6F61               	movwf	(setBit@shift+1)& (0+255),b
   925  0003FA  0E05               	movlw	5
   926  0003FC  6F60               	movwf	setBit@shift& (0+255),b
   927  0003FE  C00E  F062         	movff	_i2c_reg_map+13,setBit@value	;volatile
   928  000402  0100               	movlb	0	; () banked
   929  000404  6B63               	clrf	(setBit@value+1)& (0+255),b
   930  000406  ECD4  F004         	call	_setBit	;wreg free
   931                           
   932                           ;ECAN.c: 359: MAP_DIRECTION = i2c_reg_map[13];
   933  00040A  C00E  F01B         	movff	_i2c_reg_map+13,_MAP_DIRECTION	;volatile
   934  00040E  6A1C               	clrf	_MAP_DIRECTION+1,c
   935  000410                     l2244:
   936                           
   937                           ;ECAN.c: 360: }
   938                           ;ECAN.c: 361: if(i2c_reg_map[14] != MAP_SAFETYPIN){
   939  000410  500F               	movf	_i2c_reg_map+14,w,c	;volatile
   940  000412  0100               	movlb	0	; () banked
   941  000414  6F66               	movwf	??_zipCAN& (0+255),b
   942  000416  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   943  000418  501F               	movf	_MAP_SAFETYPIN,w,c
   944  00041A  0100               	movlb	0	; () banked
   945  00041C  1966               	xorwf	??_zipCAN& (0+255),w,b
   946  00041E  E105               	bnz	u1200
   947  000420  5020               	movf	_MAP_SAFETYPIN+1,w,c
   948  000422  0100               	movlb	0	; () banked
   949  000424  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   950  000426  B4D8               	btfsc	status,2,c
   951  000428  0012               	return	
   952  00042A                     u1200:
   953                           
   954                           ; BSR set to: 0
   955                           ;ECAN.c: 362: setBit(6, i2c_reg_map[14]);
   956  00042A  0E00               	movlw	0
   957  00042C  0100               	movlb	0	; () banked
   958  00042E  6F61               	movwf	(setBit@shift+1)& (0+255),b
   959  000430  0E06               	movlw	6
   960  000432  6F60               	movwf	setBit@shift& (0+255),b
   961  000434  C00F  F062         	movff	_i2c_reg_map+14,setBit@value	;volatile
   962  000438  0100               	movlb	0	; () banked
   963  00043A  6B63               	clrf	(setBit@value+1)& (0+255),b
   964  00043C  ECD4  F004         	call	_setBit	;wreg free
   965                           
   966                           ;ECAN.c: 363: MAP_SAFETYPIN = i2c_reg_map[14];
   967  000440  C00F  F01F         	movff	_i2c_reg_map+14,_MAP_SAFETYPIN	;volatile
   968  000444  6A20               	clrf	_MAP_SAFETYPIN+1,c
   969  000446  0012               	return	
   970  000448                     __end_of_zipCAN:
   971                           	opt stack 0
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           postdec1	equ	0xFE5
   975                           fsr1h	equ	0xFE2
   976                           fsr1l	equ	0xFE1
   977                           status	equ	0xFD8
   978                           
   979 ;; *************** function _setBit *****************
   980 ;; Defined at:
   981 ;;		line 367 in file "ECAN.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  shift           2    0[BANK0 ] int 
   984 ;;  value           2    2[BANK0 ] int 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;		None               void
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   996 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   998 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   999 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1000 ;;Total ram usage:        6 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    2
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_zipCAN
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text2
  1011  0009A8                     __ptext2:
  1012                           	opt stack 0
  1013  0009A8                     _setBit:
  1014                           	opt stack 27
  1015                           
  1016                           ;ECAN.c: 368: MAP_BITDATA = MAP_BITDATA ^ (1 << shift);
  1017                           
  1018                           ;incstack = 0
  1019  0009A8  C060  F064         	movff	setBit@shift,??_setBit
  1020  0009AC  0E01               	movlw	1
  1021  0009AE  0100               	movlb	0	; () banked
  1022  0009B0  6F65               	movwf	(??_setBit+1)& (0+255),b
  1023  0009B2  0100               	movlb	0	; () banked
  1024  0009B4  2B64               	incf	??_setBit& (0+255),f,b
  1025  0009B6  D003               	goto	u874
  1026  0009B8                     u875:
  1027  0009B8  0100               	movlb	0	; () banked
  1028  0009BA  90D8               	bcf	status,0,c
  1029  0009BC  3765               	rlcf	(??_setBit+1)& (0+255),f,b
  1030  0009BE                     u874:
  1031  0009BE  0100               	movlb	0	; () banked
  1032  0009C0  2F64               	decfsz	??_setBit& (0+255),f,b
  1033  0009C2  D7FA               	goto	u875
  1034  0009C4  0100               	movlb	0	; () banked
  1035  0009C6  5165               	movf	(??_setBit+1)& (0+255),w,b
  1036  0009C8  182F               	xorwf	_MAP_BITDATA,w,c
  1037  0009CA  6E2F               	movwf	_MAP_BITDATA,c
  1038                           
  1039                           ; BSR set to: 0
  1040  0009CC  0012               	return		;funcret
  1041  0009CE                     __end_of_setBit:
  1042                           	opt stack 0
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1h	equ	0xFE2
  1047                           fsr1l	equ	0xFE1
  1048                           status	equ	0xFD8
  1049                           
  1050 ;; *************** function _singleToBit *****************
  1051 ;; Defined at:
  1052 ;;		line 115 in file "RFID.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  start           2    0[BANK0 ] int 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  i               2    8[BANK0 ] int 
  1057 ;;  lastVal         2    6[BANK0 ] int 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;		None               void
  1060 ;; Registers used:
  1061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1068 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1069 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1070 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1071 ;;Total ram usage:       10 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text3
  1082  00009C                     __ptext3:
  1083                           	opt stack 0
  1084  00009C                     _singleToBit:
  1085                           	opt stack 28
  1086                           
  1087                           ;RFID.c: 117: int lastVal;
  1088                           ;RFID.c: 120: for(int i = 0; i<200; i++){
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;incstack = 0
  1092  00009C  0E00               	movlw	0
  1093  00009E  0100               	movlb	0	; () banked
  1094  0000A0  6F69               	movwf	(singleToBit@i+1)& (0+255),b
  1095  0000A2  0E00               	movlw	0
  1096  0000A4  6F68               	movwf	singleToBit@i& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099  0000A6  0100               	movlb	0	; () banked
  1100  0000A8  BF69               	btfsc	(singleToBit@i+1)& (0+255),7,b
  1101  0000AA  D00A               	goto	l2126
  1102  0000AC  0100               	movlb	0	; () banked
  1103  0000AE  5169               	movf	(singleToBit@i+1)& (0+255),w,b
  1104  0000B0  E106               	bnz	u990
  1105  0000B2  0EC8               	movlw	200
  1106  0000B4  0100               	movlb	0	; () banked
  1107  0000B6  5D68               	subwf	singleToBit@i& (0+255),w,b
  1108  0000B8  B0D8               	btfsc	status,0,c
  1109  0000BA  0012               	return	
  1110  0000BC  D001               	goto	l2126
  1111  0000BE                     u990:
  1112                           
  1113                           ; BSR set to: 0
  1114  0000BE  0012               	return	
  1115  0000C0                     l2126:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;RFID.c: 122: if(lastVal == 1){
  1119  0000C0  0100               	movlb	0	; () banked
  1120  0000C2  0566               	decf	singleToBit@lastVal& (0+255),w,b
  1121  0000C4  0100               	movlb	0	; () banked
  1122  0000C6  1167               	iorwf	(singleToBit@lastVal+1)& (0+255),w,b
  1123  0000C8  A4D8               	btfss	status,2,c
  1124  0000CA  D08B               	goto	l2154
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;RFID.c: 124: if(singleArray[i+start] == 1){
  1128  0000CC  0100               	movlb	0	; () banked
  1129  0000CE  5160               	movf	singleToBit@start& (0+255),w,b
  1130  0000D0  0100               	movlb	0	; () banked
  1131  0000D2  2568               	addwf	singleToBit@i& (0+255),w,b
  1132  0000D4  0100               	movlb	0	; () banked
  1133  0000D6  6F62               	movwf	??_singleToBit& (0+255),b
  1134  0000D8  0100               	movlb	0	; () banked
  1135  0000DA  5161               	movf	(singleToBit@start+1)& (0+255),w,b
  1136  0000DC  0100               	movlb	0	; () banked
  1137  0000DE  2169               	addwfc	(singleToBit@i+1)& (0+255),w,b
  1138  0000E0  0100               	movlb	0	; () banked
  1139  0000E2  6F63               	movwf	(??_singleToBit+1)& (0+255),b
  1140  0000E4  90D8               	bcf	status,0,c
  1141  0000E6  0100               	movlb	0	; () banked
  1142  0000E8  3762               	rlcf	??_singleToBit& (0+255),f,b
  1143  0000EA  3763               	rlcf	(??_singleToBit+1)& (0+255),f,b
  1144  0000EC  0EF7               	movlw	low _singleArray
  1145  0000EE  0100               	movlb	0	; () banked
  1146  0000F0  2562               	addwf	??_singleToBit& (0+255),w,b
  1147  0000F2  6ED9               	movwf	fsr2l,c
  1148  0000F4  0E03               	movlw	high _singleArray
  1149  0000F6  0100               	movlb	0	; () banked
  1150  0000F8  2163               	addwfc	(??_singleToBit+1)& (0+255),w,b
  1151  0000FA  6EDA               	movwf	fsr2h,c
  1152  0000FC  04DE               	decf	postinc2,w,c
  1153  0000FE  10DE               	iorwf	postinc2,w,c
  1154  000100  B4D8               	btfsc	status,2,c
  1155  000102  D0B4               	goto	L6
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;RFID.c: 128: else if(singleArray[i+start] == 2){
  1159                           
  1160                           ; BSR set to: 0
  1161                           
  1162                           ;RFID.c: 127: }
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;RFID.c: 126: lastVal = 1;
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;RFID.c: 125: bitArray[i] = 1;
  1169  000104  0100               	movlb	0	; () banked
  1170  000106  5160               	movf	singleToBit@start& (0+255),w,b
  1171  000108  0100               	movlb	0	; () banked
  1172  00010A  2568               	addwf	singleToBit@i& (0+255),w,b
  1173  00010C  0100               	movlb	0	; () banked
  1174  00010E  6F62               	movwf	??_singleToBit& (0+255),b
  1175  000110  0100               	movlb	0	; () banked
  1176  000112  5161               	movf	(singleToBit@start+1)& (0+255),w,b
  1177  000114  0100               	movlb	0	; () banked
  1178  000116  2169               	addwfc	(singleToBit@i+1)& (0+255),w,b
  1179  000118  0100               	movlb	0	; () banked
  1180  00011A  6F63               	movwf	(??_singleToBit+1)& (0+255),b
  1181  00011C  90D8               	bcf	status,0,c
  1182  00011E  0100               	movlb	0	; () banked
  1183  000120  3762               	rlcf	??_singleToBit& (0+255),f,b
  1184  000122  3763               	rlcf	(??_singleToBit+1)& (0+255),f,b
  1185  000124  0EF7               	movlw	low _singleArray
  1186  000126  0100               	movlb	0	; () banked
  1187  000128  2562               	addwf	??_singleToBit& (0+255),w,b
  1188  00012A  6ED9               	movwf	fsr2l,c
  1189  00012C  0E03               	movlw	high _singleArray
  1190  00012E  0100               	movlb	0	; () banked
  1191  000130  2163               	addwfc	(??_singleToBit+1)& (0+255),w,b
  1192  000132  6EDA               	movwf	fsr2h,c
  1193  000134  0E02               	movlw	2
  1194  000136  18DE               	xorwf	postinc2,w,c
  1195  000138  10DE               	iorwf	postinc2,w,c
  1196  00013A  A4D8               	btfss	status,2,c
  1197  00013C  D022               	goto	l2144
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;RFID.c: 129: bitArray[i++] = 0;
  1201  00013E  90D8               	bcf	status,0,c
  1202  000140  0100               	movlb	0	; () banked
  1203  000142  3568               	rlcf	singleToBit@i& (0+255),w,b
  1204  000144  6ED9               	movwf	fsr2l,c
  1205  000146  0100               	movlb	0	; () banked
  1206  000148  3569               	rlcf	(singleToBit@i+1)& (0+255),w,b
  1207  00014A  6EDA               	movwf	fsr2h,c
  1208  00014C  0E65               	movlw	low _bitArray
  1209  00014E  26D9               	addwf	fsr2l,f,c
  1210  000150  0E02               	movlw	high _bitArray
  1211  000152  22DA               	addwfc	fsr2h,f,c
  1212  000154  0E00               	movlw	0
  1213  000156  6EDE               	movwf	postinc2,c
  1214  000158  0E00               	movlw	0
  1215  00015A  6EDD               	movwf	postdec2,c
  1216                           
  1217                           ; BSR set to: 0
  1218  00015C  0100               	movlb	0	; () banked
  1219  00015E  4B68               	infsnz	singleToBit@i& (0+255),f,b
  1220  000160  2B69               	incf	(singleToBit@i+1)& (0+255),f,b
  1221  000162                     l2140:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;RFID.c: 130: bitArray[i] = 0;
  1225  000162  90D8               	bcf	status,0,c
  1226  000164  0100               	movlb	0	; () banked
  1227  000166  3568               	rlcf	singleToBit@i& (0+255),w,b
  1228  000168  6ED9               	movwf	fsr2l,c
  1229  00016A  0100               	movlb	0	; () banked
  1230  00016C  3569               	rlcf	(singleToBit@i+1)& (0+255),w,b
  1231  00016E  6EDA               	movwf	fsr2h,c
  1232  000170  0E65               	movlw	low _bitArray
  1233  000172  26D9               	addwf	fsr2l,f,c
  1234  000174  0E02               	movlw	high _bitArray
  1235  000176  22DA               	addwfc	fsr2h,f,c
  1236  000178  0E00               	movlw	0
  1237  00017A  6EDE               	movwf	postinc2,c
  1238  00017C  0E00               	movlw	0
  1239  00017E  6EDD               	movwf	postdec2,c
  1240  000180  D053               	goto	l2160
  1241  000182                     l2144:
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;RFID.c: 133: else if(singleArray[i+start] == 3){
  1245  000182  0100               	movlb	0	; () banked
  1246  000184  5160               	movf	singleToBit@start& (0+255),w,b
  1247  000186  0100               	movlb	0	; () banked
  1248  000188  2568               	addwf	singleToBit@i& (0+255),w,b
  1249  00018A  0100               	movlb	0	; () banked
  1250  00018C  6F62               	movwf	??_singleToBit& (0+255),b
  1251  00018E  0100               	movlb	0	; () banked
  1252  000190  5161               	movf	(singleToBit@start+1)& (0+255),w,b
  1253  000192  0100               	movlb	0	; () banked
  1254  000194  2169               	addwfc	(singleToBit@i+1)& (0+255),w,b
  1255  000196  0100               	movlb	0	; () banked
  1256  000198  6F63               	movwf	(??_singleToBit+1)& (0+255),b
  1257  00019A  90D8               	bcf	status,0,c
  1258  00019C  0100               	movlb	0	; () banked
  1259  00019E  3762               	rlcf	??_singleToBit& (0+255),f,b
  1260  0001A0  3763               	rlcf	(??_singleToBit+1)& (0+255),f,b
  1261  0001A2  0EF7               	movlw	low _singleArray
  1262  0001A4  0100               	movlb	0	; () banked
  1263  0001A6  2562               	addwf	??_singleToBit& (0+255),w,b
  1264  0001A8  6ED9               	movwf	fsr2l,c
  1265  0001AA  0E03               	movlw	high _singleArray
  1266  0001AC  0100               	movlb	0	; () banked
  1267  0001AE  2163               	addwfc	(??_singleToBit+1)& (0+255),w,b
  1268  0001B0  6EDA               	movwf	fsr2h,c
  1269  0001B2  0E03               	movlw	3
  1270  0001B4  18DE               	xorwf	postinc2,w,c
  1271  0001B6  10DE               	iorwf	postinc2,w,c
  1272  0001B8  A4D8               	btfss	status,2,c
  1273  0001BA  D08A               	goto	l2170
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;RFID.c: 134: bitArray[i++] = 0;
  1277  0001BC  90D8               	bcf	status,0,c
  1278  0001BE  0100               	movlb	0	; () banked
  1279  0001C0  3568               	rlcf	singleToBit@i& (0+255),w,b
  1280  0001C2  6ED9               	movwf	fsr2l,c
  1281  0001C4  0100               	movlb	0	; () banked
  1282  0001C6  3569               	rlcf	(singleToBit@i+1)& (0+255),w,b
  1283  0001C8  6EDA               	movwf	fsr2h,c
  1284  0001CA  0E65               	movlw	low _bitArray
  1285  0001CC  26D9               	addwf	fsr2l,f,c
  1286  0001CE  0E02               	movlw	high _bitArray
  1287  0001D0  22DA               	addwfc	fsr2h,f,c
  1288  0001D2  0E00               	movlw	0
  1289  0001D4  6EDE               	movwf	postinc2,c
  1290  0001D6  0E00               	movlw	0
  1291  0001D8  6EDD               	movwf	postdec2,c
  1292                           
  1293                           ; BSR set to: 0
  1294  0001DA  0100               	movlb	0	; () banked
  1295  0001DC  4B68               	infsnz	singleToBit@i& (0+255),f,b
  1296  0001DE  2B69               	incf	(singleToBit@i+1)& (0+255),f,b
  1297  0001E0  D045               	goto	L6
  1298  0001E2                     l2154:
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;RFID.c: 139: else if(lastVal == 0){
  1302  0001E2  0100               	movlb	0	; () banked
  1303  0001E4  5166               	movf	singleToBit@lastVal& (0+255),w,b
  1304  0001E6  0100               	movlb	0	; () banked
  1305  0001E8  1167               	iorwf	(singleToBit@lastVal+1)& (0+255),w,b
  1306  0001EA  A4D8               	btfss	status,2,c
  1307  0001EC  D071               	goto	l2170
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;RFID.c: 140: if(singleArray[i+start] == 1){
  1311  0001EE  0100               	movlb	0	; () banked
  1312  0001F0  5160               	movf	singleToBit@start& (0+255),w,b
  1313  0001F2  0100               	movlb	0	; () banked
  1314  0001F4  2568               	addwf	singleToBit@i& (0+255),w,b
  1315  0001F6  0100               	movlb	0	; () banked
  1316  0001F8  6F62               	movwf	??_singleToBit& (0+255),b
  1317  0001FA  0100               	movlb	0	; () banked
  1318  0001FC  5161               	movf	(singleToBit@start+1)& (0+255),w,b
  1319  0001FE  0100               	movlb	0	; () banked
  1320  000200  2169               	addwfc	(singleToBit@i+1)& (0+255),w,b
  1321  000202  0100               	movlb	0	; () banked
  1322  000204  6F63               	movwf	(??_singleToBit+1)& (0+255),b
  1323  000206  90D8               	bcf	status,0,c
  1324  000208  0100               	movlb	0	; () banked
  1325  00020A  3762               	rlcf	??_singleToBit& (0+255),f,b
  1326  00020C  3763               	rlcf	(??_singleToBit+1)& (0+255),f,b
  1327  00020E  0EF7               	movlw	low _singleArray
  1328  000210  0100               	movlb	0	; () banked
  1329  000212  2562               	addwf	??_singleToBit& (0+255),w,b
  1330  000214  6ED9               	movwf	fsr2l,c
  1331  000216  0E03               	movlw	high _singleArray
  1332  000218  0100               	movlb	0	; () banked
  1333  00021A  2163               	addwfc	(??_singleToBit+1)& (0+255),w,b
  1334  00021C  6EDA               	movwf	fsr2h,c
  1335  00021E  04DE               	decf	postinc2,w,c
  1336  000220  10DE               	iorwf	postinc2,w,c
  1337  000222  A4D8               	btfss	status,2,c
  1338  000224  D006               	goto	l2162
  1339  000226  D79D               	goto	l2140
  1340  000228                     l2160:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;RFID.c: 142: lastVal = 0;
  1344  000228  0E00               	movlw	0
  1345  00022A  0100               	movlb	0	; () banked
  1346  00022C  6F67               	movwf	(singleToBit@lastVal+1)& (0+255),b
  1347  00022E  0E00               	movlw	0
  1348  000230  D030               	goto	L4
  1349  000232                     l2162:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;RFID.c: 144: else if(singleArray[i+start] == 2){
  1353  000232  0100               	movlb	0	; () banked
  1354  000234  5160               	movf	singleToBit@start& (0+255),w,b
  1355  000236  0100               	movlb	0	; () banked
  1356  000238  2568               	addwf	singleToBit@i& (0+255),w,b
  1357  00023A  0100               	movlb	0	; () banked
  1358  00023C  6F62               	movwf	??_singleToBit& (0+255),b
  1359  00023E  0100               	movlb	0	; () banked
  1360  000240  5161               	movf	(singleToBit@start+1)& (0+255),w,b
  1361  000242  0100               	movlb	0	; () banked
  1362  000244  2169               	addwfc	(singleToBit@i+1)& (0+255),w,b
  1363  000246  0100               	movlb	0	; () banked
  1364  000248  6F63               	movwf	(??_singleToBit+1)& (0+255),b
  1365  00024A  90D8               	bcf	status,0,c
  1366  00024C  0100               	movlb	0	; () banked
  1367  00024E  3762               	rlcf	??_singleToBit& (0+255),f,b
  1368  000250  3763               	rlcf	(??_singleToBit+1)& (0+255),f,b
  1369  000252  0EF7               	movlw	low _singleArray
  1370  000254  0100               	movlb	0	; () banked
  1371  000256  2562               	addwf	??_singleToBit& (0+255),w,b
  1372  000258  6ED9               	movwf	fsr2l,c
  1373  00025A  0E03               	movlw	high _singleArray
  1374  00025C  0100               	movlb	0	; () banked
  1375  00025E  2163               	addwfc	(??_singleToBit+1)& (0+255),w,b
  1376  000260  6EDA               	movwf	fsr2h,c
  1377  000262  0E02               	movlw	2
  1378  000264  18DE               	xorwf	postinc2,w,c
  1379  000266  10DE               	iorwf	postinc2,w,c
  1380  000268  A4D8               	btfss	status,2,c
  1381  00026A  D015               	goto	l2168
  1382  00026C                     L6:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;RFID.c: 145: bitArray[i] = 1;
  1386  00026C  90D8               	bcf	status,0,c
  1387  00026E  0100               	movlb	0	; () banked
  1388  000270  3568               	rlcf	singleToBit@i& (0+255),w,b
  1389  000272  6ED9               	movwf	fsr2l,c
  1390  000274  0100               	movlb	0	; () banked
  1391  000276  3569               	rlcf	(singleToBit@i+1)& (0+255),w,b
  1392  000278  6EDA               	movwf	fsr2h,c
  1393  00027A  0E65               	movlw	low _bitArray
  1394  00027C  26D9               	addwf	fsr2l,f,c
  1395  00027E  0E02               	movlw	high _bitArray
  1396  000280  22DA               	addwfc	fsr2h,f,c
  1397  000282  0E01               	movlw	1
  1398  000284  6EDE               	movwf	postinc2,c
  1399  000286  0E00               	movlw	0
  1400  000288  6EDD               	movwf	postdec2,c
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;RFID.c: 146: lastVal = 1;
  1404  00028A  0E00               	movlw	0
  1405  00028C  0100               	movlb	0	; () banked
  1406  00028E  6F67               	movwf	(singleToBit@lastVal+1)& (0+255),b
  1407  000290  0E01               	movlw	1
  1408  000292                     L4:
  1409  000292  6F66               	movwf	singleToBit@lastVal& (0+255),b
  1410                           
  1411                           ;RFID.c: 147: }
  1412  000294  D01D               	goto	l2170
  1413  000296                     l2168:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;RFID.c: 148: else if(singleArray[i+start] == 3){
  1417  000296  0100               	movlb	0	; () banked
  1418  000298  5160               	movf	singleToBit@start& (0+255),w,b
  1419  00029A  0100               	movlb	0	; () banked
  1420  00029C  2568               	addwf	singleToBit@i& (0+255),w,b
  1421  00029E  0100               	movlb	0	; () banked
  1422  0002A0  6F62               	movwf	??_singleToBit& (0+255),b
  1423  0002A2  0100               	movlb	0	; () banked
  1424  0002A4  5161               	movf	(singleToBit@start+1)& (0+255),w,b
  1425  0002A6  0100               	movlb	0	; () banked
  1426  0002A8  2169               	addwfc	(singleToBit@i+1)& (0+255),w,b
  1427  0002AA  0100               	movlb	0	; () banked
  1428  0002AC  6F63               	movwf	(??_singleToBit+1)& (0+255),b
  1429  0002AE  90D8               	bcf	status,0,c
  1430  0002B0  0100               	movlb	0	; () banked
  1431  0002B2  3762               	rlcf	??_singleToBit& (0+255),f,b
  1432  0002B4  3763               	rlcf	(??_singleToBit+1)& (0+255),f,b
  1433  0002B6  0EF7               	movlw	low _singleArray
  1434  0002B8  0100               	movlb	0	; () banked
  1435  0002BA  2562               	addwf	??_singleToBit& (0+255),w,b
  1436  0002BC  6ED9               	movwf	fsr2l,c
  1437  0002BE  0E03               	movlw	high _singleArray
  1438  0002C0  0100               	movlb	0	; () banked
  1439  0002C2  2163               	addwfc	(??_singleToBit+1)& (0+255),w,b
  1440  0002C4  6EDA               	movwf	fsr2h,c
  1441  0002C6  0E03               	movlw	3
  1442  0002C8  18DE               	xorwf	postinc2,w,c
  1443  0002CA  10DE               	iorwf	postinc2,w,c
  1444  0002CC  B4D8               	btfsc	status,2,c
  1445  0002CE  D7FF               	goto	l630
  1446  0002D0                     l2170:
  1447  0002D0  0100               	movlb	0	; () banked
  1448  0002D2  4B68               	infsnz	singleToBit@i& (0+255),f,b
  1449  0002D4  2B69               	incf	(singleToBit@i+1)& (0+255),f,b
  1450                           
  1451                           ; BSR set to: 0
  1452  0002D6  0100               	movlb	0	; () banked
  1453  0002D8  BF69               	btfsc	(singleToBit@i+1)& (0+255),7,b
  1454  0002DA  D6F2               	goto	l2126
  1455  0002DC  0100               	movlb	0	; () banked
  1456  0002DE  5169               	movf	(singleToBit@i+1)& (0+255),w,b
  1457  0002E0  E101               	bnz	l632
  1458  0002E2  D6E7               	goto	L5
  1459  0002E4                     l632:
  1460                           
  1461                           ; BSR set to: 0
  1462  0002E4  0012               	return		;funcret
  1463  0002E6                     __end_of_singleToBit:
  1464                           	opt stack 0
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           postdec1	equ	0xFE5
  1468                           fsr1h	equ	0xFE2
  1469                           fsr1l	equ	0xFE1
  1470                           postinc2	equ	0xFDE
  1471                           postdec2	equ	0xFDD
  1472                           fsr2h	equ	0xFDA
  1473                           fsr2l	equ	0xFD9
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _setup_Interrupt *****************
  1477 ;; Defined at:
  1478 ;;		line 61 in file "init.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2    4[None  ] int 
  1485 ;; Registers used:
  1486 ;;		None
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    2
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text4
  1507  0009E6                     __ptext4:
  1508                           	opt stack 0
  1509  0009E6                     _setup_Interrupt:
  1510                           	opt stack 28
  1511                           
  1512                           ;init.c: 62: RCONbits.IPEN = 1;
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;incstack = 0
  1516  0009E6  8ED0               	bsf	4048,7,c	;volatile
  1517                           
  1518                           ;init.c: 63: INTCONbits.GIEH = 1;
  1519  0009E8  8EF2               	bsf	intcon,7,c	;volatile
  1520                           
  1521                           ;init.c: 64: INTCONbits.GIEL = 1;
  1522  0009EA  8CF2               	bsf	intcon,6,c	;volatile
  1523                           
  1524                           ;init.c: 65: INTCONbits.TMR0IE = 1;
  1525  0009EC  8AF2               	bsf	intcon,5,c	;volatile
  1526  0009EE  0012               	return		;funcret
  1527  0009F0                     __end_of_setup_Interrupt:
  1528                           	opt stack 0
  1529                           intcon	equ	0xFF2
  1530                           postinc0	equ	0xFEE
  1531                           wreg	equ	0xFE8
  1532                           postdec1	equ	0xFE5
  1533                           fsr1h	equ	0xFE2
  1534                           fsr1l	equ	0xFE1
  1535                           postinc2	equ	0xFDE
  1536                           postdec2	equ	0xFDD
  1537                           fsr2h	equ	0xFDA
  1538                           fsr2l	equ	0xFD9
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _findStart *****************
  1542 ;; Defined at:
  1543 ;;		line 98 in file "RFID.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  i               2    6[BANK0 ] int 
  1548 ;;  count           2    4[BANK0 ] int 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  2    0[BANK0 ] int 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1559 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;Total ram usage:        8 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    2
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text5
  1573  000762                     __ptext5:
  1574                           	opt stack 0
  1575  000762                     _findStart:
  1576                           	opt stack 28
  1577                           
  1578                           ;RFID.c: 99: int count = 0;
  1579                           
  1580                           ;incstack = 0
  1581  000762  0E00               	movlw	0
  1582  000764  0100               	movlb	0	; () banked
  1583  000766  6F65               	movwf	(findStart@count+1)& (0+255),b
  1584  000768  0E00               	movlw	0
  1585  00076A  6F64               	movwf	findStart@count& (0+255),b
  1586                           
  1587                           ;RFID.c: 101: for(int i = 0; i<200; i++){
  1588  00076C  0E00               	movlw	0
  1589  00076E  0100               	movlb	0	; () banked
  1590  000770  6F67               	movwf	(findStart@i+1)& (0+255),b
  1591  000772  0E00               	movlw	0
  1592  000774  6F66               	movwf	findStart@i& (0+255),b
  1593  000776                     l2100:
  1594                           
  1595                           ; BSR set to: 0
  1596  000776  0100               	movlb	0	; () banked
  1597  000778  BF67               	btfsc	(findStart@i+1)& (0+255),7,b
  1598  00077A  D008               	goto	l2104
  1599  00077C  0100               	movlb	0	; () banked
  1600  00077E  5167               	movf	(findStart@i+1)& (0+255),w,b
  1601  000780  E132               	bnz	l610
  1602  000782  0EC8               	movlw	200
  1603  000784  0100               	movlb	0	; () banked
  1604  000786  5D66               	subwf	findStart@i& (0+255),w,b
  1605  000788  B0D8               	btfsc	status,0,c
  1606  00078A  0012               	return	
  1607  00078C                     l2104:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;RFID.c: 102: if(singleArray[i] == 1){
  1611  00078C  90D8               	bcf	status,0,c
  1612  00078E  0100               	movlb	0	; () banked
  1613  000790  3566               	rlcf	findStart@i& (0+255),w,b
  1614  000792  6ED9               	movwf	fsr2l,c
  1615  000794  0100               	movlb	0	; () banked
  1616  000796  3567               	rlcf	(findStart@i+1)& (0+255),w,b
  1617  000798  6EDA               	movwf	fsr2h,c
  1618  00079A  0EF7               	movlw	low _singleArray
  1619  00079C  26D9               	addwf	fsr2l,f,c
  1620  00079E  0E03               	movlw	high _singleArray
  1621  0007A0  22DA               	addwfc	fsr2h,f,c
  1622  0007A2  04DE               	decf	postinc2,w,c
  1623  0007A4  10DE               	iorwf	postinc2,w,c
  1624  0007A6  A4D8               	btfss	status,2,c
  1625  0007A8  D015               	goto	l2114
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;RFID.c: 103: count++;
  1629  0007AA  0100               	movlb	0	; () banked
  1630  0007AC  4B64               	infsnz	findStart@count& (0+255),f,b
  1631  0007AE  2B65               	incf	(findStart@count+1)& (0+255),f,b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;RFID.c: 104: if(count == 9){
  1635  0007B0  0E09               	movlw	9
  1636  0007B2  0100               	movlb	0	; () banked
  1637  0007B4  1964               	xorwf	findStart@count& (0+255),w,b
  1638  0007B6  0100               	movlb	0	; () banked
  1639  0007B8  1165               	iorwf	(findStart@count+1)& (0+255),w,b
  1640  0007BA  A4D8               	btfss	status,2,c
  1641  0007BC  D010               	goto	l2116
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;RFID.c: 105: return i+1;
  1645  0007BE  0E01               	movlw	1
  1646  0007C0  0100               	movlb	0	; () banked
  1647  0007C2  2566               	addwf	findStart@i& (0+255),w,b
  1648  0007C4  0100               	movlb	0	; () banked
  1649  0007C6  6F60               	movwf	?_findStart& (0+255),b
  1650  0007C8  0E00               	movlw	0
  1651  0007CA  0100               	movlb	0	; () banked
  1652  0007CC  2167               	addwfc	(findStart@i+1)& (0+255),w,b
  1653  0007CE  0100               	movlb	0	; () banked
  1654  0007D0  6F61               	movwf	(?_findStart+1)& (0+255),b
  1655                           
  1656                           ; BSR set to: 0
  1657  0007D2  0012               	return	
  1658  0007D4                     l2114:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;RFID.c: 108: else{
  1662                           ;RFID.c: 109: count = 0;
  1663  0007D4  0E00               	movlw	0
  1664  0007D6  0100               	movlb	0	; () banked
  1665  0007D8  6F65               	movwf	(findStart@count+1)& (0+255),b
  1666  0007DA  0E00               	movlw	0
  1667  0007DC  6F64               	movwf	findStart@count& (0+255),b
  1668  0007DE                     l2116:
  1669                           
  1670                           ; BSR set to: 0
  1671  0007DE  0100               	movlb	0	; () banked
  1672  0007E0  4B66               	infsnz	findStart@i& (0+255),f,b
  1673  0007E2  2B67               	incf	(findStart@i+1)& (0+255),f,b
  1674  0007E4  D7C8               	goto	l2100
  1675  0007E6                     l610:
  1676                           
  1677                           ; BSR set to: 0
  1678  0007E6  0012               	return		;funcret
  1679  0007E8                     __end_of_findStart:
  1680                           	opt stack 0
  1681                           intcon	equ	0xFF2
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1h	equ	0xFE2
  1686                           fsr1l	equ	0xFE1
  1687                           postinc2	equ	0xFDE
  1688                           postdec2	equ	0xFDD
  1689                           fsr2h	equ	0xFDA
  1690                           fsr2l	equ	0xFD9
  1691                           status	equ	0xFD8
  1692                           
  1693 ;; *************** function _InitDevice *****************
  1694 ;; Defined at:
  1695 ;;		line 9 in file "init.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;		None               void
  1702 ;; Registers used:
  1703 ;;		wreg, status,2
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1713 ;;Total ram usage:        0 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    2
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text6
  1724  0007E8                     __ptext6:
  1725                           	opt stack 0
  1726  0007E8                     _InitDevice:
  1727                           	opt stack 28
  1728                           
  1729                           ;init.c: 11: Interrupt_counter = 0;
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;incstack = 0
  1733  0007E8  0E00               	movlw	0
  1734  0007EA  6E16               	movwf	_Interrupt_counter+1,c
  1735  0007EC  0E00               	movlw	0
  1736  0007EE  6E15               	movwf	_Interrupt_counter,c
  1737                           
  1738                           ;init.c: 14: OSCCON = 0x60;
  1739  0007F0  0E60               	movlw	96
  1740  0007F2  6ED3               	movwf	4051,c	;volatile
  1741                           
  1742                           ;init.c: 15: OSCCONbits.IRCF = 7;
  1743  0007F4  88D3               	bsf	4051,4,c	;volatile
  1744  0007F6  8AD3               	bsf	4051,5,c	;volatile
  1745  0007F8  8CD3               	bsf	4051,6,c	;volatile
  1746                           
  1747                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  1748  0007FA  8C9B               	bsf	3995,6,c	;volatile
  1749                           
  1750                           ;init.c: 19: heartbeatCount = 0;
  1751  0007FC  0E00               	movlw	0
  1752  0007FE  6E2A               	movwf	_heartbeatCount+1,c
  1753  000800  0E00               	movlw	0
  1754  000802  6E29               	movwf	_heartbeatCount,c
  1755                           
  1756                           ;init.c: 20: buttonWasPressed = 0;
  1757  000804  0E00               	movlw	0
  1758  000806  6E32               	movwf	_buttonWasPressed,c
  1759                           
  1760                           ;init.c: 23: ANCON0 = ANCON1 = 0x00;
  1761  000808  0E00               	movlw	0
  1762  00080A  010F               	movlb	15	; () banked
  1763  00080C  6F5C               	movwf	92,b	;volatile
  1764  00080E  CF5C FF5D          	movff	3932,3933	;volatile
  1765                           
  1766                           ; BSR set to: 15
  1767                           ;init.c: 24: TRISB = 0xFF;
  1768  000812  6893               	setf	3987,c	;volatile
  1769                           
  1770                           ;init.c: 27: TRISA = 0b01111111;
  1771  000814  0E7F               	movlw	127
  1772  000816  6E92               	movwf	3986,c	;volatile
  1773                           
  1774                           ; BSR set to: 15
  1775                           ;init.c: 28: LATAbits.LATA7 = 0;
  1776  000818  9E89               	bcf	3977,7,c	;volatile
  1777                           
  1778                           ;init.c: 31: TRISC = 0b00011000;
  1779  00081A  0E18               	movlw	24
  1780  00081C  6E94               	movwf	3988,c	;volatile
  1781                           
  1782                           ; BSR set to: 15
  1783                           ;init.c: 32: LATCbits.LATC6 = 0;
  1784  00081E  9C8B               	bcf	3979,6,c	;volatile
  1785                           
  1786                           ; BSR set to: 15
  1787                           ;init.c: 33: LATCbits.LATC7 = 0;
  1788  000820  9E8B               	bcf	3979,7,c	;volatile
  1789                           
  1790                           ; BSR set to: 15
  1791                           ;init.c: 39: T0CONbits.TMR0ON = 1;
  1792  000822  8ED5               	bsf	4053,7,c	;volatile
  1793                           
  1794                           ; BSR set to: 15
  1795                           ;init.c: 40: T0CONbits.T08BIT = 0;
  1796  000824  9CD5               	bcf	4053,6,c	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;init.c: 41: T0CONbits.T0CS = 0;
  1800  000826  9AD5               	bcf	4053,5,c	;volatile
  1801                           
  1802                           ; BSR set to: 15
  1803                           ;init.c: 43: T0CONbits.PSA = 0;
  1804  000828  96D5               	bcf	4053,3,c	;volatile
  1805                           
  1806                           ; BSR set to: 15
  1807                           ;init.c: 44: T0CONbits.T0PS = 7;
  1808  00082A  80D5               	bsf	4053,0,c	;volatile
  1809  00082C  82D5               	bsf	4053,1,c	;volatile
  1810  00082E  84D5               	bsf	4053,2,c	;volatile
  1811                           
  1812                           ;init.c: 51: MAP_BRAKE = 0;
  1813  000830  0E00               	movlw	0
  1814  000832  6E1A               	movwf	_MAP_BRAKE+1,c
  1815  000834  0E00               	movlw	0
  1816  000836  6E19               	movwf	_MAP_BRAKE,c
  1817                           
  1818                           ;init.c: 52: MAP_BACKLIGHT = 0;
  1819  000838  0E00               	movlw	0
  1820  00083A  6E18               	movwf	_MAP_BACKLIGHT+1,c
  1821  00083C  0E00               	movlw	0
  1822  00083E  6E17               	movwf	_MAP_BACKLIGHT,c
  1823                           
  1824                           ;init.c: 53: MAP_V_BLINK = 0;
  1825  000840  0E00               	movlw	0
  1826  000842  6E22               	movwf	_MAP_V_BLINK+1,c
  1827  000844  0E00               	movlw	0
  1828  000846  6E21               	movwf	_MAP_V_BLINK,c
  1829                           
  1830                           ;init.c: 54: MAP_H_BLINK = 0;
  1831  000848  0E00               	movlw	0
  1832  00084A  6E1E               	movwf	_MAP_H_BLINK+1,c
  1833  00084C  0E00               	movlw	0
  1834  00084E  6E1D               	movwf	_MAP_H_BLINK,c
  1835                           
  1836                           ;init.c: 55: MAP_DIRECTION = 0;
  1837  000850  0E00               	movlw	0
  1838  000852  6E1C               	movwf	_MAP_DIRECTION+1,c
  1839  000854  0E00               	movlw	0
  1840  000856  6E1B               	movwf	_MAP_DIRECTION,c
  1841                           
  1842                           ;init.c: 56: MAP_SAFETYPIN = 0;
  1843  000858  0E00               	movlw	0
  1844  00085A  6E20               	movwf	_MAP_SAFETYPIN+1,c
  1845  00085C  0E00               	movlw	0
  1846  00085E  6E1F               	movwf	_MAP_SAFETYPIN,c
  1847                           
  1848                           ; BSR set to: 15
  1849  000860  0012               	return		;funcret
  1850  000862                     __end_of_InitDevice:
  1851                           	opt stack 0
  1852                           intcon	equ	0xFF2
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           postdec1	equ	0xFE5
  1856                           fsr1h	equ	0xFE2
  1857                           fsr1l	equ	0xFE1
  1858                           postinc2	equ	0xFDE
  1859                           postdec2	equ	0xFDD
  1860                           fsr2h	equ	0xFDA
  1861                           fsr2l	equ	0xFD9
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function _I2CSetup *****************
  1865 ;; Defined at:
  1866 ;;		line 10 in file "I2C.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  i               2    0[BANK0 ] int 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;		None               void
  1873 ;; Registers used:
  1874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1883 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;Total ram usage:        2 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    2
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text7
  1895  000862                     __ptext7:
  1896                           	opt stack 0
  1897  000862                     _I2CSetup:
  1898                           	opt stack 28
  1899                           
  1900                           ;I2C.c: 12: SSPADD = 0x55;
  1901                           
  1902                           ; BSR set to: 15
  1903                           ;incstack = 0
  1904  000862  0E55               	movlw	85
  1905  000864  6EC8               	movwf	4040,c	;volatile
  1906                           
  1907                           ;I2C.c: 13: SSPCON1 = 0x36;
  1908  000866  0E36               	movlw	54
  1909  000868  6EC6               	movwf	4038,c	;volatile
  1910                           
  1911                           ;I2C.c: 16: SSPSTAT = 0x00;
  1912  00086A  0E00               	movlw	0
  1913  00086C  6EC7               	movwf	4039,c	;volatile
  1914                           
  1915                           ;I2C.c: 17: SSPCON2 = 0x01;
  1916  00086E  0E01               	movlw	1
  1917  000870  6EC5               	movwf	4037,c	;volatile
  1918                           
  1919                           ;I2C.c: 19: PIR1bits.SSPIF = 0;
  1920  000872  969E               	bcf	3998,3,c	;volatile
  1921                           
  1922                           ;I2C.c: 20: PIE1bits.SSPIE = 1;
  1923  000874  869D               	bsf	3997,3,c	;volatile
  1924                           
  1925                           ;I2C.c: 21: INTCONbits.GIE_GIEH = 1;
  1926  000876  8EF2               	bsf	intcon,7,c	;volatile
  1927                           
  1928                           ;I2C.c: 22: INTCONbits.PEIE_GIEL = 1;
  1929  000878  8CF2               	bsf	intcon,6,c	;volatile
  1930                           
  1931                           ;I2C.c: 25: for(int i = 0; i<16; i++){
  1932  00087A  0E00               	movlw	0
  1933  00087C  0100               	movlb	0	; () banked
  1934  00087E  6F61               	movwf	(I2CSetup@i+1)& (0+255),b
  1935  000880  0E00               	movlw	0
  1936  000882  6F60               	movwf	I2CSetup@i& (0+255),b
  1937  000884                     l2084:
  1938                           
  1939                           ; BSR set to: 0
  1940  000884  0100               	movlb	0	; () banked
  1941  000886  BF61               	btfsc	(I2CSetup@i+1)& (0+255),7,b
  1942  000888  D008               	goto	l2088
  1943  00088A  0100               	movlb	0	; () banked
  1944  00088C  5161               	movf	(I2CSetup@i+1)& (0+255),w,b
  1945  00088E  E113               	bnz	l2094
  1946  000890  0E10               	movlw	16
  1947  000892  0100               	movlb	0	; () banked
  1948  000894  5D60               	subwf	I2CSetup@i& (0+255),w,b
  1949  000896  B0D8               	btfsc	status,0,c
  1950  000898  D00E               	goto	l2094
  1951  00089A                     l2088:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;I2C.c: 26: i2c_reg_map[i] = 0;
  1955  00089A  0E01               	movlw	low _i2c_reg_map
  1956  00089C  0100               	movlb	0	; () banked
  1957  00089E  2560               	addwf	I2CSetup@i& (0+255),w,b
  1958  0008A0  6ED9               	movwf	fsr2l,c
  1959  0008A2  0E00               	movlw	high _i2c_reg_map
  1960  0008A4  0100               	movlb	0	; () banked
  1961  0008A6  2161               	addwfc	(I2CSetup@i+1)& (0+255),w,b
  1962  0008A8  6EDA               	movwf	fsr2h,c
  1963  0008AA  0E00               	movlw	0
  1964  0008AC  6EDF               	movwf	indf2,c
  1965                           
  1966                           ; BSR set to: 0
  1967  0008AE  0100               	movlb	0	; () banked
  1968  0008B0  4B60               	infsnz	I2CSetup@i& (0+255),f,b
  1969  0008B2  2B61               	incf	(I2CSetup@i+1)& (0+255),f,b
  1970  0008B4  D7E7               	goto	l2084
  1971  0008B6                     l2094:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;I2C.c: 27: }
  1975                           ;I2C.c: 30: i2c_reg_map[8] = 1;
  1976  0008B6  0E01               	movlw	1
  1977  0008B8  6E09               	movwf	_i2c_reg_map+8,c	;volatile
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;I2C.c: 31: i2c_reg_map[temp_D2] = 1;
  1981  0008BA  5036               	movf	_temp_D2,w,c
  1982  0008BC  0D01               	mullw	1
  1983  0008BE  0E01               	movlw	low _i2c_reg_map
  1984  0008C0  24F3               	addwf	prodl,w,c
  1985  0008C2  6ED9               	movwf	fsr2l,c
  1986  0008C4  0E00               	movlw	high _i2c_reg_map
  1987  0008C6  20F4               	addwfc	prodh,w,c
  1988  0008C8  6EDA               	movwf	fsr2h,c
  1989  0008CA  0E01               	movlw	1
  1990  0008CC  6EDF               	movwf	indf2,c
  1991                           
  1992                           ; BSR set to: 0
  1993  0008CE  0012               	return		;funcret
  1994  0008D0                     __end_of_I2CSetup:
  1995                           	opt stack 0
  1996                           prodh	equ	0xFF4
  1997                           prodl	equ	0xFF3
  1998                           intcon	equ	0xFF2
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           postdec1	equ	0xFE5
  2002                           fsr1h	equ	0xFE2
  2003                           fsr1l	equ	0xFE1
  2004                           indf2	equ	0xFDF
  2005                           postinc2	equ	0xFDE
  2006                           postdec2	equ	0xFDD
  2007                           fsr2h	equ	0xFDA
  2008                           fsr2l	equ	0xFD9
  2009                           status	equ	0xFD8
  2010                           
  2011 ;; *************** function _ECAN_Transmit *****************
  2012 ;; Defined at:
  2013 ;;		line 296 in file "ECAN.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  SIDH            1    wreg     unsigned char 
  2016 ;;  SIDL            1    0[BANK0 ] unsigned char 
  2017 ;;  DLC             1    1[BANK0 ] unsigned char 
  2018 ;;  TRANSMIT_ID     1    2[BANK0 ] unsigned char 
  2019 ;;  DATA1           1    3[BANK0 ] unsigned char 
  2020 ;;  DATA2           1    4[BANK0 ] unsigned char 
  2021 ;;  DATA3           1    5[BANK0 ] unsigned char 
  2022 ;;  DATA4           1    6[BANK0 ] unsigned char 
  2023 ;;  DATA5           1    7[BANK0 ] unsigned char 
  2024 ;;  DATA6           1    8[BANK0 ] unsigned char 
  2025 ;;  DATA7           1    9[BANK0 ] unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  SIDH            1   10[BANK0 ] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;		None               void
  2030 ;; Registers used:
  2031 ;;		wreg, status,2
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2037 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;Total ram usage:       11 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    2
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text8
  2052  000936                     __ptext8:
  2053                           	opt stack 0
  2054  000936                     _ECAN_Transmit:
  2055                           	opt stack 28
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;incstack = 0
  2059                           ;ECAN_Transmit@SIDH stored from wreg
  2060  000936  0100               	movlb	0	; () banked
  2061  000938  6F6A               	movwf	ECAN_Transmit@SIDH& (0+255),b
  2062                           
  2063                           ;ECAN.c: 308: TXB0EIDH = 0x00;
  2064  00093A  0E00               	movlw	0
  2065  00093C  010F               	movlb	15	; () banked
  2066  00093E  6F23               	movwf	35,b	;volatile
  2067                           
  2068                           ;ECAN.c: 309: TXB0EIDL = 0x00;
  2069  000940  0E00               	movlw	0
  2070  000942  010F               	movlb	15	; () banked
  2071  000944  6F24               	movwf	36,b	;volatile
  2072                           
  2073                           ; BSR set to: 15
  2074                           ;ECAN.c: 312: TXB0SIDH = SIDH;
  2075  000946  C06A  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  2076                           
  2077                           ; BSR set to: 15
  2078                           ;ECAN.c: 313: TXB0SIDL = SIDL;
  2079  00094A  C060  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  2080                           
  2081                           ; BSR set to: 15
  2082                           ;ECAN.c: 314: TXB0DLC = DLC;
  2083  00094E  C061  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  2084                           
  2085                           ; BSR set to: 15
  2086                           ;ECAN.c: 323: TXB0D0 = TRANSMIT_ID;
  2087  000952  C062  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  2088                           
  2089                           ; BSR set to: 15
  2090                           ;ECAN.c: 324: TXB0D1 = DATA1;
  2091  000956  C063  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  2092                           
  2093                           ; BSR set to: 15
  2094                           ;ECAN.c: 325: TXB0D2 = DATA2;
  2095  00095A  C064  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  2096                           
  2097                           ; BSR set to: 15
  2098                           ;ECAN.c: 326: TXB0D3 = DATA3;
  2099  00095E  C065  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  2100                           
  2101                           ; BSR set to: 15
  2102                           ;ECAN.c: 327: TXB0D4 = DATA4;
  2103  000962  C066  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  2104                           
  2105                           ; BSR set to: 15
  2106                           ;ECAN.c: 328: TXB0D5 = DATA5;
  2107  000966  C067  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  2108                           
  2109                           ; BSR set to: 15
  2110                           ;ECAN.c: 329: TXB0D6 = DATA6;
  2111  00096A  C068  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  2112                           
  2113                           ; BSR set to: 15
  2114                           ;ECAN.c: 330: TXB0D7 = DATA7;
  2115  00096E  C069  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  2116                           
  2117                           ; BSR set to: 15
  2118                           ;ECAN.c: 332: TXB0CONbits.TXREQ = 1;
  2119  000972  010F               	movlb	15	; () banked
  2120  000974  8720               	bsf	32,3,b	;volatile
  2121                           
  2122                           ; BSR set to: 15
  2123  000976  0012               	return		;funcret
  2124  000978                     __end_of_ECAN_Transmit:
  2125                           	opt stack 0
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           intcon	equ	0xFF2
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           postdec1	equ	0xFE5
  2132                           fsr1h	equ	0xFE2
  2133                           fsr1l	equ	0xFE1
  2134                           indf2	equ	0xFDF
  2135                           postinc2	equ	0xFDE
  2136                           postdec2	equ	0xFDD
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _ECAN_Receive *****************
  2142 ;; Defined at:
  2143 ;;		line 215 in file "ECAN.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  RXMsgFlag       1    0[BANK0 ] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      unsigned char 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;Total ram usage:        1 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    2
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text9
  2172  000684                     __ptext9:
  2173                           	opt stack 0
  2174  000684                     _ECAN_Receive:
  2175                           	opt stack 28
  2176                           
  2177                           ;ECAN.c: 217: unsigned char RXMsgFlag;
  2178                           ;ECAN.c: 219: RXMsgFlag = 0x00;
  2179                           
  2180                           ; BSR set to: 15
  2181                           ;incstack = 0
  2182  000684  0E00               	movlw	0
  2183  000686  0100               	movlb	0	; () banked
  2184  000688  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;ECAN.c: 221: if (RXB0CONbits.RXFUL)
  2188  00068A  AE60               	btfss	3936,7,c	;volatile
  2189  00068C  D01C               	goto	l398
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;ECAN.c: 222: {
  2193                           ;ECAN.c: 223: temp_EIDH = RXB0EIDH;
  2194  00068E  CF63 F03D          	movff	3939,_temp_EIDH	;volatile
  2195                           
  2196                           ;ECAN.c: 224: temp_EIDL = RXB0EIDL;
  2197  000692  CF64 F03E          	movff	3940,_temp_EIDL	;volatile
  2198                           
  2199                           ;ECAN.c: 225: temp_SIDH = RXB0SIDH;
  2200  000696  CF61 F03F          	movff	3937,_temp_SIDH	;volatile
  2201                           
  2202                           ;ECAN.c: 226: temp_SIDL = RXB0SIDL;
  2203  00069A  CF62 F040          	movff	3938,_temp_SIDL	;volatile
  2204                           
  2205                           ;ECAN.c: 227: temp_DLC = RXB0DLC;
  2206  00069E  CF65 F03C          	movff	3941,_temp_DLC	;volatile
  2207                           
  2208                           ;ECAN.c: 228: MAP_REC_BATTERYSTATUS = RXB0D0;
  2209  0006A2  CF66 F030          	movff	3942,_MAP_REC_BATTERYSTATUS	;volatile
  2210                           
  2211                           ;ECAN.c: 229: MAP_REC_VELOCITY = RXB0D1;
  2212  0006A6  CF67 F031          	movff	3943,_MAP_REC_VELOCITY	;volatile
  2213                           
  2214                           ;ECAN.c: 230: temp_D2 = RXB0D2;
  2215  0006AA  CF68 F036          	movff	3944,_temp_D2	;volatile
  2216                           
  2217                           ;ECAN.c: 231: temp_D3 = RXB0D3;
  2218  0006AE  CF69 F037          	movff	3945,_temp_D3	;volatile
  2219                           
  2220                           ;ECAN.c: 232: temp_D4 = RXB0D4;
  2221  0006B2  CF6A F038          	movff	3946,_temp_D4	;volatile
  2222                           
  2223                           ;ECAN.c: 233: temp_D5 = RXB0D5;
  2224  0006B6  CF6B F039          	movff	3947,_temp_D5	;volatile
  2225                           
  2226                           ;ECAN.c: 234: temp_D6 = RXB0D6;
  2227  0006BA  CF6C F03A          	movff	3948,_temp_D6	;volatile
  2228                           
  2229                           ;ECAN.c: 235: temp_D7 = RXB0D7;
  2230  0006BE  CF6D F03B          	movff	3949,_temp_D7	;volatile
  2231                           
  2232                           ;ECAN.c: 236: RXB0CONbits.RXFUL = 0;
  2233  0006C2  9E60               	bcf	3936,7,c	;volatile
  2234  0006C4  D03F               	goto	l2192
  2235  0006C6                     l398:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;ECAN.c: 239: else if (RXB1CONbits.RXFUL)
  2239  0006C6  010F               	movlb	15	; () banked
  2240  0006C8  AF30               	btfss	48,7,b	;volatile
  2241  0006CA  D01D               	goto	l400
  2242                           
  2243                           ; BSR set to: 15
  2244                           ;ECAN.c: 240: {
  2245                           ;ECAN.c: 241: temp_EIDH = RXB1EIDH;
  2246  0006CC  CF33 F03D          	movff	3891,_temp_EIDH	;volatile
  2247                           
  2248                           ;ECAN.c: 242: temp_EIDL = RXB1EIDL;
  2249  0006D0  CF34 F03E          	movff	3892,_temp_EIDL	;volatile
  2250                           
  2251                           ;ECAN.c: 243: temp_SIDH = RXB1SIDH;
  2252  0006D4  CF31 F03F          	movff	3889,_temp_SIDH	;volatile
  2253                           
  2254                           ;ECAN.c: 244: temp_SIDL = RXB1SIDL;
  2255  0006D8  CF32 F040          	movff	3890,_temp_SIDL	;volatile
  2256                           
  2257                           ;ECAN.c: 245: temp_DLC = RXB1DLC;
  2258  0006DC  CF35 F03C          	movff	3893,_temp_DLC	;volatile
  2259                           
  2260                           ;ECAN.c: 246: MAP_REC_BATTERYSTATUS = RXB1D0;
  2261  0006E0  CF36 F030          	movff	3894,_MAP_REC_BATTERYSTATUS	;volatile
  2262                           
  2263                           ;ECAN.c: 247: MAP_REC_VELOCITY = RXB1D1;
  2264  0006E4  CF37 F031          	movff	3895,_MAP_REC_VELOCITY	;volatile
  2265                           
  2266                           ;ECAN.c: 248: temp_D2 = RXB1D2;
  2267  0006E8  CF38 F036          	movff	3896,_temp_D2	;volatile
  2268                           
  2269                           ;ECAN.c: 249: temp_D3 = RXB1D3;
  2270  0006EC  CF39 F037          	movff	3897,_temp_D3	;volatile
  2271                           
  2272                           ;ECAN.c: 250: temp_D4 = RXB1D4;
  2273  0006F0  CF3A F038          	movff	3898,_temp_D4	;volatile
  2274                           
  2275                           ;ECAN.c: 251: temp_D5 = RXB1D5;
  2276  0006F4  CF3B F039          	movff	3899,_temp_D5	;volatile
  2277                           
  2278                           ;ECAN.c: 252: temp_D6 = RXB1D6;
  2279  0006F8  CF3C F03A          	movff	3900,_temp_D6	;volatile
  2280                           
  2281                           ;ECAN.c: 253: temp_D7 = RXB1D7;
  2282  0006FC  CF3D F03B          	movff	3901,_temp_D7	;volatile
  2283                           
  2284                           ;ECAN.c: 254: RXB1CONbits.RXFUL = 0;
  2285  000700  010F               	movlb	15	; () banked
  2286  000702  9F30               	bcf	48,7,b	;volatile
  2287  000704  D01F               	goto	l2192
  2288  000706                     l400:
  2289                           
  2290                           ; BSR set to: 15
  2291                           ;ECAN.c: 257: else if (B0CONbits.RXFUL)
  2292  000706  010E               	movlb	14	; () banked
  2293  000708  AF80               	btfss	128,7,b	;volatile
  2294  00070A  D01F               	goto	l2194
  2295                           
  2296                           ; BSR set to: 14
  2297                           ;ECAN.c: 258: {
  2298                           ;ECAN.c: 259: temp_EIDH = B0EIDH;
  2299  00070C  CE83 F03D          	movff	3715,_temp_EIDH	;volatile
  2300                           
  2301                           ;ECAN.c: 260: temp_EIDL = B0EIDL;
  2302  000710  CE84 F03E          	movff	3716,_temp_EIDL	;volatile
  2303                           
  2304                           ;ECAN.c: 261: temp_SIDH = B0SIDH;
  2305  000714  CE81 F03F          	movff	3713,_temp_SIDH	;volatile
  2306                           
  2307                           ;ECAN.c: 262: temp_SIDL = B0SIDL;
  2308  000718  CE82 F040          	movff	3714,_temp_SIDL	;volatile
  2309                           
  2310                           ;ECAN.c: 263: temp_DLC = B0DLC;
  2311  00071C  CE85 F03C          	movff	3717,_temp_DLC	;volatile
  2312                           
  2313                           ;ECAN.c: 264: MAP_REC_BATTERYSTATUS = B0D0;
  2314  000720  CE86 F030          	movff	3718,_MAP_REC_BATTERYSTATUS	;volatile
  2315                           
  2316                           ;ECAN.c: 265: MAP_REC_VELOCITY = B0D1;
  2317  000724  CE87 F031          	movff	3719,_MAP_REC_VELOCITY	;volatile
  2318                           
  2319                           ;ECAN.c: 266: temp_D2 = B0D2;
  2320  000728  CE88 F036          	movff	3720,_temp_D2	;volatile
  2321                           
  2322                           ;ECAN.c: 267: temp_D3 = B0D3;
  2323  00072C  CE89 F037          	movff	3721,_temp_D3	;volatile
  2324                           
  2325                           ;ECAN.c: 268: temp_D4 = B0D4;
  2326  000730  CE8A F038          	movff	3722,_temp_D4	;volatile
  2327                           
  2328                           ;ECAN.c: 269: temp_D5 = B0D5;
  2329  000734  CE8B F039          	movff	3723,_temp_D5	;volatile
  2330                           
  2331                           ;ECAN.c: 270: temp_D6 = B0D6;
  2332  000738  CE8C F03A          	movff	3724,_temp_D6	;volatile
  2333                           
  2334                           ;ECAN.c: 271: temp_D7 = B0D7;
  2335  00073C  CE8D F03B          	movff	3725,_temp_D7	;volatile
  2336                           
  2337                           ;ECAN.c: 273: B0CONbits.RXFUL = 0;
  2338  000740  010E               	movlb	14	; () banked
  2339  000742  9F80               	bcf	128,7,b	;volatile
  2340  000744                     l2192:
  2341                           
  2342                           ; BSR set to: 14
  2343                           ;ECAN.c: 274: RXMsgFlag = 0x01;
  2344  000744  0E01               	movlw	1
  2345  000746  0100               	movlb	0	; () banked
  2346  000748  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2347  00074A                     l2194:
  2348                           
  2349                           ;ECAN.c: 275: }
  2350                           ;ECAN.c: 277: if (RXMsgFlag == 0x01)
  2351  00074A  0100               	movlb	0	; () banked
  2352  00074C  0560               	decf	ECAN_Receive@RXMsgFlag& (0+255),w,b
  2353  00074E  A4D8               	btfss	status,2,c
  2354  000750  D006               	goto	l2206
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;ECAN.c: 278: {
  2358                           ;ECAN.c: 279: RXMsgFlag = 0x00;
  2359  000752  0E00               	movlw	0
  2360  000754  0100               	movlb	0	; () banked
  2361  000756  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;ECAN.c: 280: PIR5bits.RXB1IF = 0;
  2365  000758  9277               	bcf	3959,1,c	;volatile
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;ECAN.c: 281: return 1;
  2369  00075A  0E01               	movlw	1
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;ECAN.c: 282: }
  2373                           
  2374                           ; BSR set to: 0
  2375  00075C  0012               	return	
  2376  00075E                     l2206:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;ECAN.c: 283: else
  2380                           ;ECAN.c: 284: {
  2381                           ;ECAN.c: 285: return 0;
  2382  00075E  0E00               	movlw	0
  2383                           
  2384                           ; BSR set to: 0
  2385  000760  0012               	return	
  2386  000762                     __end_of_ECAN_Receive:
  2387                           	opt stack 0
  2388                           prodh	equ	0xFF4
  2389                           prodl	equ	0xFF3
  2390                           intcon	equ	0xFF2
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           postdec1	equ	0xFE5
  2394                           fsr1h	equ	0xFE2
  2395                           fsr1l	equ	0xFE1
  2396                           indf2	equ	0xFDF
  2397                           postinc2	equ	0xFDE
  2398                           postdec2	equ	0xFDD
  2399                           fsr2h	equ	0xFDA
  2400                           fsr2l	equ	0xFD9
  2401                           status	equ	0xFD8
  2402                           
  2403 ;; *************** function _Delay *****************
  2404 ;; Defined at:
  2405 ;;		line 7 in file "Other.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  count           2    0[BANK0 ] unsigned int 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;		None               void
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;Total ram usage:        2 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    2
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text10
  2434  0009CE                     __ptext10:
  2435                           	opt stack 0
  2436  0009CE                     _Delay:
  2437                           	opt stack 28
  2438  0009CE                     l2176:
  2439  0009CE  0100               	movlb	0	; () banked
  2440  0009D0  0760               	decf	Delay@count& (0+255),f,b
  2441  0009D2  A0D8               	btfss	status,0,c
  2442  0009D4  0761               	decf	(Delay@count+1)& (0+255),f,b
  2443  0009D6  0100               	movlb	0	; () banked
  2444  0009D8  2960               	incf	Delay@count& (0+255),w,b
  2445  0009DA  E1F9               	bnz	l2176
  2446  0009DC  0100               	movlb	0	; () banked
  2447  0009DE  2961               	incf	(Delay@count+1)& (0+255),w,b
  2448  0009E0  B4D8               	btfsc	status,2,c
  2449  0009E2  0012               	return	
  2450  0009E4  D7F4               	goto	l2176
  2451  0009E6                     __end_of_Delay:
  2452                           	opt stack 0
  2453                           prodh	equ	0xFF4
  2454                           prodl	equ	0xFF3
  2455                           intcon	equ	0xFF2
  2456                           postinc0	equ	0xFEE
  2457                           wreg	equ	0xFE8
  2458                           postdec1	equ	0xFE5
  2459                           fsr1h	equ	0xFE2
  2460                           fsr1l	equ	0xFE1
  2461                           indf2	equ	0xFDF
  2462                           postinc2	equ	0xFDE
  2463                           postdec2	equ	0xFDD
  2464                           fsr2h	equ	0xFDA
  2465                           fsr2l	equ	0xFD9
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function _CANSetup *****************
  2469 ;; Defined at:
  2470 ;;		line 104 in file "ECAN.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;		None               void
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    2
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text11
  2499  000448                     __ptext11:
  2500                           	opt stack 0
  2501  000448                     _CANSetup:
  2502                           	opt stack 28
  2503                           
  2504                           ;ECAN.c: 107: CANCON = 0x80;
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;incstack = 0
  2508  000448  0E80               	movlw	128
  2509  00044A  6E6F               	movwf	3951,c	;volatile
  2510  00044C                     l2030:
  2511  00044C  386E               	swapf	3950,w,c	;volatile
  2512  00044E  32E8               	rrcf	wreg,f,c
  2513  000450  0B07               	andlw	7
  2514  000452  0A04               	xorlw	4
  2515  000454  A4D8               	btfss	status,2,c
  2516  000456  D7FA               	goto	l2030
  2517                           
  2518                           ;ECAN.c: 111: ECANCON = 0x40;
  2519  000458  0E40               	movlw	64
  2520  00045A  6E72               	movwf	3954,c	;volatile
  2521                           
  2522                           ;ECAN.c: 115: BRGCON1 = 0x81;
  2523  00045C  0E81               	movlw	129
  2524  00045E  010E               	movlb	14	; () banked
  2525  000460  6F43               	movwf	67,b	;volatile
  2526                           
  2527                           ;ECAN.c: 116: BRGCON2 = 0xB8;
  2528  000462  0EB8               	movlw	184
  2529  000464  010E               	movlb	14	; () banked
  2530  000466  6F44               	movwf	68,b	;volatile
  2531                           
  2532                           ;ECAN.c: 117: BRGCON3 = 0x05;
  2533  000468  0E05               	movlw	5
  2534  00046A  010E               	movlb	14	; () banked
  2535  00046C  6F45               	movwf	69,b	;volatile
  2536                           
  2537                           ;ECAN.c: 122: BSEL0 = 0xF8;
  2538  00046E  0EF8               	movlw	248
  2539  000470  010E               	movlb	14	; () banked
  2540  000472  6F7D               	movwf	125,b	;volatile
  2541                           
  2542                           ;ECAN.c: 126: RXM0EIDH = 0x00;
  2543  000474  0E00               	movlw	0
  2544  000476  010E               	movlb	14	; () banked
  2545  000478  6FFA               	movwf	250,b	;volatile
  2546                           
  2547                           ;ECAN.c: 127: RXM0EIDL = 0x00;
  2548  00047A  0E00               	movlw	0
  2549  00047C  010E               	movlb	14	; () banked
  2550  00047E  6FFB               	movwf	251,b	;volatile
  2551                           
  2552                           ; BSR set to: 14
  2553                           ;ECAN.c: 128: RXM0SIDH = 0xFF;
  2554  000480  010E               	movlb	14	; () banked
  2555  000482  69F8               	setf	248,b	;volatile
  2556                           
  2557                           ;ECAN.c: 129: RXM0SIDL = 0xE0;
  2558  000484  0EE0               	movlw	224
  2559  000486  010E               	movlb	14	; () banked
  2560  000488  6FF9               	movwf	249,b	;volatile
  2561                           
  2562                           ;ECAN.c: 132: RXM1EIDH = 0x00;
  2563  00048A  0E00               	movlw	0
  2564  00048C  010E               	movlb	14	; () banked
  2565  00048E  6FFE               	movwf	254,b	;volatile
  2566                           
  2567                           ;ECAN.c: 133: RXM1EIDL = 0x00;
  2568  000490  0E00               	movlw	0
  2569  000492  010E               	movlb	14	; () banked
  2570  000494  6FFF               	movwf	255,b	;volatile
  2571                           
  2572                           ; BSR set to: 14
  2573                           ;ECAN.c: 134: RXM1SIDH = 0xFF;
  2574  000496  010E               	movlb	14	; () banked
  2575  000498  69FC               	setf	252,b	;volatile
  2576                           
  2577                           ;ECAN.c: 135: RXM1SIDL = 0xE0;
  2578  00049A  0EE0               	movlw	224
  2579  00049C  010E               	movlb	14	; () banked
  2580  00049E  6FFD               	movwf	253,b	;volatile
  2581                           
  2582                           ;ECAN.c: 139: RXFCON0 = 0x07;
  2583  0004A0  0E07               	movlw	7
  2584  0004A2  010E               	movlb	14	; () banked
  2585  0004A4  6F46               	movwf	70,b	;volatile
  2586                           
  2587                           ;ECAN.c: 140: RXFCON1 = 0x00;
  2588  0004A6  0E00               	movlw	0
  2589  0004A8  010E               	movlb	14	; () banked
  2590  0004AA  6F47               	movwf	71,b	;volatile
  2591                           
  2592                           ;ECAN.c: 143: MSEL0 = 0xC0;
  2593  0004AC  0EC0               	movlw	192
  2594  0004AE  010E               	movlb	14	; () banked
  2595  0004B0  6F79               	movwf	121,b	;volatile
  2596                           
  2597                           ; BSR set to: 14
  2598                           ;ECAN.c: 144: MSEL1 = 0xFF;
  2599  0004B2  010E               	movlb	14	; () banked
  2600  0004B4  697A               	setf	122,b	;volatile
  2601                           
  2602                           ; BSR set to: 14
  2603                           ;ECAN.c: 145: MSEL2 = 0xFF;
  2604  0004B6  010E               	movlb	14	; () banked
  2605  0004B8  697B               	setf	123,b	;volatile
  2606                           
  2607                           ; BSR set to: 14
  2608                           ;ECAN.c: 146: MSEL3 = 0xFF;
  2609  0004BA  010E               	movlb	14	; () banked
  2610  0004BC  697C               	setf	124,b	;volatile
  2611                           
  2612                           ;ECAN.c: 150: RXFBCON0 = 0x10;
  2613  0004BE  0E10               	movlw	16
  2614  0004C0  010E               	movlb	14	; () banked
  2615  0004C2  6F71               	movwf	113,b	;volatile
  2616                           
  2617                           ;ECAN.c: 151: RXFBCON1 = 0xF2;
  2618  0004C4  0EF2               	movlw	242
  2619  0004C6  010E               	movlb	14	; () banked
  2620  0004C8  6F72               	movwf	114,b	;volatile
  2621                           
  2622                           ; BSR set to: 14
  2623                           ;ECAN.c: 153: RXFBCON2 = 0xFF;
  2624  0004CA  010E               	movlb	14	; () banked
  2625  0004CC  6973               	setf	115,b	;volatile
  2626                           
  2627                           ; BSR set to: 14
  2628                           ;ECAN.c: 154: RXFBCON3 = 0xFF;
  2629  0004CE  010E               	movlb	14	; () banked
  2630  0004D0  6974               	setf	116,b	;volatile
  2631                           
  2632                           ; BSR set to: 14
  2633                           ;ECAN.c: 155: RXFBCON4 = 0xFF;
  2634  0004D2  010E               	movlb	14	; () banked
  2635  0004D4  6975               	setf	117,b	;volatile
  2636                           
  2637                           ; BSR set to: 14
  2638                           ;ECAN.c: 156: RXFBCON5 = 0xFF;
  2639  0004D6  010E               	movlb	14	; () banked
  2640  0004D8  6976               	setf	118,b	;volatile
  2641                           
  2642                           ; BSR set to: 14
  2643                           ;ECAN.c: 157: RXFBCON6 = 0xFF;
  2644  0004DA  010E               	movlb	14	; () banked
  2645  0004DC  6977               	setf	119,b	;volatile
  2646                           
  2647                           ; BSR set to: 14
  2648                           ;ECAN.c: 158: RXFBCON7 = 0xFF;
  2649  0004DE  010E               	movlb	14	; () banked
  2650  0004E0  6978               	setf	120,b	;volatile
  2651                           
  2652                           ;ECAN.c: 164: RXF0EIDH = 0x00;
  2653  0004E2  0E00               	movlw	0
  2654  0004E4  010E               	movlb	14	; () banked
  2655  0004E6  6FE2               	movwf	226,b	;volatile
  2656                           
  2657                           ;ECAN.c: 165: RXF0EIDL = 0x00;
  2658  0004E8  0E00               	movlw	0
  2659  0004EA  010E               	movlb	14	; () banked
  2660  0004EC  6FE3               	movwf	227,b	;volatile
  2661                           
  2662                           ;ECAN.c: 166: RXF0SIDH = 0x32;
  2663  0004EE  0E32               	movlw	50
  2664  0004F0  010E               	movlb	14	; () banked
  2665  0004F2  6FE0               	movwf	224,b	;volatile
  2666                           
  2667                           ;ECAN.c: 167: RXF0SIDL = 0xC0;
  2668  0004F4  0EC0               	movlw	192
  2669  0004F6  010E               	movlb	14	; () banked
  2670  0004F8  6FE1               	movwf	225,b	;volatile
  2671                           
  2672                           ;ECAN.c: 168: RXF1EIDH = 0x00;
  2673  0004FA  0E00               	movlw	0
  2674  0004FC  010E               	movlb	14	; () banked
  2675  0004FE  6FE6               	movwf	230,b	;volatile
  2676                           
  2677                           ;ECAN.c: 169: RXF1EIDL = 0x00;
  2678  000500  0E00               	movlw	0
  2679  000502  010E               	movlb	14	; () banked
  2680  000504  6FE7               	movwf	231,b	;volatile
  2681                           
  2682                           ;ECAN.c: 170: RXF1SIDH = 0x33;
  2683  000506  0E33               	movlw	51
  2684  000508  010E               	movlb	14	; () banked
  2685  00050A  6FE4               	movwf	228,b	;volatile
  2686                           
  2687                           ;ECAN.c: 171: RXF1SIDL = 0x40;
  2688  00050C  0E40               	movlw	64
  2689  00050E  010E               	movlb	14	; () banked
  2690  000510  6FE5               	movwf	229,b	;volatile
  2691                           
  2692                           ;ECAN.c: 172: RXF2EIDH = 0x00;
  2693  000512  0E00               	movlw	0
  2694  000514  010E               	movlb	14	; () banked
  2695  000516  6FEA               	movwf	234,b	;volatile
  2696                           
  2697                           ;ECAN.c: 173: RXF2EIDL = 0x00;
  2698  000518  0E00               	movlw	0
  2699  00051A  010E               	movlb	14	; () banked
  2700  00051C  6FEB               	movwf	235,b	;volatile
  2701                           
  2702                           ;ECAN.c: 174: RXF2SIDH = 0x33;
  2703  00051E  0E33               	movlw	51
  2704  000520  010E               	movlb	14	; () banked
  2705  000522  6FE8               	movwf	232,b	;volatile
  2706                           
  2707                           ;ECAN.c: 175: RXF2SIDL = 0xC0;
  2708  000524  0EC0               	movlw	192
  2709  000526  010E               	movlb	14	; () banked
  2710  000528  6FE9               	movwf	233,b	;volatile
  2711                           
  2712                           ;ECAN.c: 178: if (0 ==1)
  2713  00052A  D00E               	goto	l2064
  2714  00052C                     l2058:
  2715  00052C  386E               	swapf	3950,w,c	;volatile
  2716  00052E  32E8               	rrcf	wreg,f,c
  2717  000530  0B07               	andlw	7
  2718  000532  0A40               	xorlw	64
  2719  000534  A4D8               	btfss	status,2,c
  2720  000536  D017               	goto	l2072
  2721  000538  D7F9               	goto	l2058
  2722  00053A                     l2062:
  2723  00053A  386E               	swapf	3950,w,c	;volatile
  2724  00053C  32E8               	rrcf	wreg,f,c
  2725  00053E  0B07               	andlw	7
  2726  000540  0A60               	xorlw	96
  2727  000542  A4D8               	btfss	status,2,c
  2728  000544  D010               	goto	l2072
  2729  000546  D7F9               	goto	l2062
  2730  000548                     l2064:
  2731                           
  2732                           ;ECAN.c: 189: CANCON = 0x00;
  2733  000548  0E00               	movlw	0
  2734  00054A  6E6F               	movwf	3951,c	;volatile
  2735  00054C                     l2066:
  2736  00054C  386E               	swapf	3950,w,c	;volatile
  2737  00054E  32E8               	rrcf	wreg,f,c
  2738  000550  0B07               	andlw	7
  2739  000552  0900               	iorlw	0
  2740  000554  A4D8               	btfss	status,2,c
  2741  000556  D007               	goto	l2072
  2742  000558  D7F9               	goto	l2066
  2743  00055A                     l2070:
  2744  00055A  386E               	swapf	3950,w,c	;volatile
  2745  00055C  32E8               	rrcf	wreg,f,c
  2746  00055E  0B07               	andlw	7
  2747  000560  0A40               	xorlw	64
  2748  000562  B4D8               	btfsc	status,2,c
  2749  000564  D7FA               	goto	l2070
  2750  000566                     l2072:
  2751                           
  2752                           ;ECAN.c: 197: }
  2753                           ;ECAN.c: 200: RXB0CON = 0x00;
  2754  000566  0E00               	movlw	0
  2755  000568  6E60               	movwf	3936,c	;volatile
  2756                           
  2757                           ;ECAN.c: 201: RXB1CON = 0x00;
  2758  00056A  0E00               	movlw	0
  2759  00056C  010F               	movlb	15	; () banked
  2760  00056E  6F30               	movwf	48,b	;volatile
  2761                           
  2762                           ; BSR set to: 15
  2763  000570  0012               	return		;funcret
  2764  000572                     __end_of_CANSetup:
  2765                           	opt stack 0
  2766                           prodh	equ	0xFF4
  2767                           prodl	equ	0xFF3
  2768                           intcon	equ	0xFF2
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           postdec1	equ	0xFE5
  2772                           fsr1h	equ	0xFE2
  2773                           fsr1l	equ	0xFE1
  2774                           indf2	equ	0xFDF
  2775                           postinc2	equ	0xFDE
  2776                           postdec2	equ	0xFDD
  2777                           fsr2h	equ	0xFDA
  2778                           fsr2l	equ	0xFD9
  2779                           status	equ	0xFD8
  2780                           
  2781 ;; *************** function _ISR *****************
  2782 ;; Defined at:
  2783 ;;		line 98 in file "main.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;Total ram usage:       14 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    1
  2804 ;; This function calls:
  2805 ;;		_sample
  2806 ;; This function is called by:
  2807 ;;		Interrupt level 2
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	intcode
  2812  000008                     __pintcode:
  2813                           	opt stack 0
  2814  000008                     _ISR:
  2815                           	opt stack 27
  2816                           
  2817                           ; BSR set to: 15
  2818                           ;incstack = 0
  2819  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2820  00000A  CFFA F042          	movff	pclath,??_ISR
  2821  00000E  CFFB F043          	movff	pclatu,??_ISR+1
  2822  000012  CFE9 F044          	movff	fsr0l,??_ISR+2
  2823  000016  CFEA F045          	movff	fsr0h,??_ISR+3
  2824  00001A  CFE1 F046          	movff	fsr1l,??_ISR+4
  2825  00001E  CFE2 F047          	movff	fsr1h,??_ISR+5
  2826  000022  CFD9 F048          	movff	fsr2l,??_ISR+6
  2827  000026  CFDA F049          	movff	fsr2h,??_ISR+7
  2828  00002A  CFF3 F04A          	movff	prodl,??_ISR+8
  2829  00002E  CFF4 F04B          	movff	prodh,??_ISR+9
  2830  000032  CFF6 F04C          	movff	tblptrl,??_ISR+10
  2831  000036  CFF7 F04D          	movff	tblptrh,??_ISR+11
  2832  00003A  CFF8 F04E          	movff	tblptru,??_ISR+12
  2833  00003E  CFF5 F04F          	movff	tablat,??_ISR+13
  2834                           
  2835                           ;main.c: 112: Interrupt_counter++;
  2836  000042  4A15               	infsnz	_Interrupt_counter,f,c
  2837  000044  2A16               	incf	_Interrupt_counter+1,f,c
  2838                           
  2839                           ;main.c: 114: if(Interrupt_counter == 2){
  2840  000046  0E02               	movlw	2
  2841  000048  1815               	xorwf	_Interrupt_counter,w,c
  2842  00004A  1016               	iorwf	_Interrupt_counter+1,w,c
  2843  00004C  A4D8               	btfss	status,2,c
  2844  00004E  D006               	goto	i2l111
  2845                           
  2846                           ;main.c: 116: sample();
  2847  000050  EC68  F004         	call	_sample	;wreg free
  2848                           
  2849                           ;main.c: 117: Interrupt_counter = 0;
  2850  000054  0E00               	movlw	0
  2851  000056  6E16               	movwf	_Interrupt_counter+1,c
  2852  000058  0E00               	movlw	0
  2853  00005A  6E15               	movwf	_Interrupt_counter,c
  2854  00005C                     i2l111:
  2855  00005C  C04F  FFF5         	movff	??_ISR+13,tablat
  2856  000060  C04E  FFF8         	movff	??_ISR+12,tblptru
  2857  000064  C04D  FFF7         	movff	??_ISR+11,tblptrh
  2858  000068  C04C  FFF6         	movff	??_ISR+10,tblptrl
  2859  00006C  C04B  FFF4         	movff	??_ISR+9,prodh
  2860  000070  C04A  FFF3         	movff	??_ISR+8,prodl
  2861  000074  C049  FFDA         	movff	??_ISR+7,fsr2h
  2862  000078  C048  FFD9         	movff	??_ISR+6,fsr2l
  2863  00007C  C047  FFE2         	movff	??_ISR+5,fsr1h
  2864  000080  C046  FFE1         	movff	??_ISR+4,fsr1l
  2865  000084  C045  FFEA         	movff	??_ISR+3,fsr0h
  2866  000088  C044  FFE9         	movff	??_ISR+2,fsr0l
  2867  00008C  C043  FFFB         	movff	??_ISR+1,pclatu
  2868  000090  C042  FFFA         	movff	??_ISR,pclath
  2869  000094  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2870  000096  0011               	retfie		f
  2871  000098                     __end_of_ISR:
  2872                           	opt stack 0
  2873                           pclatu	equ	0xFFB
  2874                           pclath	equ	0xFFA
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           prodh	equ	0xFF4
  2880                           prodl	equ	0xFF3
  2881                           intcon	equ	0xFF2
  2882                           postinc0	equ	0xFEE
  2883                           fsr0h	equ	0xFEA
  2884                           fsr0l	equ	0xFE9
  2885                           wreg	equ	0xFE8
  2886                           postdec1	equ	0xFE5
  2887                           fsr1h	equ	0xFE2
  2888                           fsr1l	equ	0xFE1
  2889                           indf2	equ	0xFDF
  2890                           postinc2	equ	0xFDE
  2891                           postdec2	equ	0xFDD
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _sample *****************
  2897 ;; Defined at:
  2898 ;;		line 39 in file "RFID.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;Total ram usage:        1 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_ISR
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text13
  2926  0008D0                     __ptext13:
  2927                           	opt stack 0
  2928  0008D0                     _sample:
  2929                           	opt stack 27
  2930                           
  2931                           ;RFID.c: 42: val = PORTBbits.RB0;
  2932                           
  2933                           ;incstack = 0
  2934  0008D0  A081               	btfss	3969,0,c	;volatile
  2935  0008D2  D003               	goto	i2u35_40
  2936  0008D4  6A41               	clrf	??_sample& (0+255),c
  2937  0008D6  2A41               	incf	??_sample& (0+255),f,c
  2938  0008D8  D001               	goto	i2u35_48
  2939  0008DA                     i2u35_40:
  2940  0008DA  6A41               	clrf	??_sample& (0+255),c
  2941  0008DC                     i2u35_48:
  2942  0008DC  5041               	movf	??_sample,w,c
  2943  0008DE  6E2D               	movwf	_val,c
  2944  0008E0  6A2E               	clrf	_val+1,c
  2945                           
  2946                           ;RFID.c: 43: bitlenctr++;
  2947  0008E2  4A23               	infsnz	_bitlenctr,f,c
  2948  0008E4  2A24               	incf	_bitlenctr+1,f,c
  2949                           
  2950                           ;RFID.c: 45: if(val != curState) {
  2951  0008E6  5025               	movf	_curState,w,c
  2952  0008E8  182D               	xorwf	_val,w,c
  2953  0008EA  E104               	bnz	i2u36_40
  2954  0008EC  5026               	movf	_curState+1,w,c
  2955  0008EE  182E               	xorwf	_val+1,w,c
  2956  0008F0  B4D8               	btfsc	status,2,c
  2957  0008F2  0012               	return	
  2958  0008F4                     i2u36_40:
  2959                           
  2960                           ;RFID.c: 47: curState = val;
  2961  0008F4  C02D  F025         	movff	_val,_curState
  2962  0008F8  C02E  F026         	movff	_val+1,_curState+1
  2963                           
  2964                           ;RFID.c: 48: if(val == 1) {
  2965  0008FC  042D               	decf	_val,w,c
  2966  0008FE  102E               	iorwf	_val+1,w,c
  2967  000900  A4D8               	btfss	status,2,c
  2968  000902  0012               	return	
  2969                           
  2970                           ;RFID.c: 50: if(rawIndex < 500) {
  2971  000904  BE2C               	btfsc	_rawIndex+1,7,c
  2972  000906  D006               	goto	i2l1618
  2973  000908  0EF4               	movlw	244
  2974  00090A  5C2B               	subwf	_rawIndex,w,c
  2975  00090C  0E01               	movlw	1
  2976  00090E  582C               	subwfb	_rawIndex+1,w,c
  2977  000910  B0D8               	btfsc	status,0,c
  2978  000912  D00B               	goto	i2l589
  2979  000914                     i2l1618:
  2980                           
  2981                           ;RFID.c: 51: raw[rawIndex++] = bitlenctr;
  2982  000914  0E71               	movlw	low _raw
  2983  000916  242B               	addwf	_rawIndex,w,c
  2984  000918  6ED9               	movwf	fsr2l,c
  2985  00091A  0E00               	movlw	high _raw
  2986  00091C  202C               	addwfc	_rawIndex+1,w,c
  2987  00091E  6EDA               	movwf	fsr2h,c
  2988  000920  C023  FFDF         	movff	_bitlenctr,indf2
  2989  000924  4A2B               	infsnz	_rawIndex,f,c
  2990  000926  2A2C               	incf	_rawIndex+1,f,c
  2991                           
  2992                           ;RFID.c: 52: }
  2993  000928  D001               	goto	i2l1622
  2994  00092A                     i2l589:
  2995                           
  2996                           ;RFID.c: 53: else{
  2997                           ;RFID.c: 54: INTCONbits.TMR0IE = 0;
  2998  00092A  9AF2               	bcf	intcon,5,c	;volatile
  2999  00092C                     i2l1622:
  3000                           
  3001                           ;RFID.c: 56: }
  3002                           ;RFID.c: 57: bitlenctr = 1;
  3003  00092C  0E00               	movlw	0
  3004  00092E  6E24               	movwf	_bitlenctr+1,c
  3005  000930  0E01               	movlw	1
  3006  000932  6E23               	movwf	_bitlenctr,c
  3007  000934  0012               	return	
  3008  000936                     __end_of_sample:
  3009                           	opt stack 0
  3010  0000                     pclatu	equ	0xFFB
  3011                           pclath	equ	0xFFA
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           prodh	equ	0xFF4
  3017                           prodl	equ	0xFF3
  3018                           intcon	equ	0xFF2
  3019                           postinc0	equ	0xFEE
  3020                           fsr0h	equ	0xFEA
  3021                           fsr0l	equ	0xFE9
  3022                           wreg	equ	0xFE8
  3023                           postdec1	equ	0xFE5
  3024                           fsr1h	equ	0xFE2
  3025                           fsr1l	equ	0xFE1
  3026                           indf2	equ	0xFDF
  3027                           postinc2	equ	0xFDE
  3028                           postdec2	equ	0xFDD
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           pclatu	equ	0xFFB
  3033                           pclath	equ	0xFFA
  3034                           tblptru	equ	0xFF8
  3035                           tblptrh	equ	0xFF7
  3036                           tblptrl	equ	0xFF6
  3037                           tablat	equ	0xFF5
  3038                           prodh	equ	0xFF4
  3039                           prodl	equ	0xFF3
  3040                           intcon	equ	0xFF2
  3041                           postinc0	equ	0xFEE
  3042                           fsr0h	equ	0xFEA
  3043                           fsr0l	equ	0xFE9
  3044                           wreg	equ	0xFE8
  3045                           postdec1	equ	0xFE5
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           postinc2	equ	0xFDE
  3050                           postdec2	equ	0xFDD
  3051                           fsr2h	equ	0xFDA
  3052                           fsr2l	equ	0xFD9
  3053                           status	equ	0xFD8
  3054                           
  3055                           	psect	rparam
  3056  0000                     pclatu	equ	0xFFB
  3057                           pclath	equ	0xFFA
  3058                           tblptru	equ	0xFF8
  3059                           tblptrh	equ	0xFF7
  3060                           tblptrl	equ	0xFF6
  3061                           tablat	equ	0xFF5
  3062                           prodh	equ	0xFF4
  3063                           prodl	equ	0xFF3
  3064                           intcon	equ	0xFF2
  3065                           postinc0	equ	0xFEE
  3066                           fsr0h	equ	0xFEA
  3067                           fsr0l	equ	0xFE9
  3068                           wreg	equ	0xFE8
  3069                           postdec1	equ	0xFE5
  3070                           fsr1h	equ	0xFE2
  3071                           fsr1l	equ	0xFE1
  3072                           indf2	equ	0xFDF
  3073                           postinc2	equ	0xFDE
  3074                           postdec2	equ	0xFDD
  3075                           fsr2h	equ	0xFDA
  3076                           fsr2l	equ	0xFD9
  3077                           status	equ	0xFD8
  3078                           
  3079                           	psect	temp
  3080  000050                     btemp:
  3081                           	opt stack 0
  3082  000050                     	ds	1
  3083  0000                     int$flags	set	btemp
  3084                           pclatu	equ	0xFFB
  3085                           pclath	equ	0xFFA
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           intcon	equ	0xFF2
  3093                           postinc0	equ	0xFEE
  3094                           fsr0h	equ	0xFEA
  3095                           fsr0l	equ	0xFE9
  3096                           wreg	equ	0xFE8
  3097                           postdec1	equ	0xFE5
  3098                           fsr1h	equ	0xFE2
  3099                           fsr1l	equ	0xFE1
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           postdec2	equ	0xFDD
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      79
    BANK0           160     15      17
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_sample

Critical Paths under _main in BANK0

    _main->_ECAN_Transmit
    _zipCAN->_setBit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3555
                                             11 BANK0      4     4      0
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                           _I2CSetup
                         _InitDevice
                          _findStart
                    _setup_Interrupt
                        _singleToBit
                             _zipCAN
 ---------------------------------------------------------------------------------
 (1) _zipCAN                                               2     2      0    1109
                                              6 BANK0      2     2      0
                             _setBit
 ---------------------------------------------------------------------------------
 (2) _setBit                                               6     2      4    1109
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _singleToBit                                         10     8      2     817
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (1) _setup_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _findStart                                            8     6      2     170
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2CSetup                                             2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10    1111
                                              0 BANK0     11     1     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay                                                2     0      2     185
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 14    14      0       0
                                              1 COMRAM    14    14      0
                             _sample
 ---------------------------------------------------------------------------------
 (4) _sample                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _I2CSetup
   _InitDevice
   _findStart
   _setup_Interrupt
   _singleToBit
   _zipCAN
     _setBit

 _ISR (ROOT)
   _sample

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     516      35       35.7%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      11       5       10.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      4F       1       84.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60       6        0.0%
DATA                 0      0     576       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 27 00:03:42 2015

           _MAP_BACKLIGHT 0017               _SSPSTATbits 000FC7               __CFG_BORV$3 000000  
        singleToBit@start 0060              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000                       l400 0706  
                     l610 07E6                       l630 02CE                       l632 02E4  
                     l398 06C6              __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000  
                     _ISR 0008                       u874 09BE                       u875 09B8  
                     u990 00BE                       _raw 0071                       _val 002D  
       _Interrupt_counter 0015                       prod 000FF3                       wreg 000FE8  
                    ?_ISR 0041             _MAP_HEARTBEAT 006F                      _B0D0 000E86  
                    _B0D1 000E87                      _B0D2 000E88                      _B0D3 000E89  
                    _B0D4 000E8A                      _B0D5 000E8B                      _B0D6 000E8C  
                    _B0D7 000E8D             _MAP_DIRECTION 001B                      l2100 0776  
                    l2030 044C                      l2104 078C                      l2114 07D4  
                    l2116 07DE                      l2140 0162                      l2220 0338  
                    l2070 055A                      l2062 053A                      l2206 075E  
                    l2126 00C0                      l2214 0302                      l2302 05CE  
                    l2072 0566                      l2064 0548                      l2160 0228  
                    l2144 0182                      l2232 03A4                      l2304 05DE  
                    l2066 054C                      l2058 052C                      l2162 0232  
                    l2170 02D0                      l2154 01E2                      l2226 036E  
                    l2330 062E                      l2084 0884                      l2244 0410  
                    l2094 08B6                      l2238 03DA                      l2326 061A  
                    l2176 09CE                      l2192 0744                      l2088 089A  
                    l2168 0296                      l2194 074A                      l2338 0674  
                    l2296 05A0                      u1200 042A                      u1150 031C  
                    u1230 062A                      u1160 0352                      u1170 0388  
                    u1180 03BE                      u1190 03F4        singleToBit@lastVal 0066  
                    _main 0572                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr0l 000FE9                      fsr2h 000FDA                      fsr1l 000FE1  
                    indf2 000FDF                      fsr2l 000FD9                      btemp 0050  
        __end_of_I2CSetup 08D0                      pclat 000FFA                      prodh 000FF4  
                    prodl 000FF3                      start 0098             __CFG_IESO$OFF 000000  
        __end_of_CANSetup 0572             __CFG_MCLRE$ON 000000              ___param_bank 000010  
                   ??_ISR 0042             _MAP_SAFETYPIN 001F                     _B0DLC 000E85  
                   ?_main 0041                     _BSEL0 000E7D                     i2l111 005C  
                   i2l589 092A                     _MSEL0 000E79                     _MSEL1 000E7A  
                   _MSEL2 000E7B                     _MSEL3 000E7C                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94            _i2c_byte_count 0034  
                   _Delay 09CE             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
          __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000                     _count 0033  
                   tablat 000FF5                     status 000FD8                _InitDevice 07E8  
   __size_of_ECAN_Receive 00DE           __initialization 0978              __end_of_main 0684  
                  ??_main 0050             __activetblptr 000000            __CFG_RETEN$OFF 000000  
                  ?_Delay 0060                    _B0EIDH 000E83                    _B0EIDL 000E84  
        ECAN_Transmit@DLC 0061                    _B0SIDH 000E81                    _B0SIDL 000E82  
               I2CSetup@i 0060                    _CANCON 000F6F                    _ANCON0 000F5D  
                  _ANCON1 000F5C              _ECAN_Receive 0684           __CFG_BBSIZ$BB2K 000000  
                  i2l1622 092C                    i2l1618 0914  __size_of_setup_Interrupt 000A  
                  _OSCCON 000FD3                    _RXB0D0 000F66                    _RXB0D1 000F67  
                  _RXB0D2 000F68                    _RXB0D3 000F69                    _RXB0D4 000F6A  
                  _RXB1D0 000F36                    _RXB0D5 000F6B                    _RXB1D1 000F37  
                  _RXB0D6 000F6C                    _RXB1D2 000F38                    _RXB0D7 000F6D  
                  _RXB1D3 000F39                    _RXB1D4 000F3A                    _RXB1D5 000F3B  
                  _RXB1D6 000F3C                    _RXB1D7 000F3D                    _TXB0D0 000F26  
                  _TXB0D1 000F27                    _TXB0D2 000F28                    _TXB0D3 000F29  
                  _TXB0D4 000F2A                    _TXB0D5 000F2B                    _TXB0D6 000F2C  
                  _TXB0D7 000F2D                    _SSPADD 000FC8                    _SSPBUF 000FC9  
          __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000          _heartBeatCounter 0027  
                  clear_0 0980                    clear_1 0998                    _setBit 09A8  
                  _sample 08D0              ?_singleToBit 0060                    _zipCAN 02E6  
               ?_I2CSetup 0041                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                 ?_CANSetup 0041                __accesstop 0060  
 __end_of__initialization 099E  ECAN_Transmit@TRANSMIT_ID 0062             ___rparam_used 000001  
             ?_InitDevice 0041               _i2c_reg_map 0001             __end_of_Delay 09E6  
          __pcstackCOMRAM 0041    __size_of_ECAN_Transmit 0042                ??_I2CSetup 0050  
                 ??_Delay 0050        __size_of_findStart 0086               setBit@shift 0060  
             setBit@value 0062                ??_CANSetup 0050                __pbssBANK0 006F  
     main@start_condition 006B           __CFG_PLLCFG$OFF 000000         ??_setup_Interrupt 0050  
       ECAN_Transmit@SIDH 006A         ECAN_Transmit@SIDL 0060                 _B0CONbits 000E80  
                 _ECANCON 000F72                   ?_setBit 0060                   ?_sample 0041  
                 ?_zipCAN 0041                   _BRGCON1 000E43                   _BRGCON2 000E44  
                 _BRGCON3 000E45          __CFG_CANMX$PORTB 000000       __size_of_InitDevice 007A  
                 _RXB0DLC 000F65                   i2u35_40 08DA                   _RXB1DLC 000F35  
                 i2u36_40 08F4                   i2u35_48 08DC                   _RXB0CON 000F60  
                 _RXB1CON 000F30                   _TXB0DLC 000F25                   _RXFCON0 000E46  
                 _RXFCON1 000E47                   _SSPCON1 000FC6                   _SSPCON2 000FC5  
                 _SSPSTAT 000FC7             _ECAN_Transmit 0936           __CFG_PWRTEN$OFF 000000  
                 __Hparam 0000                   __Lparam 0000         __end_of_findStart 07E8  
                 __pcinit 0978                   __ramtop 0F00           __size_of_setBit 0026  
         __size_of_sample 0066                   __ptext0 0572                   __ptext1 02E6  
                 __ptext2 09A8                   __ptext3 009C                   __ptext4 09E6  
                 __ptext5 0762                   __ptext6 07E8                   __ptext7 0862  
                 __ptext8 0936                   __ptext9 0684           __size_of_zipCAN 0162  
               _T0CONbits 000FD5              __size_of_ISR 0090      __size_of_singleToBit 024A  
       __CFG_MSSPMSK$MSK7 000000                   _temp_D2 0036                   _temp_D3 0037  
                 _temp_D4 0038                   _temp_D5 0039                   _temp_D6 003A  
                 _temp_D7 003B            ?_ECAN_Transmit 0060                 _MAP_BRAKE 0019  
    end_of_initialization 099E          _buttonWasPressed 0032                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
               _PORTBbits 000F81          __CFG_FOSC$INTIO2 000000                findStart@i 0066  
       __size_of_I2CSetup 006E         __CFG_SOSCSEL$HIGH 000000         __size_of_CANSetup 012A  
            ??_InitDevice 0050              _i2c_reg_addr 0035            __end_of_setBit 09CE  
          __end_of_sample 0936            __end_of_zipCAN 0448       start_initialization 0978  
         ??_ECAN_Transmit 0050               __end_of_ISR 0098        __end_of_InitDevice 0862  
         _setup_Interrupt 09E6               _CANSTATbits 000F6E                  ??_setBit 0064  
                ??_sample 0041                  ??_zipCAN 0066               __pbssBIGRAM 0071  
             __pbssCOMRAM 0001             __pcstackBANK0 0060        ECAN_Transmit@DATA1 0063  
      ECAN_Transmit@DATA2 0064        ECAN_Transmit@DATA3 0065        ECAN_Transmit@DATA4 0066  
      ECAN_Transmit@DATA5 0067        ECAN_Transmit@DATA6 0068        ECAN_Transmit@DATA7 0069  
               __pintcode 0008     _MAP_REC_BATTERYSTATUS 0030                 _bitlenctr 0023  
               _findStart 0762            _heartbeatCount 0029                  _I2C_FLAG 0013  
 __end_of_setup_Interrupt 09F0                  _I2CSetup 0862            __size_of_Delay 0018  
                _CANSetup 0448             ?_ECAN_Receive 0041                  _LATAbits 000F89  
                _LATCbits 000F8B                  _PIE1bits 000F9D                 _temp_EIDH 003D  
               _temp_EIDL 003E                 _temp_SIDH 003F                 _temp_SIDL 0040  
                _PIR1bits 000F9E                  _PIR5bits 000F77                  _RXB0EIDH 000F63  
                _RXB0EIDL 000F64                  _RXB1EIDH 000F33                  _RXB1EIDL 000F34  
                _RCONbits 000FD0                  _RXB0SIDH 000F61                  _RXB0SIDL 000F62  
                _RXB1SIDH 000F31                  _RXF0EIDH 000EE2                  _RXB1SIDL 000F32  
                _RXF0EIDL 000EE3                  _RXF1EIDH 000EE6                  _RXF1EIDL 000EE7  
                _RXF2EIDH 000EEA                  _RXF2EIDL 000EEB                  _RXF0SIDH 000EE0  
                _RXF0SIDL 000EE1                  _TXB0EIDH 000F23                  _RXF1SIDH 000EE4  
                _TXB0EIDL 000F24                  _RXF1SIDL 000EE5                  _RXF2SIDH 000EE8  
                _RXF2SIDL 000EE9                  _RXM0EIDH 000EFA                  _RXM0EIDL 000EFB  
                _TXB0SIDH 000F21                  _RXM1EIDH 000EFE                  _TXB0SIDL 000F22  
                _RXM1EIDL 000EFF                  _RXFBCON0 000E71                  _RXFBCON1 000E72  
                _RXFBCON2 000E73                  _RXFBCON3 000E74                  _RXFBCON4 000E75  
                _RXFBCON5 000E76                  _RXFBCON6 000E77                  _RXFBCON7 000E78  
                _RXM0SIDH 000EF8                  _RXM0SIDL 000EF9                  _RXM1SIDH 000EFC  
                _RXM1SIDL 000EFD                ?_findStart 0060             ??_singleToBit 0062  
        _MAP_REC_VELOCITY 0031     ECAN_Receive@RXMsgFlag 0060               _MAP_BITDATA 002F  
               main@start 006D            ??_ECAN_Receive 0050               _MAP_H_BLINK 001D  
             _MAP_V_BLINK 0021                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000                  _bitArray 0265          ?_setup_Interrupt 0041  
     __end_of_singleToBit 02E6                  __ptext10 09CE                  __ptext11 0448  
                __ptext13 08D0                  _curState 0025             __size_of_main 0112  
           _multiToSingle 000000                  _rawIndex 002B                _FIRST_SEND 0011  
                _temp_DLC 003C                  int$flags 0050               ??_findStart 0062  
     __CFG_INTOSCSEL$HIGH 000000                Delay@count 0060               _RXB0CONbits 000F60  
             _RXB1CONbits 000F30        __CFG_WDTEN$SWDTDIS 000000               _OSCTUNEbits 000F9B  
              _INTCONbits 000FF2     __end_of_ECAN_Transmit 0978                  intlevel2 0000  
             _TXB0CONbits 000F20            findStart@count 0064                _OSCCONbits 000FD3  
            singleToBit@i 0068        __CFG_WDTPS$1048576 000000      __end_of_ECAN_Receive 0762  
             _singleArray 03F7               _singleToBit 009C               _SSPCON1bits 000FC6  
     __CFG_BORPWR$ZPBORMV 000000  
