

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Dec 22 00:03:05 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataBANK0
    36  001832                     __pidataBANK0:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _inPin
    40  001832  0007               	dw	7
    41                           
    42                           ;initializer for _ledPin
    43  001834  000D               	dw	13
    44                           
    45                           	psect	idataBANK1
    46  0014B6                     __pidataBANK1:
    47                           	opt stack 0
    48                           
    49                           ;initializer for process_buf@F18135
    50  0014B6  0000               	dw	0
    51  0014B8  0000               	dw	0
    52  0014BA  0000               	dw	0
    53  0014BC  0001               	dw	1
    54  0014BE  0001               	dw	1
    55  0014C0  0000               	dw	0
    56  0014C2  0000               	dw	0
    57  0014C4  0001               	dw	1
    58  0014C6  0000               	dw	0
    59  0014C8  0001               	dw	1
    60  0014CA  0001               	dw	1
    61  0014CC  0001               	dw	1
    62  0014CE  0001               	dw	1
    63  0014D0  0000               	dw	0
    64  0014D2  0000               	dw	0
    65  0014D4  0001               	dw	1
    66  0014D6  0000               	dw	0
    67  0014D8  0000               	dw	0
    68  0014DA  0001               	dw	1
    69  0014DC  0001               	dw	1
    70  0014DE  0000               	dw	0
    71  0014E0  0001               	dw	1
    72  0014E2  0001               	dw	1
    73  0014E4  0001               	dw	1
    74  0014E6  0000               	dw	0
    75  0014E8  0001               	dw	1
    76  0014EA  0001               	dw	1
    77  0014EC  0000               	dw	0
    78  0014EE  0000               	dw	0
    79  0014F0  0000               	dw	0
    80  0014F2  0000               	dw	0
    81  0014F4  0000               	dw	0
    82  0014F6  0000               	dw	0
    83  0014F8  0000               	dw	0
    84  0014FA  0001               	dw	1
    85  0014FC  0000               	dw	0
    86  0014FE  0001               	dw	1
    87  001500  0001               	dw	1
    88  001502  0000               	dw	0
    89  001504  0000               	dw	0
    90  001506  0000               	dw	0
    91  001508  0000               	dw	0
    92  00150A  0000               	dw	0
    93  00150C  0000               	dw	0
    94  00150E  0000               	dw	0
    95  001510  0001               	dw	1
    96  001512  0001               	dw	1
    97  001514  0000               	dw	0
    98  001516  0000               	dw	0
    99  001518  0000               	dw	0
   100  00151A  0000               	dw	0
   101  00151C  0000               	dw	0
   102  00151E  0000               	dw	0
   103  001520  0001               	dw	1
   104  001522  0001               	dw	1
   105  001524  0000               	dw	0
   106  001526  0000               	dw	0
   107  001528  0001               	dw	1
   108  00152A  0000               	dw	0
   109  00152C  0001               	dw	1
   110  00152E  0001               	dw	1
   111  001530  0001               	dw	1
   112  001532  0001               	dw	1
   113  001534  0000               	dw	0
   114  001536  0000               	dw	0
   115  001538  0001               	dw	1
   116  00153A  0000               	dw	0
   117  00153C  0000               	dw	0
   118  00153E  0001               	dw	1
   119  001540  0001               	dw	1
   120  001542  0000               	dw	0
   121  001544  0001               	dw	1
   122  001546  0001               	dw	1
   123  001548  0001               	dw	1
   124  00154A  0000               	dw	0
   125  00154C  0001               	dw	1
   126  00154E  0001               	dw	1
   127  001550  0000               	dw	0
   128  001552  0000               	dw	0
   129  001554  0000               	dw	0
   130  001556  0000               	dw	0
   131  001558  0000               	dw	0
   132  00155A  0000               	dw	0
   133  00155C  0000               	dw	0
   134  00155E  0001               	dw	1
   135  001560  0000               	dw	0
   136  001562  0001               	dw	1
   137  001564  0001               	dw	1
   138  001566  0000               	dw	0
   139  001568  0000               	dw	0
   140  00156A  0000               	dw	0
   141  00156C  0000               	dw	0
   142  00156E  0000               	dw	0
   143  001570  0000               	dw	0
   144  001572  0000               	dw	0
   145  001574  0001               	dw	1
   146  001576  0001               	dw	1
   147  001578  0000               	dw	0
   148  00157A  0000               	dw	0
   149  00157C  0000               	dw	0
   150                           
   151                           	psect	smallconst
   152  000F00                     __psmallconst:
   153                           	opt stack 0
   154  000F00  00                 	db	0
   155  000F01                     _dpowers:
   156                           	opt stack 0
   157  000F01  0001               	dw	1
   158  000F03  000A               	dw	10
   159  000F05  0064               	dw	100
   160  000F07  03E8               	dw	1000
   161  000F09  2710               	dw	10000
   162  000F0B                     __end_of_dpowers:
   163                           	opt stack 0
   164  0000                     _B0CONbits	set	3712
   165  0000                     _B0D0	set	3718
   166  0000                     _B0D1	set	3719
   167  0000                     _B0D2	set	3720
   168  0000                     _B0D3	set	3721
   169  0000                     _B0D4	set	3722
   170  0000                     _B0D5	set	3723
   171  0000                     _B0D6	set	3724
   172  0000                     _B0D7	set	3725
   173  0000                     _B0DLC	set	3717
   174  0000                     _B0EIDH	set	3715
   175  0000                     _B0EIDL	set	3716
   176  0000                     _B0SIDH	set	3713
   177  0000                     _B0SIDL	set	3714
   178  0000                     _BRGCON1	set	3651
   179  0000                     _BRGCON2	set	3652
   180  0000                     _BRGCON3	set	3653
   181  0000                     _BSEL0	set	3709
   182  0000                     _MSEL0	set	3705
   183  0000                     _MSEL1	set	3706
   184  0000                     _MSEL2	set	3707
   185  0000                     _MSEL3	set	3708
   186  0000                     _RXF0EIDH	set	3810
   187  0000                     _RXF0EIDL	set	3811
   188  0000                     _RXF0SIDH	set	3808
   189  0000                     _RXF0SIDL	set	3809
   190  0000                     _RXF1EIDH	set	3814
   191  0000                     _RXF1EIDL	set	3815
   192  0000                     _RXF1SIDH	set	3812
   193  0000                     _RXF1SIDL	set	3813
   194  0000                     _RXF2EIDH	set	3818
   195  0000                     _RXF2EIDL	set	3819
   196  0000                     _RXF2SIDH	set	3816
   197  0000                     _RXF2SIDL	set	3817
   198  0000                     _RXFBCON0	set	3697
   199  0000                     _RXFBCON1	set	3698
   200  0000                     _RXFBCON2	set	3699
   201  0000                     _RXFBCON3	set	3700
   202  0000                     _RXFBCON4	set	3701
   203  0000                     _RXFBCON5	set	3702
   204  0000                     _RXFBCON6	set	3703
   205  0000                     _RXFBCON7	set	3704
   206  0000                     _RXFCON0	set	3654
   207  0000                     _RXFCON1	set	3655
   208  0000                     _RXM0EIDH	set	3834
   209  0000                     _RXM0EIDL	set	3835
   210  0000                     _RXM0SIDH	set	3832
   211  0000                     _RXM0SIDL	set	3833
   212  0000                     _RXM1EIDH	set	3838
   213  0000                     _RXM1EIDL	set	3839
   214  0000                     _RXM1SIDH	set	3836
   215  0000                     _RXM1SIDL	set	3837
   216  0000                     _ANCON0	set	3933
   217  0000                     _ANCON1	set	3932
   218  0000                     _RXB1CON	set	3888
   219  0000                     _RXB1CONbits	set	3888
   220  0000                     _RXB1D0	set	3894
   221  0000                     _RXB1D1	set	3895
   222  0000                     _RXB1D2	set	3896
   223  0000                     _RXB1D3	set	3897
   224  0000                     _RXB1D4	set	3898
   225  0000                     _RXB1D5	set	3899
   226  0000                     _RXB1D6	set	3900
   227  0000                     _RXB1D7	set	3901
   228  0000                     _RXB1DLC	set	3893
   229  0000                     _RXB1EIDH	set	3891
   230  0000                     _RXB1EIDL	set	3892
   231  0000                     _RXB1SIDH	set	3889
   232  0000                     _RXB1SIDL	set	3890
   233  0000                     _TXB0CONbits	set	3872
   234  0000                     _TXB0D0	set	3878
   235  0000                     _TXB0D1	set	3879
   236  0000                     _TXB0D2	set	3880
   237  0000                     _TXB0D3	set	3881
   238  0000                     _TXB0D4	set	3882
   239  0000                     _TXB0D5	set	3883
   240  0000                     _TXB0D6	set	3884
   241  0000                     _TXB0D7	set	3885
   242  0000                     _TXB0DLC	set	3877
   243  0000                     _TXB0EIDH	set	3875
   244  0000                     _TXB0EIDL	set	3876
   245  0000                     _TXB0SIDH	set	3873
   246  0000                     _TXB0SIDL	set	3874
   247  0000                     _CANCON	set	3951
   248  0000                     _CANSTATbits	set	3950
   249  0000                     _ECANCON	set	3954
   250  0000                     _INTCONbits	set	4082
   251  0000                     _LATAbits	set	3977
   252  0000                     _LATCbits	set	3979
   253  0000                     _OSCCON	set	4051
   254  0000                     _OSCCONbits	set	4051
   255  0000                     _OSCTUNEbits	set	3995
   256  0000                     _PIE1bits	set	3997
   257  0000                     _PIR1bits	set	3998
   258  0000                     _PIR5bits	set	3959
   259  0000                     _PORTBbits	set	3969
   260  0000                     _RCONbits	set	4048
   261  0000                     _RXB0CON	set	3936
   262  0000                     _RXB0CONbits	set	3936
   263  0000                     _RXB0D0	set	3942
   264  0000                     _RXB0D1	set	3943
   265  0000                     _RXB0D2	set	3944
   266  0000                     _RXB0D3	set	3945
   267  0000                     _RXB0D4	set	3946
   268  0000                     _RXB0D5	set	3947
   269  0000                     _RXB0D6	set	3948
   270  0000                     _RXB0D7	set	3949
   271  0000                     _RXB0DLC	set	3941
   272  0000                     _RXB0EIDH	set	3939
   273  0000                     _RXB0EIDL	set	3940
   274  0000                     _RXB0SIDH	set	3937
   275  0000                     _RXB0SIDL	set	3938
   276  0000                     _SSPADD	set	4040
   277  0000                     _SSPBUF	set	4041
   278  0000                     _SSPCON1	set	4038
   279  0000                     _SSPCON1bits	set	4038
   280  0000                     _SSPCON2	set	4037
   281  0000                     _SSPSTAT	set	4039
   282  0000                     _SSPSTATbits	set	4039
   283  0000                     _T0CONbits	set	4053
   284  0000                     _TRISA	set	3986
   285  0000                     _TRISB	set	3987
   286  0000                     _TRISC	set	3988
   287  000F0B  25                 	db	37
   288  000F0C  64                 	db	100	;'d'
   289  000F0D  00                 	db	0
   290                           
   291                           ; #config settings
   292  000F0E  00                 	db	0	; dummy byte at the end
   293  0000                     
   294                           	psect	cinit
   295  00157E                     __pcinit:
   296                           	opt stack 0
   297  00157E                     start_initialization:
   298                           	opt stack 0
   299  00157E                     __initialization:
   300                           	opt stack 0
   301                           
   302                           ; Clear objects allocated to BIGRAM (2800 bytes)
   303  00157E  EE01  F0CC         	lfsr	0,__pbssBIGRAM
   304  001582  EE1A F0F0          	lfsr	1,2800
   305  001586                     clear_0:
   306  001586  6AEE               	clrf	postinc0,c
   307  001588  50E5               	movf	postdec1,w,c
   308  00158A  50E1               	movf	fsr1l,w,c
   309  00158C  E1FC               	bnz	clear_0
   310  00158E  50E2               	movf	fsr1h,w,c
   311  001590  E1FA               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK1 (4 bytes)
   314  001592  0101               	movlb	1
   315  001594  6BCB               	clrf	(__pbssBANK1+3)& (0+255),b
   316  001596  6BCA               	clrf	(__pbssBANK1+2)& (0+255),b
   317  001598  6BC9               	clrf	(__pbssBANK1+1)& (0+255),b
   318  00159A  6BC8               	clrf	__pbssBANK1& (0+255),b
   319                           
   320                           ; Clear objects allocated to BANK0 (14 bytes)
   321  00159C  EE00  F060         	lfsr	0,__pbssBANK0
   322  0015A0  0E0E               	movlw	14
   323  0015A2                     clear_1:
   324  0015A2  6AEE               	clrf	postinc0,c
   325  0015A4  06E8               	decf	wreg,f,c
   326  0015A6  E1FD               	bnz	clear_1
   327                           
   328                           ; Clear objects allocated to COMRAM (52 bytes)
   329  0015A8  EE00  F001         	lfsr	0,__pbssCOMRAM
   330  0015AC  0E34               	movlw	52
   331  0015AE                     clear_2:
   332  0015AE  6AEE               	clrf	postinc0,c
   333  0015B0  06E8               	decf	wreg,f,c
   334  0015B2  E1FD               	bnz	clear_2
   335                           
   336                           ; Initialize objects allocated to BANK1 (200 bytes)
   337                           ; load TBLPTR registers with __pidataBANK1
   338  0015B4  0EB6               	movlw	low __pidataBANK1
   339  0015B6  6EF6               	movwf	tblptrl,c
   340  0015B8  0E14               	movlw	high __pidataBANK1
   341  0015BA  6EF7               	movwf	tblptrh,c
   342  0015BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   343  0015BE  6EF8               	movwf	tblptru,c
   344  0015C0  EE01  F000         	lfsr	0,__pdataBANK1
   345  0015C4  EE10 F0C8          	lfsr	1,200
   346  0015C8                     copy_data0:
   347  0015C8  0009               	tblrd		*+
   348  0015CA  CFF5 FFEE          	movff	tablat,postinc0
   349  0015CE  50E5               	movf	postdec1,w,c
   350  0015D0  50E1               	movf	fsr1l,w,c
   351  0015D2  E1FA               	bnz	copy_data0
   352                           
   353                           ; Initialize objects allocated to BANK0 (4 bytes)
   354                           ; load TBLPTR registers with __pidataBANK0
   355  0015D4  0E32               	movlw	low __pidataBANK0
   356  0015D6  6EF6               	movwf	tblptrl,c
   357  0015D8  0E18               	movlw	high __pidataBANK0
   358  0015DA  6EF7               	movwf	tblptrh,c
   359  0015DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   360  0015DE  6EF8               	movwf	tblptru,c
   361  0015E0  EE00  F079         	lfsr	0,__pdataBANK0
   362  0015E4  EE10 F004          	lfsr	1,4
   363  0015E8                     copy_data1:
   364  0015E8  0009               	tblrd		*+
   365  0015EA  CFF5 FFEE          	movff	tablat,postinc0
   366  0015EE  50E5               	movf	postdec1,w,c
   367  0015F0  50E1               	movf	fsr1l,w,c
   368  0015F2  E1FA               	bnz	copy_data1
   369  0015F4                     end_of_initialization:
   370                           	opt stack 0
   371  0015F4                     __end_of__initialization:
   372                           	opt stack 0
   373  0015F4  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   374  0015F6  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   375  0015F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   376  0015FA  6EF8               	movwf	tblptru,c
   377  0015FC  0100               	movlb	0
   378  0015FE  EFB3  F00B         	goto	_main	;jump to C main() function
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1h	equ	0xFE2
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	bssCOMRAM
   390  000001                     __pbssCOMRAM:
   391                           	opt stack 0
   392  000001                     _i2c_reg_map:
   393                           	opt stack 0
   394  000001                     	ds	16
   395  000011                     _I2C_FLAG:
   396                           	opt stack 0
   397  000011                     	ds	2
   398  000013                     _MAP_BACKLIGHT:
   399                           	opt stack 0
   400  000013                     	ds	2
   401  000015                     _MAP_BRAKE:
   402                           	opt stack 0
   403  000015                     	ds	2
   404  000017                     _MAP_H_BLINK:
   405                           	opt stack 0
   406  000017                     	ds	2
   407  000019                     _MAP_V_BLINK:
   408                           	opt stack 0
   409  000019                     	ds	2
   410  00001B                     _bitlenctr:
   411                           	opt stack 0
   412  00001B                     	ds	2
   413  00001D                     _index:
   414                           	opt stack 0
   415  00001D                     	ds	2
   416  00001F                     _point:
   417                           	opt stack 0
   418  00001F                     	ds	2
   419  000021                     _val:
   420                           	opt stack 0
   421  000021                     	ds	2
   422  000023                     _MAP_BITDATA:
   423                           	opt stack 0
   424  000023                     	ds	1
   425  000024                     _MAP_REC_BATTERYSTATUS:
   426                           	opt stack 0
   427  000024                     	ds	1
   428  000025                     _MAP_REC_VELOCITY:
   429                           	opt stack 0
   430  000025                     	ds	1
   431  000026                     _buttonWasPressed:
   432                           	opt stack 0
   433  000026                     	ds	1
   434  000027                     _count:
   435                           	opt stack 0
   436  000027                     	ds	1
   437  000028                     _i2c_byte_count:
   438                           	opt stack 0
   439  000028                     	ds	1
   440  000029                     _i2c_reg_addr:
   441                           	opt stack 0
   442  000029                     	ds	1
   443  00002A                     _temp_D2:
   444                           	opt stack 0
   445  00002A                     	ds	1
   446  00002B                     _temp_D3:
   447                           	opt stack 0
   448  00002B                     	ds	1
   449  00002C                     _temp_D4:
   450                           	opt stack 0
   451  00002C                     	ds	1
   452  00002D                     _temp_D5:
   453                           	opt stack 0
   454  00002D                     	ds	1
   455  00002E                     _temp_D6:
   456                           	opt stack 0
   457  00002E                     	ds	1
   458  00002F                     _temp_D7:
   459                           	opt stack 0
   460  00002F                     	ds	1
   461  000030                     _temp_DLC:
   462                           	opt stack 0
   463  000030                     	ds	1
   464  000031                     _temp_EIDH:
   465                           	opt stack 0
   466  000031                     	ds	1
   467  000032                     _temp_EIDL:
   468                           	opt stack 0
   469  000032                     	ds	1
   470  000033                     _temp_SIDH:
   471                           	opt stack 0
   472  000033                     	ds	1
   473  000034                     _temp_SIDL:
   474                           	opt stack 0
   475  000034                     	ds	1
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1h	equ	0xFE2
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	bssBANK0
   487  000060                     __pbssBANK0:
   488                           	opt stack 0
   489  000060                     _FIRST_SEND:
   490                           	opt stack 0
   491  000060                     	ds	2
   492  000062                     _Interrupt_counter:
   493                           	opt stack 0
   494  000062                     	ds	2
   495  000064                     _MAP_DIRECTION:
   496                           	opt stack 0
   497  000064                     	ds	2
   498  000066                     _MAP_HEARTBEAT:
   499                           	opt stack 0
   500  000066                     	ds	2
   501  000068                     _MAP_SAFETYPIN:
   502                           	opt stack 0
   503  000068                     	ds	2
   504  00006A                     _heartBeatCounter:
   505                           	opt stack 0
   506  00006A                     	ds	2
   507  00006C                     _heartbeatCount:
   508                           	opt stack 0
   509  00006C                     	ds	2
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           postdec1	equ	0xFE5
   517                           fsr1h	equ	0xFE2
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	dataBANK0
   521  000079                     __pdataBANK0:
   522                           	opt stack 0
   523  000079                     _inPin:
   524                           	opt stack 0
   525  000079                     	ds	2
   526  00007B                     _ledPin:
   527                           	opt stack 0
   528  00007B                     	ds	2
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1h	equ	0xFE2
   537                           fsr1l	equ	0xFE1
   538                           
   539                           	psect	bssBANK1
   540  0001C8                     __pbssBANK1:
   541                           	opt stack 0
   542  0001C8                     _bufnum:
   543                           	opt stack 0
   544  0001C8                     	ds	2
   545  0001CA                     _curState:
   546                           	opt stack 0
   547  0001CA                     	ds	2
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1h	equ	0xFE2
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	dataBANK1
   559  000100                     __pdataBANK1:
   560                           	opt stack 0
   561  000100                     process_buf@F18135:
   562                           	opt stack 0
   563  000100                     	ds	200
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           postdec1	equ	0xFE5
   571                           fsr1h	equ	0xFE2
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	bssBIGRAM
   575  0001CC                     __pbssBIGRAM:
   576                           	opt stack 0
   577  0001CC                     _raw:
   578                           	opt stack 0
   579  0001CC                     	ds	1000
   580  0005B4                     _bitArray:
   581                           	opt stack 0
   582  0005B4                     	ds	1000
   583  00099C                     _finalArray:
   584                           	opt stack 0
   585  00099C                     	ds	400
   586  000B2C                     _resultArray:
   587                           	opt stack 0
   588  000B2C                     	ds	400
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           postdec1	equ	0xFE5
   596                           fsr1h	equ	0xFE2
   597                           fsr1l	equ	0xFE1
   598                           
   599                           	psect	cstackBANK0
   600  00006E                     __pcstackBANK0:
   601                           	opt stack 0
   602  00006E                     ECAN_Receive@RXMsgFlag:
   603                           	opt stack 0
   604  00006E                     ECAN_Transmit@SIDL:
   605                           	opt stack 0
   606  00006E                     setBit@shift:
   607                           	opt stack 0
   608  00006E                     I2CSetup@i:
   609                           	opt stack 0
   610  00006E                     Delay@count:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x0
   614  00006E                     	ds	1
   615  00006F                     ECAN_Transmit@DLC:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x1
   619  00006F                     	ds	1
   620  000070                     ECAN_Transmit@TRANSMIT_ID:
   621                           	opt stack 0
   622  000070                     setBit@value:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x2
   626  000070                     	ds	1
   627  000071                     ECAN_Transmit@DATA1:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x3
   631  000071                     	ds	1
   632  000072                     ??_setBit:
   633  000072                     ECAN_Transmit@DATA2:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x4
   637  000072                     	ds	1
   638  000073                     ECAN_Transmit@DATA3:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x5
   642  000073                     	ds	1
   643  000074                     ??_zipCAN:
   644  000074                     ECAN_Transmit@DATA4:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x6
   648  000074                     	ds	1
   649  000075                     ECAN_Transmit@DATA5:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x7
   653  000075                     	ds	1
   654  000076                     ECAN_Transmit@DATA6:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x8
   658  000076                     	ds	1
   659  000077                     ECAN_Transmit@DATA7:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x9
   663  000077                     	ds	1
   664  000078                     ECAN_Transmit@SIDH:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0xA
   668  000078                     	ds	1
   669  000079                     tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1h	equ	0xFE2
   677                           fsr1l	equ	0xFE1
   678                           
   679                           ; 0 bytes @ 0xB
   680                           
   681                           	psect	cstackCOMRAM
   682  000035                     __pcstackCOMRAM:
   683                           	opt stack 0
   684  000035                     parseMultiBitToSingleBit@buffer:
   685                           	opt stack 0
   686  000035                     decodeManchester@finalArray:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x0
   690  000035                     	ds	2
   691  000037                     parseMultiBitToSingleBit@startOffset:
   692                           	opt stack 0
   693  000037                     decodeManchester@resultArray:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x2
   697  000037                     	ds	2
   698  000039                     ??_decodeManchester:
   699  000039                     parseMultiBitToSingleBit@outputBuffer:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x4
   703  000039                     	ds	2
   704  00003B                     ??_parseMultiBitToSingleBit:
   705                           
   706                           ; 0 bytes @ 0x6
   707  00003B                     	ds	2
   708  00003D                     parseMultiBitToSingleBit@i:
   709                           	opt stack 0
   710  00003D                     decodeManchester@finalArray_index:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x8
   714  00003D                     	ds	2
   715  00003F                     parseMultiBitToSingleBit@resultArray_index:
   716                           	opt stack 0
   717  00003F                     decodeManchester@i:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0xA
   721  00003F                     	ds	2
   722  000041                     parseMultiBitToSingleBit@lastVal:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0xC
   726  000041                     	ds	2
   727  000043                     parseMultiBitToSingleBit@inARow:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0xE
   731  000043                     	ds	2
   732  000045                     ??_collectManch:
   733                           
   734                           ; 0 bytes @ 0x10
   735  000045                     	ds	1
   736  000046                     ??_ISR:
   737                           
   738                           ; 0 bytes @ 0x11
   739  000046                     	ds	14
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           postinc0	equ	0xFEE
   745                           wreg	equ	0xFE8
   746                           postdec1	equ	0xFE5
   747                           fsr1h	equ	0xFE2
   748                           fsr1l	equ	0xFE1
   749                           
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 14 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  2   76[None  ] int 
   762 ;; Registers used:
   763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels required when called:    5
   775 ;; This function calls:
   776 ;;		_CANSetup
   777 ;;		_Delay
   778 ;;		_ECAN_Receive
   779 ;;		_ECAN_Transmit
   780 ;;		_I2CSetup
   781 ;;		_InitDevice
   782 ;;		_setup_Interrupt
   783 ;;		_zipCAN
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text0
   790  001766                     __ptext0:
   791                           	opt stack 0
   792  001766                     _main:
   793                           	opt stack 26
   794                           
   795                           ;main.c: 16: InitDevice();
   796                           
   797                           ;incstack = 0
   798  001766  EC01  F00B         	call	_InitDevice	;wreg free
   799                           
   800                           ;main.c: 17: setup_Interrupt();
   801  00176A  EC14  F00C         	call	_setup_Interrupt	;wreg free
   802                           
   803                           ;main.c: 18: CANSetup();
   804  00176E  ECDF  F008         	call	_CANSetup	;wreg free
   805                           
   806                           ;main.c: 19: I2CSetup();
   807  001772  EC7C  F00B         	call	_I2CSetup	;wreg free
   808                           
   809                           ;main.c: 21: heartBeatCounter = 0;
   810  001776  0E00               	movlw	0
   811  001778  0100               	movlb	0	; () banked
   812  00177A  6F6B               	movwf	(_heartBeatCounter+1)& (0+255),b
   813  00177C  0E00               	movlw	0
   814  00177E  6F6A               	movwf	_heartBeatCounter& (0+255),b
   815                           
   816                           ; BSR set to: 0
   817                           ;main.c: 22: FIRST_SEND = 1;
   818  001780  0E00               	movlw	0
   819  001782  0100               	movlb	0	; () banked
   820  001784  6F61               	movwf	(_FIRST_SEND+1)& (0+255),b
   821  001786  0E01               	movlw	1
   822  001788  6F60               	movwf	_FIRST_SEND& (0+255),b
   823                           
   824                           ; BSR set to: 0
   825                           ;main.c: 23: I2C_FLAG = 0;
   826  00178A  0E00               	movlw	0
   827  00178C  6E12               	movwf	_I2C_FLAG+1,c
   828  00178E  0E00               	movlw	0
   829  001790  6E11               	movwf	_I2C_FLAG,c
   830                           
   831                           ; BSR set to: 0
   832                           ;main.c: 25: LATAbits.LATA7 = 1;
   833  001792  8E89               	bsf	3977,7,c	;volatile
   834                           
   835                           ; BSR set to: 0
   836                           ;main.c: 26: LATCbits.LATC6 = 0;
   837  001794  9C8B               	bcf	3979,6,c	;volatile
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 27: LATCbits.LATC7 = 0;
   841  001796  9E8B               	bcf	3979,7,c	;volatile
   842  001798                     l2893:
   843                           
   844                           ;main.c: 35: Delay(1);
   845  001798  0E00               	movlw	0
   846  00179A  0100               	movlb	0	; () banked
   847  00179C  6F6F               	movwf	(Delay@count+1)& (0+255),b
   848  00179E  0E01               	movlw	1
   849  0017A0  6F6E               	movwf	Delay@count& (0+255),b
   850  0017A2  EC08  F00C         	call	_Delay	;wreg free
   851  0017A6  D7F8               	goto	l2893
   852  0017A8                     __end_of_main:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           postdec1	equ	0xFE5
   861                           fsr1h	equ	0xFE2
   862                           fsr1l	equ	0xFE1
   863                           
   864 ;; *************** function _zipCAN *****************
   865 ;; Defined at:
   866 ;;		line 337 in file "ECAN.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;		None               void
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   882 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   883 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   884 ;;Total ram usage:        2 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    4
   887 ;; This function calls:
   888 ;;		_setBit
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text1
   895  000F10                     __ptext1:
   896                           	opt stack 0
   897  000F10                     _zipCAN:
   898                           	opt stack 26
   899                           
   900                           ;ECAN.c: 338: if(i2c_reg_map[8] == 1){
   901                           
   902                           ;incstack = 0
   903  000F10  0409               	decf	_i2c_reg_map+8,w,c	;volatile
   904  000F12  A4D8               	btfss	status,2,c
   905  000F14  D00B               	goto	l2811
   906                           
   907                           ;ECAN.c: 339: setBit(0, i2c_reg_map[8]);
   908  000F16  0E00               	movlw	0
   909  000F18  0100               	movlb	0	; () banked
   910  000F1A  6F6F               	movwf	(setBit@shift+1)& (0+255),b
   911  000F1C  0E00               	movlw	0
   912  000F1E  6F6E               	movwf	setBit@shift& (0+255),b
   913  000F20  C009  F070         	movff	_i2c_reg_map+8,setBit@value	;volatile
   914  000F24  0100               	movlb	0	; () banked
   915  000F26  6B71               	clrf	(setBit@value+1)& (0+255),b
   916  000F28  ECF5  F00B         	call	_setBit	;wreg free
   917  000F2C                     l2811:
   918                           
   919                           ;ECAN.c: 340: }
   920                           ;ECAN.c: 341: if(i2c_reg_map[9] != MAP_BRAKE){
   921  000F2C  500A               	movf	_i2c_reg_map+9,w,c	;volatile
   922  000F2E  0100               	movlb	0	; () banked
   923  000F30  6F74               	movwf	??_zipCAN& (0+255),b
   924  000F32  6B75               	clrf	(??_zipCAN+1)& (0+255),b
   925  000F34  5015               	movf	_MAP_BRAKE,w,c
   926  000F36  0100               	movlb	0	; () banked
   927  000F38  1974               	xorwf	??_zipCAN& (0+255),w,b
   928  000F3A  E105               	bnz	u2040
   929  000F3C  5016               	movf	_MAP_BRAKE+1,w,c
   930  000F3E  0100               	movlb	0	; () banked
   931  000F40  1975               	xorwf	(??_zipCAN+1)& (0+255),w,b
   932  000F42  B4D8               	btfsc	status,2,c
   933  000F44  D00E               	goto	l2817
   934  000F46                     u2040:
   935                           
   936                           ; BSR set to: 0
   937                           ;ECAN.c: 342: setBit(1, i2c_reg_map[9]);
   938  000F46  0E00               	movlw	0
   939  000F48  0100               	movlb	0	; () banked
   940  000F4A  6F6F               	movwf	(setBit@shift+1)& (0+255),b
   941  000F4C  0E01               	movlw	1
   942  000F4E  6F6E               	movwf	setBit@shift& (0+255),b
   943  000F50  C00A  F070         	movff	_i2c_reg_map+9,setBit@value	;volatile
   944  000F54  0100               	movlb	0	; () banked
   945  000F56  6B71               	clrf	(setBit@value+1)& (0+255),b
   946  000F58  ECF5  F00B         	call	_setBit	;wreg free
   947                           
   948                           ;ECAN.c: 343: MAP_BRAKE = i2c_reg_map[9];
   949  000F5C  C00A  F015         	movff	_i2c_reg_map+9,_MAP_BRAKE	;volatile
   950  000F60  6A16               	clrf	_MAP_BRAKE+1,c
   951  000F62                     l2817:
   952                           
   953                           ;ECAN.c: 344: }
   954                           ;ECAN.c: 345: if(i2c_reg_map[10] != MAP_BACKLIGHT){
   955  000F62  500B               	movf	_i2c_reg_map+10,w,c	;volatile
   956  000F64  0100               	movlb	0	; () banked
   957  000F66  6F74               	movwf	??_zipCAN& (0+255),b
   958  000F68  6B75               	clrf	(??_zipCAN+1)& (0+255),b
   959  000F6A  5013               	movf	_MAP_BACKLIGHT,w,c
   960  000F6C  0100               	movlb	0	; () banked
   961  000F6E  1974               	xorwf	??_zipCAN& (0+255),w,b
   962  000F70  E105               	bnz	u2050
   963  000F72  5014               	movf	_MAP_BACKLIGHT+1,w,c
   964  000F74  0100               	movlb	0	; () banked
   965  000F76  1975               	xorwf	(??_zipCAN+1)& (0+255),w,b
   966  000F78  B4D8               	btfsc	status,2,c
   967  000F7A  D00E               	goto	l2823
   968  000F7C                     u2050:
   969                           
   970                           ; BSR set to: 0
   971                           ;ECAN.c: 346: setBit(2, i2c_reg_map[10]);
   972  000F7C  0E00               	movlw	0
   973  000F7E  0100               	movlb	0	; () banked
   974  000F80  6F6F               	movwf	(setBit@shift+1)& (0+255),b
   975  000F82  0E02               	movlw	2
   976  000F84  6F6E               	movwf	setBit@shift& (0+255),b
   977  000F86  C00B  F070         	movff	_i2c_reg_map+10,setBit@value	;volatile
   978  000F8A  0100               	movlb	0	; () banked
   979  000F8C  6B71               	clrf	(setBit@value+1)& (0+255),b
   980  000F8E  ECF5  F00B         	call	_setBit	;wreg free
   981                           
   982                           ;ECAN.c: 347: MAP_BACKLIGHT = i2c_reg_map[10];
   983  000F92  C00B  F013         	movff	_i2c_reg_map+10,_MAP_BACKLIGHT	;volatile
   984  000F96  6A14               	clrf	_MAP_BACKLIGHT+1,c
   985  000F98                     l2823:
   986                           
   987                           ;ECAN.c: 348: }
   988                           ;ECAN.c: 349: if(i2c_reg_map[11] != MAP_V_BLINK){
   989  000F98  500C               	movf	_i2c_reg_map+11,w,c	;volatile
   990  000F9A  0100               	movlb	0	; () banked
   991  000F9C  6F74               	movwf	??_zipCAN& (0+255),b
   992  000F9E  6B75               	clrf	(??_zipCAN+1)& (0+255),b
   993  000FA0  5019               	movf	_MAP_V_BLINK,w,c
   994  000FA2  0100               	movlb	0	; () banked
   995  000FA4  1974               	xorwf	??_zipCAN& (0+255),w,b
   996  000FA6  E105               	bnz	u2060
   997  000FA8  501A               	movf	_MAP_V_BLINK+1,w,c
   998  000FAA  0100               	movlb	0	; () banked
   999  000FAC  1975               	xorwf	(??_zipCAN+1)& (0+255),w,b
  1000  000FAE  B4D8               	btfsc	status,2,c
  1001  000FB0  D00E               	goto	l2829
  1002  000FB2                     u2060:
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;ECAN.c: 350: setBit(3, i2c_reg_map[11]);
  1006  000FB2  0E00               	movlw	0
  1007  000FB4  0100               	movlb	0	; () banked
  1008  000FB6  6F6F               	movwf	(setBit@shift+1)& (0+255),b
  1009  000FB8  0E03               	movlw	3
  1010  000FBA  6F6E               	movwf	setBit@shift& (0+255),b
  1011  000FBC  C00C  F070         	movff	_i2c_reg_map+11,setBit@value	;volatile
  1012  000FC0  0100               	movlb	0	; () banked
  1013  000FC2  6B71               	clrf	(setBit@value+1)& (0+255),b
  1014  000FC4  ECF5  F00B         	call	_setBit	;wreg free
  1015                           
  1016                           ;ECAN.c: 351: MAP_V_BLINK = i2c_reg_map[11];
  1017  000FC8  C00C  F019         	movff	_i2c_reg_map+11,_MAP_V_BLINK	;volatile
  1018  000FCC  6A1A               	clrf	_MAP_V_BLINK+1,c
  1019  000FCE                     l2829:
  1020                           
  1021                           ;ECAN.c: 352: }
  1022                           ;ECAN.c: 353: if(i2c_reg_map[12] != MAP_H_BLINK){
  1023  000FCE  500D               	movf	_i2c_reg_map+12,w,c	;volatile
  1024  000FD0  0100               	movlb	0	; () banked
  1025  000FD2  6F74               	movwf	??_zipCAN& (0+255),b
  1026  000FD4  6B75               	clrf	(??_zipCAN+1)& (0+255),b
  1027  000FD6  5017               	movf	_MAP_H_BLINK,w,c
  1028  000FD8  0100               	movlb	0	; () banked
  1029  000FDA  1974               	xorwf	??_zipCAN& (0+255),w,b
  1030  000FDC  E105               	bnz	u2070
  1031  000FDE  5018               	movf	_MAP_H_BLINK+1,w,c
  1032  000FE0  0100               	movlb	0	; () banked
  1033  000FE2  1975               	xorwf	(??_zipCAN+1)& (0+255),w,b
  1034  000FE4  B4D8               	btfsc	status,2,c
  1035  000FE6  D00E               	goto	l2835
  1036  000FE8                     u2070:
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;ECAN.c: 354: setBit(4, i2c_reg_map[12]);
  1040  000FE8  0E00               	movlw	0
  1041  000FEA  0100               	movlb	0	; () banked
  1042  000FEC  6F6F               	movwf	(setBit@shift+1)& (0+255),b
  1043  000FEE  0E04               	movlw	4
  1044  000FF0  6F6E               	movwf	setBit@shift& (0+255),b
  1045  000FF2  C00D  F070         	movff	_i2c_reg_map+12,setBit@value	;volatile
  1046  000FF6  0100               	movlb	0	; () banked
  1047  000FF8  6B71               	clrf	(setBit@value+1)& (0+255),b
  1048  000FFA  ECF5  F00B         	call	_setBit	;wreg free
  1049                           
  1050                           ;ECAN.c: 355: MAP_H_BLINK = i2c_reg_map[12];
  1051  000FFE  C00D  F017         	movff	_i2c_reg_map+12,_MAP_H_BLINK	;volatile
  1052  001002  6A18               	clrf	_MAP_H_BLINK+1,c
  1053  001004                     l2835:
  1054                           
  1055                           ;ECAN.c: 356: }
  1056                           ;ECAN.c: 357: if(i2c_reg_map[13] != MAP_DIRECTION){
  1057  001004  500E               	movf	_i2c_reg_map+13,w,c	;volatile
  1058  001006  0100               	movlb	0	; () banked
  1059  001008  6F74               	movwf	??_zipCAN& (0+255),b
  1060  00100A  6B75               	clrf	(??_zipCAN+1)& (0+255),b
  1061  00100C  0100               	movlb	0	; () banked
  1062  00100E  5164               	movf	_MAP_DIRECTION& (0+255),w,b
  1063  001010  0100               	movlb	0	; () banked
  1064  001012  1974               	xorwf	??_zipCAN& (0+255),w,b
  1065  001014  E106               	bnz	u2080
  1066  001016  0100               	movlb	0	; () banked
  1067  001018  5165               	movf	(_MAP_DIRECTION+1)& (0+255),w,b
  1068  00101A  0100               	movlb	0	; () banked
  1069  00101C  1975               	xorwf	(??_zipCAN+1)& (0+255),w,b
  1070  00101E  B4D8               	btfsc	status,2,c
  1071  001020  D00F               	goto	l2841
  1072  001022                     u2080:
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;ECAN.c: 358: setBit(5, i2c_reg_map[13]);
  1076  001022  0E00               	movlw	0
  1077  001024  0100               	movlb	0	; () banked
  1078  001026  6F6F               	movwf	(setBit@shift+1)& (0+255),b
  1079  001028  0E05               	movlw	5
  1080  00102A  6F6E               	movwf	setBit@shift& (0+255),b
  1081  00102C  C00E  F070         	movff	_i2c_reg_map+13,setBit@value	;volatile
  1082  001030  0100               	movlb	0	; () banked
  1083  001032  6B71               	clrf	(setBit@value+1)& (0+255),b
  1084  001034  ECF5  F00B         	call	_setBit	;wreg free
  1085                           
  1086                           ;ECAN.c: 359: MAP_DIRECTION = i2c_reg_map[13];
  1087  001038  C00E  F064         	movff	_i2c_reg_map+13,_MAP_DIRECTION	;volatile
  1088  00103C  0100               	movlb	0	; () banked
  1089  00103E  6B65               	clrf	(_MAP_DIRECTION+1)& (0+255),b
  1090  001040                     l2841:
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;ECAN.c: 360: }
  1094                           ;ECAN.c: 361: if(i2c_reg_map[14] != MAP_SAFETYPIN){
  1095  001040  500F               	movf	_i2c_reg_map+14,w,c	;volatile
  1096  001042  0100               	movlb	0	; () banked
  1097  001044  6F74               	movwf	??_zipCAN& (0+255),b
  1098  001046  6B75               	clrf	(??_zipCAN+1)& (0+255),b
  1099  001048  0100               	movlb	0	; () banked
  1100  00104A  5168               	movf	_MAP_SAFETYPIN& (0+255),w,b
  1101  00104C  0100               	movlb	0	; () banked
  1102  00104E  1974               	xorwf	??_zipCAN& (0+255),w,b
  1103  001050  E106               	bnz	u2090
  1104  001052  0100               	movlb	0	; () banked
  1105  001054  5169               	movf	(_MAP_SAFETYPIN+1)& (0+255),w,b
  1106  001056  0100               	movlb	0	; () banked
  1107  001058  1975               	xorwf	(??_zipCAN+1)& (0+255),w,b
  1108  00105A  B4D8               	btfsc	status,2,c
  1109  00105C  0012               	return	
  1110  00105E                     u2090:
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;ECAN.c: 362: setBit(6, i2c_reg_map[14]);
  1114  00105E  0E00               	movlw	0
  1115  001060  0100               	movlb	0	; () banked
  1116  001062  6F6F               	movwf	(setBit@shift+1)& (0+255),b
  1117  001064  0E06               	movlw	6
  1118  001066  6F6E               	movwf	setBit@shift& (0+255),b
  1119  001068  C00F  F070         	movff	_i2c_reg_map+14,setBit@value	;volatile
  1120  00106C  0100               	movlb	0	; () banked
  1121  00106E  6B71               	clrf	(setBit@value+1)& (0+255),b
  1122  001070  ECF5  F00B         	call	_setBit	;wreg free
  1123                           
  1124                           ;ECAN.c: 363: MAP_SAFETYPIN = i2c_reg_map[14];
  1125  001074  C00F  F068         	movff	_i2c_reg_map+14,_MAP_SAFETYPIN	;volatile
  1126  001078  0100               	movlb	0	; () banked
  1127  00107A  6B69               	clrf	(_MAP_SAFETYPIN+1)& (0+255),b
  1128  00107C  0012               	return	
  1129  00107E                     __end_of_zipCAN:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           postdec1	equ	0xFE5
  1138                           fsr1h	equ	0xFE2
  1139                           fsr1l	equ	0xFE1
  1140                           status	equ	0xFD8
  1141                           
  1142 ;; *************** function _setBit *****************
  1143 ;; Defined at:
  1144 ;;		line 367 in file "ECAN.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  shift           2    0[BANK0 ] int 
  1147 ;;  value           2    2[BANK0 ] int 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;		None               void
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1161 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1163 ;;Total ram usage:        6 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    3
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_zipCAN
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text2
  1174  0017EA                     __ptext2:
  1175                           	opt stack 0
  1176  0017EA                     _setBit:
  1177                           	opt stack 26
  1178                           
  1179                           ;ECAN.c: 368: MAP_BITDATA = MAP_BITDATA ^ (1 << shift);
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;incstack = 0
  1183  0017EA  C06E  F072         	movff	setBit@shift,??_setBit
  1184  0017EE  0E01               	movlw	1
  1185  0017F0  0100               	movlb	0	; () banked
  1186  0017F2  6F73               	movwf	(??_setBit+1)& (0+255),b
  1187  0017F4  0100               	movlb	0	; () banked
  1188  0017F6  2B72               	incf	??_setBit& (0+255),f,b
  1189  0017F8  D003               	goto	u1904
  1190  0017FA                     u1905:
  1191  0017FA  0100               	movlb	0	; () banked
  1192  0017FC  90D8               	bcf	status,0,c
  1193  0017FE  3773               	rlcf	(??_setBit+1)& (0+255),f,b
  1194  001800                     u1904:
  1195  001800  0100               	movlb	0	; () banked
  1196  001802  2F72               	decfsz	??_setBit& (0+255),f,b
  1197  001804  D7FA               	goto	u1905
  1198  001806  0100               	movlb	0	; () banked
  1199  001808  5173               	movf	(??_setBit+1)& (0+255),w,b
  1200  00180A  1823               	xorwf	_MAP_BITDATA,w,c
  1201  00180C  6E23               	movwf	_MAP_BITDATA,c
  1202                           
  1203                           ; BSR set to: 0
  1204  00180E  0012               	return		;funcret
  1205  001810                     __end_of_setBit:
  1206                           	opt stack 0
  1207                           tblptru	equ	0xFF8
  1208                           tblptrh	equ	0xFF7
  1209                           tblptrl	equ	0xFF6
  1210                           tablat	equ	0xFF5
  1211                           postinc0	equ	0xFEE
  1212                           wreg	equ	0xFE8
  1213                           postdec1	equ	0xFE5
  1214                           fsr1h	equ	0xFE2
  1215                           fsr1l	equ	0xFE1
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _setup_Interrupt *****************
  1219 ;; Defined at:
  1220 ;;		line 61 in file "init.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  2    4[None  ] int 
  1227 ;; Registers used:
  1228 ;;		None
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    3
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text3
  1249  001828                     __ptext3:
  1250                           	opt stack 0
  1251  001828                     _setup_Interrupt:
  1252                           	opt stack 27
  1253                           
  1254                           ;init.c: 62: RCONbits.IPEN = 1;
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;incstack = 0
  1258  001828  8ED0               	bsf	4048,7,c	;volatile
  1259                           
  1260                           ;init.c: 63: INTCONbits.GIEH = 1;
  1261  00182A  8EF2               	bsf	intcon,7,c	;volatile
  1262                           
  1263                           ;init.c: 64: INTCONbits.GIEL = 1;
  1264  00182C  8CF2               	bsf	intcon,6,c	;volatile
  1265                           
  1266                           ;init.c: 65: INTCONbits.TMR0IE = 1;
  1267  00182E  8AF2               	bsf	intcon,5,c	;volatile
  1268  001830  0012               	return		;funcret
  1269  001832                     __end_of_setup_Interrupt:
  1270                           	opt stack 0
  1271                           tblptru	equ	0xFF8
  1272                           tblptrh	equ	0xFF7
  1273                           tblptrl	equ	0xFF6
  1274                           tablat	equ	0xFF5
  1275                           intcon	equ	0xFF2
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           fsr1h	equ	0xFE2
  1280                           fsr1l	equ	0xFE1
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _InitDevice *****************
  1284 ;; Defined at:
  1285 ;;		line 9 in file "init.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, status,2
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    3
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text4
  1314  001602                     __ptext4:
  1315                           	opt stack 0
  1316  001602                     _InitDevice:
  1317                           	opt stack 27
  1318                           
  1319                           ;init.c: 11: Interrupt_counter = 0;
  1320                           
  1321                           ;incstack = 0
  1322  001602  0E00               	movlw	0
  1323  001604  0100               	movlb	0	; () banked
  1324  001606  6F63               	movwf	(_Interrupt_counter+1)& (0+255),b
  1325  001608  0E00               	movlw	0
  1326  00160A  6F62               	movwf	_Interrupt_counter& (0+255),b
  1327                           
  1328                           ;init.c: 14: OSCCON = 0x60;
  1329  00160C  0E60               	movlw	96
  1330  00160E  6ED3               	movwf	4051,c	;volatile
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;init.c: 15: OSCCONbits.IRCF = 7;
  1334  001610  88D3               	bsf	4051,4,c	;volatile
  1335  001612  8AD3               	bsf	4051,5,c	;volatile
  1336  001614  8CD3               	bsf	4051,6,c	;volatile
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  1340  001616  8C9B               	bsf	3995,6,c	;volatile
  1341                           
  1342                           ;init.c: 19: heartbeatCount = 0;
  1343  001618  0E00               	movlw	0
  1344  00161A  0100               	movlb	0	; () banked
  1345  00161C  6F6D               	movwf	(_heartbeatCount+1)& (0+255),b
  1346  00161E  0E00               	movlw	0
  1347  001620  6F6C               	movwf	_heartbeatCount& (0+255),b
  1348                           
  1349                           ;init.c: 20: buttonWasPressed = 0;
  1350  001622  0E00               	movlw	0
  1351  001624  6E26               	movwf	_buttonWasPressed,c
  1352                           
  1353                           ;init.c: 23: ANCON0 = ANCON1 = 0x00;
  1354  001626  0E00               	movlw	0
  1355  001628  010F               	movlb	15	; () banked
  1356  00162A  6F5C               	movwf	92,b	;volatile
  1357  00162C  CF5C FF5D          	movff	3932,3933	;volatile
  1358                           
  1359                           ; BSR set to: 15
  1360                           ;init.c: 24: TRISB = 0xFF;
  1361  001630  6893               	setf	3987,c	;volatile
  1362                           
  1363                           ;init.c: 27: TRISA = 0b01111111;
  1364  001632  0E7F               	movlw	127
  1365  001634  6E92               	movwf	3986,c	;volatile
  1366                           
  1367                           ; BSR set to: 15
  1368                           ;init.c: 28: LATAbits.LATA7 = 0;
  1369  001636  9E89               	bcf	3977,7,c	;volatile
  1370                           
  1371                           ;init.c: 31: TRISC = 0b00011000;
  1372  001638  0E18               	movlw	24
  1373  00163A  6E94               	movwf	3988,c	;volatile
  1374                           
  1375                           ; BSR set to: 15
  1376                           ;init.c: 32: LATCbits.LATC6 = 0;
  1377  00163C  9C8B               	bcf	3979,6,c	;volatile
  1378                           
  1379                           ; BSR set to: 15
  1380                           ;init.c: 33: LATCbits.LATC7 = 0;
  1381  00163E  9E8B               	bcf	3979,7,c	;volatile
  1382                           
  1383                           ; BSR set to: 15
  1384                           ;init.c: 39: T0CONbits.TMR0ON = 1;
  1385  001640  8ED5               	bsf	4053,7,c	;volatile
  1386                           
  1387                           ; BSR set to: 15
  1388                           ;init.c: 40: T0CONbits.T08BIT = 0;
  1389  001642  9CD5               	bcf	4053,6,c	;volatile
  1390                           
  1391                           ; BSR set to: 15
  1392                           ;init.c: 41: T0CONbits.T0CS = 0;
  1393  001644  9AD5               	bcf	4053,5,c	;volatile
  1394                           
  1395                           ; BSR set to: 15
  1396                           ;init.c: 43: T0CONbits.PSA = 0;
  1397  001646  96D5               	bcf	4053,3,c	;volatile
  1398                           
  1399                           ; BSR set to: 15
  1400                           ;init.c: 44: T0CONbits.T0PS = 7;
  1401  001648  80D5               	bsf	4053,0,c	;volatile
  1402  00164A  82D5               	bsf	4053,1,c	;volatile
  1403  00164C  84D5               	bsf	4053,2,c	;volatile
  1404                           
  1405                           ;init.c: 51: MAP_BRAKE = 0;
  1406  00164E  0E00               	movlw	0
  1407  001650  6E16               	movwf	_MAP_BRAKE+1,c
  1408  001652  0E00               	movlw	0
  1409  001654  6E15               	movwf	_MAP_BRAKE,c
  1410                           
  1411                           ;init.c: 52: MAP_BACKLIGHT = 0;
  1412  001656  0E00               	movlw	0
  1413  001658  6E14               	movwf	_MAP_BACKLIGHT+1,c
  1414  00165A  0E00               	movlw	0
  1415  00165C  6E13               	movwf	_MAP_BACKLIGHT,c
  1416                           
  1417                           ;init.c: 53: MAP_V_BLINK = 0;
  1418  00165E  0E00               	movlw	0
  1419  001660  6E1A               	movwf	_MAP_V_BLINK+1,c
  1420  001662  0E00               	movlw	0
  1421  001664  6E19               	movwf	_MAP_V_BLINK,c
  1422                           
  1423                           ;init.c: 54: MAP_H_BLINK = 0;
  1424  001666  0E00               	movlw	0
  1425  001668  6E18               	movwf	_MAP_H_BLINK+1,c
  1426  00166A  0E00               	movlw	0
  1427  00166C  6E17               	movwf	_MAP_H_BLINK,c
  1428                           
  1429                           ;init.c: 55: MAP_DIRECTION = 0;
  1430  00166E  0E00               	movlw	0
  1431  001670  0100               	movlb	0	; () banked
  1432  001672  6F65               	movwf	(_MAP_DIRECTION+1)& (0+255),b
  1433  001674  0E00               	movlw	0
  1434  001676  6F64               	movwf	_MAP_DIRECTION& (0+255),b
  1435                           
  1436                           ;init.c: 56: MAP_SAFETYPIN = 0;
  1437  001678  0E00               	movlw	0
  1438  00167A  0100               	movlb	0	; () banked
  1439  00167C  6F69               	movwf	(_MAP_SAFETYPIN+1)& (0+255),b
  1440  00167E  0E00               	movlw	0
  1441  001680  6F68               	movwf	_MAP_SAFETYPIN& (0+255),b
  1442                           
  1443                           ; BSR set to: 0
  1444  001682  0012               	return		;funcret
  1445  001684                     __end_of_InitDevice:
  1446                           	opt stack 0
  1447                           tblptru	equ	0xFF8
  1448                           tblptrh	equ	0xFF7
  1449                           tblptrl	equ	0xFF6
  1450                           tablat	equ	0xFF5
  1451                           intcon	equ	0xFF2
  1452                           postinc0	equ	0xFEE
  1453                           wreg	equ	0xFE8
  1454                           postdec1	equ	0xFE5
  1455                           fsr1h	equ	0xFE2
  1456                           fsr1l	equ	0xFE1
  1457                           status	equ	0xFD8
  1458                           
  1459 ;; *************** function _I2CSetup *****************
  1460 ;; Defined at:
  1461 ;;		line 10 in file "I2C.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  i               2    0[BANK0 ] int 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1479 ;;Total ram usage:        2 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text5
  1490  0016F8                     __ptext5:
  1491                           	opt stack 0
  1492  0016F8                     _I2CSetup:
  1493                           	opt stack 27
  1494                           
  1495                           ;I2C.c: 12: SSPADD = 0x55;
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;incstack = 0
  1499  0016F8  0E55               	movlw	85
  1500  0016FA  6EC8               	movwf	4040,c	;volatile
  1501                           
  1502                           ;I2C.c: 13: SSPCON1 = 0x36;
  1503  0016FC  0E36               	movlw	54
  1504  0016FE  6EC6               	movwf	4038,c	;volatile
  1505                           
  1506                           ;I2C.c: 16: SSPSTAT = 0x00;
  1507  001700  0E00               	movlw	0
  1508  001702  6EC7               	movwf	4039,c	;volatile
  1509                           
  1510                           ;I2C.c: 17: SSPCON2 = 0x01;
  1511  001704  0E01               	movlw	1
  1512  001706  6EC5               	movwf	4037,c	;volatile
  1513                           
  1514                           ;I2C.c: 19: PIR1bits.SSPIF = 0;
  1515  001708  969E               	bcf	3998,3,c	;volatile
  1516                           
  1517                           ;I2C.c: 20: PIE1bits.SSPIE = 1;
  1518  00170A  869D               	bsf	3997,3,c	;volatile
  1519                           
  1520                           ;I2C.c: 21: INTCONbits.GIE_GIEH = 1;
  1521  00170C  8EF2               	bsf	intcon,7,c	;volatile
  1522                           
  1523                           ;I2C.c: 22: INTCONbits.PEIE_GIEL = 1;
  1524  00170E  8CF2               	bsf	intcon,6,c	;volatile
  1525                           
  1526                           ;I2C.c: 25: for(int i = 0; i<16; i++){
  1527  001710  0E00               	movlw	0
  1528  001712  0100               	movlb	0	; () banked
  1529  001714  6F6F               	movwf	(I2CSetup@i+1)& (0+255),b
  1530  001716  0E00               	movlw	0
  1531  001718  6F6E               	movwf	I2CSetup@i& (0+255),b
  1532  00171A                     l2757:
  1533                           
  1534                           ; BSR set to: 0
  1535  00171A  0100               	movlb	0	; () banked
  1536  00171C  BF6F               	btfsc	(I2CSetup@i+1)& (0+255),7,b
  1537  00171E  D008               	goto	l2761
  1538  001720  0100               	movlb	0	; () banked
  1539  001722  516F               	movf	(I2CSetup@i+1)& (0+255),w,b
  1540  001724  E113               	bnz	l2767
  1541  001726  0E10               	movlw	16
  1542  001728  0100               	movlb	0	; () banked
  1543  00172A  5D6E               	subwf	I2CSetup@i& (0+255),w,b
  1544  00172C  B0D8               	btfsc	status,0,c
  1545  00172E  D00E               	goto	l2767
  1546  001730                     l2761:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;I2C.c: 26: i2c_reg_map[i] = 0;
  1550  001730  0E01               	movlw	low _i2c_reg_map
  1551  001732  0100               	movlb	0	; () banked
  1552  001734  256E               	addwf	I2CSetup@i& (0+255),w,b
  1553  001736  6ED9               	movwf	fsr2l,c
  1554  001738  0E00               	movlw	high _i2c_reg_map
  1555  00173A  0100               	movlb	0	; () banked
  1556  00173C  216F               	addwfc	(I2CSetup@i+1)& (0+255),w,b
  1557  00173E  6EDA               	movwf	fsr2h,c
  1558  001740  0E00               	movlw	0
  1559  001742  6EDF               	movwf	indf2,c
  1560                           
  1561                           ; BSR set to: 0
  1562  001744  0100               	movlb	0	; () banked
  1563  001746  4B6E               	infsnz	I2CSetup@i& (0+255),f,b
  1564  001748  2B6F               	incf	(I2CSetup@i+1)& (0+255),f,b
  1565  00174A  D7E7               	goto	l2757
  1566  00174C                     l2767:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;I2C.c: 27: }
  1570                           ;I2C.c: 30: i2c_reg_map[8] = 1;
  1571  00174C  0E01               	movlw	1
  1572  00174E  6E09               	movwf	_i2c_reg_map+8,c	;volatile
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;I2C.c: 31: i2c_reg_map[temp_D2] = 1;
  1576  001750  502A               	movf	_temp_D2,w,c
  1577  001752  0D01               	mullw	1
  1578  001754  0E01               	movlw	low _i2c_reg_map
  1579  001756  24F3               	addwf	prodl,w,c
  1580  001758  6ED9               	movwf	fsr2l,c
  1581  00175A  0E00               	movlw	high _i2c_reg_map
  1582  00175C  20F4               	addwfc	prodh,w,c
  1583  00175E  6EDA               	movwf	fsr2h,c
  1584  001760  0E01               	movlw	1
  1585  001762  6EDF               	movwf	indf2,c
  1586                           
  1587                           ; BSR set to: 0
  1588  001764  0012               	return		;funcret
  1589  001766                     __end_of_I2CSetup:
  1590                           	opt stack 0
  1591                           tblptru	equ	0xFF8
  1592                           tblptrh	equ	0xFF7
  1593                           tblptrl	equ	0xFF6
  1594                           tablat	equ	0xFF5
  1595                           prodh	equ	0xFF4
  1596                           prodl	equ	0xFF3
  1597                           intcon	equ	0xFF2
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1h	equ	0xFE2
  1602                           fsr1l	equ	0xFE1
  1603                           indf2	equ	0xFDF
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function _ECAN_Transmit *****************
  1609 ;; Defined at:
  1610 ;;		line 296 in file "ECAN.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  SIDH            1    wreg     unsigned char 
  1613 ;;  SIDL            1    0[BANK0 ] unsigned char 
  1614 ;;  DLC             1    1[BANK0 ] unsigned char 
  1615 ;;  TRANSMIT_ID     1    2[BANK0 ] unsigned char 
  1616 ;;  DATA1           1    3[BANK0 ] unsigned char 
  1617 ;;  DATA2           1    4[BANK0 ] unsigned char 
  1618 ;;  DATA3           1    5[BANK0 ] unsigned char 
  1619 ;;  DATA4           1    6[BANK0 ] unsigned char 
  1620 ;;  DATA5           1    7[BANK0 ] unsigned char 
  1621 ;;  DATA6           1    8[BANK0 ] unsigned char 
  1622 ;;  DATA7           1    9[BANK0 ] unsigned char 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  SIDH            1   10[BANK0 ] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;		None               void
  1627 ;; Registers used:
  1628 ;;		wreg, status,2
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1634 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1637 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1638 ;;Total ram usage:       11 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    3
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text6
  1649  0017A8                     __ptext6:
  1650                           	opt stack 0
  1651  0017A8                     _ECAN_Transmit:
  1652                           	opt stack 27
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;incstack = 0
  1656                           ;ECAN_Transmit@SIDH stored from wreg
  1657  0017A8  0100               	movlb	0	; () banked
  1658  0017AA  6F78               	movwf	ECAN_Transmit@SIDH& (0+255),b
  1659                           
  1660                           ;ECAN.c: 308: TXB0EIDH = 0x00;
  1661  0017AC  0E00               	movlw	0
  1662  0017AE  010F               	movlb	15	; () banked
  1663  0017B0  6F23               	movwf	35,b	;volatile
  1664                           
  1665                           ;ECAN.c: 309: TXB0EIDL = 0x00;
  1666  0017B2  0E00               	movlw	0
  1667  0017B4  010F               	movlb	15	; () banked
  1668  0017B6  6F24               	movwf	36,b	;volatile
  1669                           
  1670                           ; BSR set to: 15
  1671                           ;ECAN.c: 312: TXB0SIDH = SIDH;
  1672  0017B8  C078  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  1673                           
  1674                           ; BSR set to: 15
  1675                           ;ECAN.c: 313: TXB0SIDL = SIDL;
  1676  0017BC  C06E  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  1677                           
  1678                           ; BSR set to: 15
  1679                           ;ECAN.c: 314: TXB0DLC = DLC;
  1680  0017C0  C06F  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  1681                           
  1682                           ; BSR set to: 15
  1683                           ;ECAN.c: 323: TXB0D0 = TRANSMIT_ID;
  1684  0017C4  C070  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  1685                           
  1686                           ; BSR set to: 15
  1687                           ;ECAN.c: 324: TXB0D1 = DATA1;
  1688  0017C8  C071  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  1689                           
  1690                           ; BSR set to: 15
  1691                           ;ECAN.c: 325: TXB0D2 = DATA2;
  1692  0017CC  C072  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  1693                           
  1694                           ; BSR set to: 15
  1695                           ;ECAN.c: 326: TXB0D3 = DATA3;
  1696  0017D0  C073  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  1697                           
  1698                           ; BSR set to: 15
  1699                           ;ECAN.c: 327: TXB0D4 = DATA4;
  1700  0017D4  C074  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  1701                           
  1702                           ; BSR set to: 15
  1703                           ;ECAN.c: 328: TXB0D5 = DATA5;
  1704  0017D8  C075  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  1705                           
  1706                           ; BSR set to: 15
  1707                           ;ECAN.c: 329: TXB0D6 = DATA6;
  1708  0017DC  C076  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  1709                           
  1710                           ; BSR set to: 15
  1711                           ;ECAN.c: 330: TXB0D7 = DATA7;
  1712  0017E0  C077  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  1713                           
  1714                           ; BSR set to: 15
  1715                           ;ECAN.c: 332: TXB0CONbits.TXREQ = 1;
  1716  0017E4  010F               	movlb	15	; () banked
  1717  0017E6  8720               	bsf	32,3,b	;volatile
  1718                           
  1719                           ; BSR set to: 15
  1720  0017E8  0012               	return		;funcret
  1721  0017EA                     __end_of_ECAN_Transmit:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           intcon	equ	0xFF2
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           postdec1	equ	0xFE5
  1733                           fsr1h	equ	0xFE2
  1734                           fsr1l	equ	0xFE1
  1735                           indf2	equ	0xFDF
  1736                           fsr2h	equ	0xFDA
  1737                           fsr2l	equ	0xFD9
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _ECAN_Receive *****************
  1741 ;; Defined at:
  1742 ;;		line 215 in file "ECAN.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  RXMsgFlag       1    0[BANK0 ] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      unsigned char 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;Total ram usage:        1 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    3
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text7
  1771  0013D8                     __ptext7:
  1772                           	opt stack 0
  1773  0013D8                     _ECAN_Receive:
  1774                           	opt stack 27
  1775                           
  1776                           ;ECAN.c: 217: unsigned char RXMsgFlag;
  1777                           ;ECAN.c: 219: RXMsgFlag = 0x00;
  1778                           
  1779                           ; BSR set to: 15
  1780                           ;incstack = 0
  1781  0013D8  0E00               	movlw	0
  1782  0013DA  0100               	movlb	0	; () banked
  1783  0013DC  6F6E               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;ECAN.c: 221: if (RXB0CONbits.RXFUL)
  1787  0013DE  AE60               	btfss	3936,7,c	;volatile
  1788  0013E0  D01C               	goto	l377
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;ECAN.c: 222: {
  1792                           ;ECAN.c: 223: temp_EIDH = RXB0EIDH;
  1793  0013E2  CF63 F031          	movff	3939,_temp_EIDH	;volatile
  1794                           
  1795                           ;ECAN.c: 224: temp_EIDL = RXB0EIDL;
  1796  0013E6  CF64 F032          	movff	3940,_temp_EIDL	;volatile
  1797                           
  1798                           ;ECAN.c: 225: temp_SIDH = RXB0SIDH;
  1799  0013EA  CF61 F033          	movff	3937,_temp_SIDH	;volatile
  1800                           
  1801                           ;ECAN.c: 226: temp_SIDL = RXB0SIDL;
  1802  0013EE  CF62 F034          	movff	3938,_temp_SIDL	;volatile
  1803                           
  1804                           ;ECAN.c: 227: temp_DLC = RXB0DLC;
  1805  0013F2  CF65 F030          	movff	3941,_temp_DLC	;volatile
  1806                           
  1807                           ;ECAN.c: 228: MAP_REC_BATTERYSTATUS = RXB0D0;
  1808  0013F6  CF66 F024          	movff	3942,_MAP_REC_BATTERYSTATUS	;volatile
  1809                           
  1810                           ;ECAN.c: 229: MAP_REC_VELOCITY = RXB0D1;
  1811  0013FA  CF67 F025          	movff	3943,_MAP_REC_VELOCITY	;volatile
  1812                           
  1813                           ;ECAN.c: 230: temp_D2 = RXB0D2;
  1814  0013FE  CF68 F02A          	movff	3944,_temp_D2	;volatile
  1815                           
  1816                           ;ECAN.c: 231: temp_D3 = RXB0D3;
  1817  001402  CF69 F02B          	movff	3945,_temp_D3	;volatile
  1818                           
  1819                           ;ECAN.c: 232: temp_D4 = RXB0D4;
  1820  001406  CF6A F02C          	movff	3946,_temp_D4	;volatile
  1821                           
  1822                           ;ECAN.c: 233: temp_D5 = RXB0D5;
  1823  00140A  CF6B F02D          	movff	3947,_temp_D5	;volatile
  1824                           
  1825                           ;ECAN.c: 234: temp_D6 = RXB0D6;
  1826  00140E  CF6C F02E          	movff	3948,_temp_D6	;volatile
  1827                           
  1828                           ;ECAN.c: 235: temp_D7 = RXB0D7;
  1829  001412  CF6D F02F          	movff	3949,_temp_D7	;volatile
  1830                           
  1831                           ;ECAN.c: 236: RXB0CONbits.RXFUL = 0;
  1832  001416  9E60               	bcf	3936,7,c	;volatile
  1833  001418  D03F               	goto	l2789
  1834  00141A                     l377:
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;ECAN.c: 239: else if (RXB1CONbits.RXFUL)
  1838  00141A  010F               	movlb	15	; () banked
  1839  00141C  AF30               	btfss	48,7,b	;volatile
  1840  00141E  D01D               	goto	l379
  1841                           
  1842                           ; BSR set to: 15
  1843                           ;ECAN.c: 240: {
  1844                           ;ECAN.c: 241: temp_EIDH = RXB1EIDH;
  1845  001420  CF33 F031          	movff	3891,_temp_EIDH	;volatile
  1846                           
  1847                           ;ECAN.c: 242: temp_EIDL = RXB1EIDL;
  1848  001424  CF34 F032          	movff	3892,_temp_EIDL	;volatile
  1849                           
  1850                           ;ECAN.c: 243: temp_SIDH = RXB1SIDH;
  1851  001428  CF31 F033          	movff	3889,_temp_SIDH	;volatile
  1852                           
  1853                           ;ECAN.c: 244: temp_SIDL = RXB1SIDL;
  1854  00142C  CF32 F034          	movff	3890,_temp_SIDL	;volatile
  1855                           
  1856                           ;ECAN.c: 245: temp_DLC = RXB1DLC;
  1857  001430  CF35 F030          	movff	3893,_temp_DLC	;volatile
  1858                           
  1859                           ;ECAN.c: 246: MAP_REC_BATTERYSTATUS = RXB1D0;
  1860  001434  CF36 F024          	movff	3894,_MAP_REC_BATTERYSTATUS	;volatile
  1861                           
  1862                           ;ECAN.c: 247: MAP_REC_VELOCITY = RXB1D1;
  1863  001438  CF37 F025          	movff	3895,_MAP_REC_VELOCITY	;volatile
  1864                           
  1865                           ;ECAN.c: 248: temp_D2 = RXB1D2;
  1866  00143C  CF38 F02A          	movff	3896,_temp_D2	;volatile
  1867                           
  1868                           ;ECAN.c: 249: temp_D3 = RXB1D3;
  1869  001440  CF39 F02B          	movff	3897,_temp_D3	;volatile
  1870                           
  1871                           ;ECAN.c: 250: temp_D4 = RXB1D4;
  1872  001444  CF3A F02C          	movff	3898,_temp_D4	;volatile
  1873                           
  1874                           ;ECAN.c: 251: temp_D5 = RXB1D5;
  1875  001448  CF3B F02D          	movff	3899,_temp_D5	;volatile
  1876                           
  1877                           ;ECAN.c: 252: temp_D6 = RXB1D6;
  1878  00144C  CF3C F02E          	movff	3900,_temp_D6	;volatile
  1879                           
  1880                           ;ECAN.c: 253: temp_D7 = RXB1D7;
  1881  001450  CF3D F02F          	movff	3901,_temp_D7	;volatile
  1882                           
  1883                           ;ECAN.c: 254: RXB1CONbits.RXFUL = 0;
  1884  001454  010F               	movlb	15	; () banked
  1885  001456  9F30               	bcf	48,7,b	;volatile
  1886  001458  D01F               	goto	l2789
  1887  00145A                     l379:
  1888                           
  1889                           ; BSR set to: 15
  1890                           ;ECAN.c: 257: else if (B0CONbits.RXFUL)
  1891  00145A  010E               	movlb	14	; () banked
  1892  00145C  AF80               	btfss	128,7,b	;volatile
  1893  00145E  D01F               	goto	l2791
  1894                           
  1895                           ; BSR set to: 14
  1896                           ;ECAN.c: 258: {
  1897                           ;ECAN.c: 259: temp_EIDH = B0EIDH;
  1898  001460  CE83 F031          	movff	3715,_temp_EIDH	;volatile
  1899                           
  1900                           ;ECAN.c: 260: temp_EIDL = B0EIDL;
  1901  001464  CE84 F032          	movff	3716,_temp_EIDL	;volatile
  1902                           
  1903                           ;ECAN.c: 261: temp_SIDH = B0SIDH;
  1904  001468  CE81 F033          	movff	3713,_temp_SIDH	;volatile
  1905                           
  1906                           ;ECAN.c: 262: temp_SIDL = B0SIDL;
  1907  00146C  CE82 F034          	movff	3714,_temp_SIDL	;volatile
  1908                           
  1909                           ;ECAN.c: 263: temp_DLC = B0DLC;
  1910  001470  CE85 F030          	movff	3717,_temp_DLC	;volatile
  1911                           
  1912                           ;ECAN.c: 264: MAP_REC_BATTERYSTATUS = B0D0;
  1913  001474  CE86 F024          	movff	3718,_MAP_REC_BATTERYSTATUS	;volatile
  1914                           
  1915                           ;ECAN.c: 265: MAP_REC_VELOCITY = B0D1;
  1916  001478  CE87 F025          	movff	3719,_MAP_REC_VELOCITY	;volatile
  1917                           
  1918                           ;ECAN.c: 266: temp_D2 = B0D2;
  1919  00147C  CE88 F02A          	movff	3720,_temp_D2	;volatile
  1920                           
  1921                           ;ECAN.c: 267: temp_D3 = B0D3;
  1922  001480  CE89 F02B          	movff	3721,_temp_D3	;volatile
  1923                           
  1924                           ;ECAN.c: 268: temp_D4 = B0D4;
  1925  001484  CE8A F02C          	movff	3722,_temp_D4	;volatile
  1926                           
  1927                           ;ECAN.c: 269: temp_D5 = B0D5;
  1928  001488  CE8B F02D          	movff	3723,_temp_D5	;volatile
  1929                           
  1930                           ;ECAN.c: 270: temp_D6 = B0D6;
  1931  00148C  CE8C F02E          	movff	3724,_temp_D6	;volatile
  1932                           
  1933                           ;ECAN.c: 271: temp_D7 = B0D7;
  1934  001490  CE8D F02F          	movff	3725,_temp_D7	;volatile
  1935                           
  1936                           ;ECAN.c: 273: B0CONbits.RXFUL = 0;
  1937  001494  010E               	movlb	14	; () banked
  1938  001496  9F80               	bcf	128,7,b	;volatile
  1939  001498                     l2789:
  1940                           
  1941                           ; BSR set to: 14
  1942                           ;ECAN.c: 274: RXMsgFlag = 0x01;
  1943  001498  0E01               	movlw	1
  1944  00149A  0100               	movlb	0	; () banked
  1945  00149C  6F6E               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1946  00149E                     l2791:
  1947                           
  1948                           ;ECAN.c: 275: }
  1949                           ;ECAN.c: 277: if (RXMsgFlag == 0x01)
  1950  00149E  0100               	movlb	0	; () banked
  1951  0014A0  056E               	decf	ECAN_Receive@RXMsgFlag& (0+255),w,b
  1952  0014A2  A4D8               	btfss	status,2,c
  1953  0014A4  D006               	goto	l2803
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;ECAN.c: 278: {
  1957                           ;ECAN.c: 279: RXMsgFlag = 0x00;
  1958  0014A6  0E00               	movlw	0
  1959  0014A8  0100               	movlb	0	; () banked
  1960  0014AA  6F6E               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;ECAN.c: 280: PIR5bits.RXB1IF = 0;
  1964  0014AC  9277               	bcf	3959,1,c	;volatile
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;ECAN.c: 281: return 1;
  1968  0014AE  0E01               	movlw	1
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;ECAN.c: 282: }
  1972                           
  1973                           ; BSR set to: 0
  1974  0014B0  0012               	return	
  1975  0014B2                     l2803:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;ECAN.c: 283: else
  1979                           ;ECAN.c: 284: {
  1980                           ;ECAN.c: 285: return 0;
  1981  0014B2  0E00               	movlw	0
  1982                           
  1983                           ; BSR set to: 0
  1984  0014B4  0012               	return	
  1985  0014B6                     __end_of_ECAN_Receive:
  1986                           	opt stack 0
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           intcon	equ	0xFF2
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           postdec1	equ	0xFE5
  1997                           fsr1h	equ	0xFE2
  1998                           fsr1l	equ	0xFE1
  1999                           indf2	equ	0xFDF
  2000                           fsr2h	equ	0xFDA
  2001                           fsr2l	equ	0xFD9
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function _Delay *****************
  2005 ;; Defined at:
  2006 ;;		line 7 in file "Other.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  count           2    0[BANK0 ] unsigned int 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;		None               void
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2024 ;;Total ram usage:        2 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    3
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;;		_checkRFID
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text8
  2036  001810                     __ptext8:
  2037                           	opt stack 0
  2038  001810                     _Delay:
  2039                           	opt stack 27
  2040  001810                     l2773:
  2041  001810  0100               	movlb	0	; () banked
  2042  001812  076E               	decf	Delay@count& (0+255),f,b
  2043  001814  A0D8               	btfss	status,0,c
  2044  001816  076F               	decf	(Delay@count+1)& (0+255),f,b
  2045  001818  0100               	movlb	0	; () banked
  2046  00181A  296E               	incf	Delay@count& (0+255),w,b
  2047  00181C  E1F9               	bnz	l2773
  2048  00181E  0100               	movlb	0	; () banked
  2049  001820  296F               	incf	(Delay@count+1)& (0+255),w,b
  2050  001822  B4D8               	btfsc	status,2,c
  2051  001824  0012               	return	
  2052  001826  D7F4               	goto	l2773
  2053  001828                     __end_of_Delay:
  2054                           	opt stack 0
  2055                           tblptru	equ	0xFF8
  2056                           tblptrh	equ	0xFF7
  2057                           tblptrl	equ	0xFF6
  2058                           tablat	equ	0xFF5
  2059                           prodh	equ	0xFF4
  2060                           prodl	equ	0xFF3
  2061                           intcon	equ	0xFF2
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           postdec1	equ	0xFE5
  2065                           fsr1h	equ	0xFE2
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _CANSetup *****************
  2073 ;; Defined at:
  2074 ;;		line 104 in file "ECAN.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;		None               void
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    3
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text9
  2103  0011BE                     __ptext9:
  2104                           	opt stack 0
  2105  0011BE                     _CANSetup:
  2106                           	opt stack 27
  2107                           
  2108                           ;ECAN.c: 107: CANCON = 0x80;
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;incstack = 0
  2112  0011BE  0E80               	movlw	128
  2113  0011C0  6E6F               	movwf	3951,c	;volatile
  2114  0011C2                     l2703:
  2115  0011C2  386E               	swapf	3950,w,c	;volatile
  2116  0011C4  32E8               	rrcf	wreg,f,c
  2117  0011C6  0B07               	andlw	7
  2118  0011C8  0A04               	xorlw	4
  2119  0011CA  A4D8               	btfss	status,2,c
  2120  0011CC  D7FA               	goto	l2703
  2121                           
  2122                           ;ECAN.c: 111: ECANCON = 0x40;
  2123  0011CE  0E40               	movlw	64
  2124  0011D0  6E72               	movwf	3954,c	;volatile
  2125                           
  2126                           ;ECAN.c: 115: BRGCON1 = 0x81;
  2127  0011D2  0E81               	movlw	129
  2128  0011D4  010E               	movlb	14	; () banked
  2129  0011D6  6F43               	movwf	67,b	;volatile
  2130                           
  2131                           ;ECAN.c: 116: BRGCON2 = 0xB8;
  2132  0011D8  0EB8               	movlw	184
  2133  0011DA  010E               	movlb	14	; () banked
  2134  0011DC  6F44               	movwf	68,b	;volatile
  2135                           
  2136                           ;ECAN.c: 117: BRGCON3 = 0x05;
  2137  0011DE  0E05               	movlw	5
  2138  0011E0  010E               	movlb	14	; () banked
  2139  0011E2  6F45               	movwf	69,b	;volatile
  2140                           
  2141                           ;ECAN.c: 122: BSEL0 = 0xF8;
  2142  0011E4  0EF8               	movlw	248
  2143  0011E6  010E               	movlb	14	; () banked
  2144  0011E8  6F7D               	movwf	125,b	;volatile
  2145                           
  2146                           ;ECAN.c: 126: RXM0EIDH = 0x00;
  2147  0011EA  0E00               	movlw	0
  2148  0011EC  010E               	movlb	14	; () banked
  2149  0011EE  6FFA               	movwf	250,b	;volatile
  2150                           
  2151                           ;ECAN.c: 127: RXM0EIDL = 0x00;
  2152  0011F0  0E00               	movlw	0
  2153  0011F2  010E               	movlb	14	; () banked
  2154  0011F4  6FFB               	movwf	251,b	;volatile
  2155                           
  2156                           ; BSR set to: 14
  2157                           ;ECAN.c: 128: RXM0SIDH = 0xFF;
  2158  0011F6  010E               	movlb	14	; () banked
  2159  0011F8  69F8               	setf	248,b	;volatile
  2160                           
  2161                           ;ECAN.c: 129: RXM0SIDL = 0xE0;
  2162  0011FA  0EE0               	movlw	224
  2163  0011FC  010E               	movlb	14	; () banked
  2164  0011FE  6FF9               	movwf	249,b	;volatile
  2165                           
  2166                           ;ECAN.c: 132: RXM1EIDH = 0x00;
  2167  001200  0E00               	movlw	0
  2168  001202  010E               	movlb	14	; () banked
  2169  001204  6FFE               	movwf	254,b	;volatile
  2170                           
  2171                           ;ECAN.c: 133: RXM1EIDL = 0x00;
  2172  001206  0E00               	movlw	0
  2173  001208  010E               	movlb	14	; () banked
  2174  00120A  6FFF               	movwf	255,b	;volatile
  2175                           
  2176                           ; BSR set to: 14
  2177                           ;ECAN.c: 134: RXM1SIDH = 0xFF;
  2178  00120C  010E               	movlb	14	; () banked
  2179  00120E  69FC               	setf	252,b	;volatile
  2180                           
  2181                           ;ECAN.c: 135: RXM1SIDL = 0xE0;
  2182  001210  0EE0               	movlw	224
  2183  001212  010E               	movlb	14	; () banked
  2184  001214  6FFD               	movwf	253,b	;volatile
  2185                           
  2186                           ;ECAN.c: 139: RXFCON0 = 0x07;
  2187  001216  0E07               	movlw	7
  2188  001218  010E               	movlb	14	; () banked
  2189  00121A  6F46               	movwf	70,b	;volatile
  2190                           
  2191                           ;ECAN.c: 140: RXFCON1 = 0x00;
  2192  00121C  0E00               	movlw	0
  2193  00121E  010E               	movlb	14	; () banked
  2194  001220  6F47               	movwf	71,b	;volatile
  2195                           
  2196                           ;ECAN.c: 143: MSEL0 = 0xC0;
  2197  001222  0EC0               	movlw	192
  2198  001224  010E               	movlb	14	; () banked
  2199  001226  6F79               	movwf	121,b	;volatile
  2200                           
  2201                           ; BSR set to: 14
  2202                           ;ECAN.c: 144: MSEL1 = 0xFF;
  2203  001228  010E               	movlb	14	; () banked
  2204  00122A  697A               	setf	122,b	;volatile
  2205                           
  2206                           ; BSR set to: 14
  2207                           ;ECAN.c: 145: MSEL2 = 0xFF;
  2208  00122C  010E               	movlb	14	; () banked
  2209  00122E  697B               	setf	123,b	;volatile
  2210                           
  2211                           ; BSR set to: 14
  2212                           ;ECAN.c: 146: MSEL3 = 0xFF;
  2213  001230  010E               	movlb	14	; () banked
  2214  001232  697C               	setf	124,b	;volatile
  2215                           
  2216                           ;ECAN.c: 150: RXFBCON0 = 0x10;
  2217  001234  0E10               	movlw	16
  2218  001236  010E               	movlb	14	; () banked
  2219  001238  6F71               	movwf	113,b	;volatile
  2220                           
  2221                           ;ECAN.c: 151: RXFBCON1 = 0xF2;
  2222  00123A  0EF2               	movlw	242
  2223  00123C  010E               	movlb	14	; () banked
  2224  00123E  6F72               	movwf	114,b	;volatile
  2225                           
  2226                           ; BSR set to: 14
  2227                           ;ECAN.c: 153: RXFBCON2 = 0xFF;
  2228  001240  010E               	movlb	14	; () banked
  2229  001242  6973               	setf	115,b	;volatile
  2230                           
  2231                           ; BSR set to: 14
  2232                           ;ECAN.c: 154: RXFBCON3 = 0xFF;
  2233  001244  010E               	movlb	14	; () banked
  2234  001246  6974               	setf	116,b	;volatile
  2235                           
  2236                           ; BSR set to: 14
  2237                           ;ECAN.c: 155: RXFBCON4 = 0xFF;
  2238  001248  010E               	movlb	14	; () banked
  2239  00124A  6975               	setf	117,b	;volatile
  2240                           
  2241                           ; BSR set to: 14
  2242                           ;ECAN.c: 156: RXFBCON5 = 0xFF;
  2243  00124C  010E               	movlb	14	; () banked
  2244  00124E  6976               	setf	118,b	;volatile
  2245                           
  2246                           ; BSR set to: 14
  2247                           ;ECAN.c: 157: RXFBCON6 = 0xFF;
  2248  001250  010E               	movlb	14	; () banked
  2249  001252  6977               	setf	119,b	;volatile
  2250                           
  2251                           ; BSR set to: 14
  2252                           ;ECAN.c: 158: RXFBCON7 = 0xFF;
  2253  001254  010E               	movlb	14	; () banked
  2254  001256  6978               	setf	120,b	;volatile
  2255                           
  2256                           ;ECAN.c: 164: RXF0EIDH = 0x00;
  2257  001258  0E00               	movlw	0
  2258  00125A  010E               	movlb	14	; () banked
  2259  00125C  6FE2               	movwf	226,b	;volatile
  2260                           
  2261                           ;ECAN.c: 165: RXF0EIDL = 0x00;
  2262  00125E  0E00               	movlw	0
  2263  001260  010E               	movlb	14	; () banked
  2264  001262  6FE3               	movwf	227,b	;volatile
  2265                           
  2266                           ;ECAN.c: 166: RXF0SIDH = 0x32;
  2267  001264  0E32               	movlw	50
  2268  001266  010E               	movlb	14	; () banked
  2269  001268  6FE0               	movwf	224,b	;volatile
  2270                           
  2271                           ;ECAN.c: 167: RXF0SIDL = 0xC0;
  2272  00126A  0EC0               	movlw	192
  2273  00126C  010E               	movlb	14	; () banked
  2274  00126E  6FE1               	movwf	225,b	;volatile
  2275                           
  2276                           ;ECAN.c: 168: RXF1EIDH = 0x00;
  2277  001270  0E00               	movlw	0
  2278  001272  010E               	movlb	14	; () banked
  2279  001274  6FE6               	movwf	230,b	;volatile
  2280                           
  2281                           ;ECAN.c: 169: RXF1EIDL = 0x00;
  2282  001276  0E00               	movlw	0
  2283  001278  010E               	movlb	14	; () banked
  2284  00127A  6FE7               	movwf	231,b	;volatile
  2285                           
  2286                           ;ECAN.c: 170: RXF1SIDH = 0x33;
  2287  00127C  0E33               	movlw	51
  2288  00127E  010E               	movlb	14	; () banked
  2289  001280  6FE4               	movwf	228,b	;volatile
  2290                           
  2291                           ;ECAN.c: 171: RXF1SIDL = 0x40;
  2292  001282  0E40               	movlw	64
  2293  001284  010E               	movlb	14	; () banked
  2294  001286  6FE5               	movwf	229,b	;volatile
  2295                           
  2296                           ;ECAN.c: 172: RXF2EIDH = 0x00;
  2297  001288  0E00               	movlw	0
  2298  00128A  010E               	movlb	14	; () banked
  2299  00128C  6FEA               	movwf	234,b	;volatile
  2300                           
  2301                           ;ECAN.c: 173: RXF2EIDL = 0x00;
  2302  00128E  0E00               	movlw	0
  2303  001290  010E               	movlb	14	; () banked
  2304  001292  6FEB               	movwf	235,b	;volatile
  2305                           
  2306                           ;ECAN.c: 174: RXF2SIDH = 0x33;
  2307  001294  0E33               	movlw	51
  2308  001296  010E               	movlb	14	; () banked
  2309  001298  6FE8               	movwf	232,b	;volatile
  2310                           
  2311                           ;ECAN.c: 175: RXF2SIDL = 0xC0;
  2312  00129A  0EC0               	movlw	192
  2313  00129C  010E               	movlb	14	; () banked
  2314  00129E  6FE9               	movwf	233,b	;volatile
  2315                           
  2316                           ;ECAN.c: 178: if (0 ==1)
  2317  0012A0  D00E               	goto	l2737
  2318  0012A2                     l2731:
  2319  0012A2  386E               	swapf	3950,w,c	;volatile
  2320  0012A4  32E8               	rrcf	wreg,f,c
  2321  0012A6  0B07               	andlw	7
  2322  0012A8  0A40               	xorlw	64
  2323  0012AA  A4D8               	btfss	status,2,c
  2324  0012AC  D017               	goto	l2745
  2325  0012AE  D7F9               	goto	l2731
  2326  0012B0                     l2735:
  2327  0012B0  386E               	swapf	3950,w,c	;volatile
  2328  0012B2  32E8               	rrcf	wreg,f,c
  2329  0012B4  0B07               	andlw	7
  2330  0012B6  0A60               	xorlw	96
  2331  0012B8  A4D8               	btfss	status,2,c
  2332  0012BA  D010               	goto	l2745
  2333  0012BC  D7F9               	goto	l2735
  2334  0012BE                     l2737:
  2335                           
  2336                           ;ECAN.c: 189: CANCON = 0x00;
  2337  0012BE  0E00               	movlw	0
  2338  0012C0  6E6F               	movwf	3951,c	;volatile
  2339  0012C2                     l2739:
  2340  0012C2  386E               	swapf	3950,w,c	;volatile
  2341  0012C4  32E8               	rrcf	wreg,f,c
  2342  0012C6  0B07               	andlw	7
  2343  0012C8  0900               	iorlw	0
  2344  0012CA  A4D8               	btfss	status,2,c
  2345  0012CC  D007               	goto	l2745
  2346  0012CE  D7F9               	goto	l2739
  2347  0012D0                     l2743:
  2348  0012D0  386E               	swapf	3950,w,c	;volatile
  2349  0012D2  32E8               	rrcf	wreg,f,c
  2350  0012D4  0B07               	andlw	7
  2351  0012D6  0A40               	xorlw	64
  2352  0012D8  B4D8               	btfsc	status,2,c
  2353  0012DA  D7FA               	goto	l2743
  2354  0012DC                     l2745:
  2355                           
  2356                           ;ECAN.c: 197: }
  2357                           ;ECAN.c: 200: RXB0CON = 0x00;
  2358  0012DC  0E00               	movlw	0
  2359  0012DE  6E60               	movwf	3936,c	;volatile
  2360                           
  2361                           ;ECAN.c: 201: RXB1CON = 0x00;
  2362  0012E0  0E00               	movlw	0
  2363  0012E2  010F               	movlb	15	; () banked
  2364  0012E4  6F30               	movwf	48,b	;volatile
  2365                           
  2366                           ; BSR set to: 15
  2367  0012E6  0012               	return		;funcret
  2368  0012E8                     __end_of_CANSetup:
  2369                           	opt stack 0
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           prodh	equ	0xFF4
  2375                           prodl	equ	0xFF3
  2376                           intcon	equ	0xFF2
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           postdec1	equ	0xFE5
  2380                           fsr1h	equ	0xFE2
  2381                           fsr1l	equ	0xFE1
  2382                           indf2	equ	0xFDF
  2383                           fsr2h	equ	0xFDA
  2384                           fsr2l	equ	0xFD9
  2385                           status	equ	0xFD8
  2386                           
  2387 ;; *************** function _ISR *****************
  2388 ;; Defined at:
  2389 ;;		line 88 in file "main.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;		None               void
  2396 ;; Registers used:
  2397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;Total ram usage:       14 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    2
  2410 ;; This function calls:
  2411 ;;		_collectManch
  2412 ;; This function is called by:
  2413 ;;		Interrupt level 2
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	intcode
  2418  000008                     __pintcode:
  2419                           	opt stack 0
  2420  000008                     _ISR:
  2421                           	opt stack 26
  2422                           
  2423                           ; BSR set to: 15
  2424                           ;incstack = 0
  2425  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2426  00000A  CFFA F046          	movff	pclath,??_ISR
  2427  00000E  CFFB F047          	movff	pclatu,??_ISR+1
  2428  000012  CFE9 F048          	movff	fsr0l,??_ISR+2
  2429  000016  CFEA F049          	movff	fsr0h,??_ISR+3
  2430  00001A  CFE1 F04A          	movff	fsr1l,??_ISR+4
  2431  00001E  CFE2 F04B          	movff	fsr1h,??_ISR+5
  2432  000022  CFD9 F04C          	movff	fsr2l,??_ISR+6
  2433  000026  CFDA F04D          	movff	fsr2h,??_ISR+7
  2434  00002A  CFF3 F04E          	movff	prodl,??_ISR+8
  2435  00002E  CFF4 F04F          	movff	prodh,??_ISR+9
  2436  000032  CFF6 F050          	movff	tblptrl,??_ISR+10
  2437  000036  CFF7 F051          	movff	tblptrh,??_ISR+11
  2438  00003A  CFF8 F052          	movff	tblptru,??_ISR+12
  2439  00003E  CFF5 F053          	movff	tablat,??_ISR+13
  2440                           
  2441                           ;main.c: 102: Interrupt_counter++;
  2442  000042  0100               	movlb	0	; () banked
  2443  000044  4B62               	infsnz	_Interrupt_counter& (0+255),f,b
  2444  000046  2B63               	incf	(_Interrupt_counter+1)& (0+255),f,b
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;main.c: 104: if(Interrupt_counter == 10){
  2448  000048  0E0A               	movlw	10
  2449  00004A  0100               	movlb	0	; () banked
  2450  00004C  1962               	xorwf	_Interrupt_counter& (0+255),w,b
  2451  00004E  0100               	movlb	0	; () banked
  2452  000050  1163               	iorwf	(_Interrupt_counter+1)& (0+255),w,b
  2453  000052  A4D8               	btfss	status,2,c
  2454  000054  D007               	goto	i2l90
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;main.c: 107: collectManch();
  2458  000056  EC42  F00B         	call	_collectManch	;wreg free
  2459                           
  2460                           ;main.c: 108: Interrupt_counter = 0;
  2461  00005A  0E00               	movlw	0
  2462  00005C  0100               	movlb	0	; () banked
  2463  00005E  6F63               	movwf	(_Interrupt_counter+1)& (0+255),b
  2464  000060  0E00               	movlw	0
  2465  000062  6F62               	movwf	_Interrupt_counter& (0+255),b
  2466  000064                     i2l90:
  2467                           
  2468                           ; BSR set to: 0
  2469  000064  C053  FFF5         	movff	??_ISR+13,tablat
  2470  000068  C052  FFF8         	movff	??_ISR+12,tblptru
  2471  00006C  C051  FFF7         	movff	??_ISR+11,tblptrh
  2472  000070  C050  FFF6         	movff	??_ISR+10,tblptrl
  2473  000074  C04F  FFF4         	movff	??_ISR+9,prodh
  2474  000078  C04E  FFF3         	movff	??_ISR+8,prodl
  2475  00007C  C04D  FFDA         	movff	??_ISR+7,fsr2h
  2476  000080  C04C  FFD9         	movff	??_ISR+6,fsr2l
  2477  000084  C04B  FFE2         	movff	??_ISR+5,fsr1h
  2478  000088  C04A  FFE1         	movff	??_ISR+4,fsr1l
  2479  00008C  C049  FFEA         	movff	??_ISR+3,fsr0h
  2480  000090  C048  FFE9         	movff	??_ISR+2,fsr0l
  2481  000094  C047  FFFB         	movff	??_ISR+1,pclatu
  2482  000098  C046  FFFA         	movff	??_ISR,pclath
  2483  00009C  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2484  00009E  0011               	retfie		f
  2485  0000A0                     __end_of_ISR:
  2486                           	opt stack 0
  2487                           pclatu	equ	0xFFB
  2488                           pclath	equ	0xFFA
  2489                           tblptru	equ	0xFF8
  2490                           tblptrh	equ	0xFF7
  2491                           tblptrl	equ	0xFF6
  2492                           tablat	equ	0xFF5
  2493                           prodh	equ	0xFF4
  2494                           prodl	equ	0xFF3
  2495                           intcon	equ	0xFF2
  2496                           postinc0	equ	0xFEE
  2497                           fsr0h	equ	0xFEA
  2498                           fsr0l	equ	0xFE9
  2499                           wreg	equ	0xFE8
  2500                           postdec1	equ	0xFE5
  2501                           fsr1h	equ	0xFE2
  2502                           fsr1l	equ	0xFE1
  2503                           indf2	equ	0xFDF
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8
  2507                           
  2508 ;; *************** function _collectManch *****************
  2509 ;; Defined at:
  2510 ;;		line 105 in file "RFID.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    1
  2531 ;; This function calls:
  2532 ;;		_decodeManchester
  2533 ;;		_parseMultiBitToSingleBit
  2534 ;; This function is called by:
  2535 ;;		_ISR
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text11
  2540  001684                     __ptext11:
  2541                           	opt stack 0
  2542  001684                     _collectManch:
  2543                           	opt stack 26
  2544                           
  2545                           ;RFID.c: 106: val = PORTBbits.RB0;
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;incstack = 0
  2549  001684  A081               	btfss	3969,0,c	;volatile
  2550  001686  D003               	goto	i2u127_40
  2551  001688  6A45               	clrf	??_collectManch& (0+255),c
  2552  00168A  2A45               	incf	??_collectManch& (0+255),f,c
  2553  00168C  D001               	goto	i2u127_48
  2554  00168E                     i2u127_40:
  2555  00168E  6A45               	clrf	??_collectManch& (0+255),c
  2556  001690                     i2u127_48:
  2557  001690  5045               	movf	??_collectManch,w,c
  2558  001692  6E21               	movwf	_val,c
  2559  001694  6A22               	clrf	_val+1,c
  2560                           
  2561                           ;RFID.c: 108: bitArray[point] = val;
  2562  001696  90D8               	bcf	status,0,c
  2563  001698  341F               	rlcf	_point,w,c
  2564  00169A  6ED9               	movwf	fsr2l,c
  2565  00169C  3420               	rlcf	_point+1,w,c
  2566  00169E  6EDA               	movwf	fsr2h,c
  2567  0016A0  0EB4               	movlw	low _bitArray
  2568  0016A2  26D9               	addwf	fsr2l,f,c
  2569  0016A4  0E05               	movlw	high _bitArray
  2570  0016A6  22DA               	addwfc	fsr2h,f,c
  2571  0016A8  C021  FFDE         	movff	_val,postinc2
  2572  0016AC  C022  FFDD         	movff	_val+1,postdec2
  2573                           
  2574                           ;RFID.c: 109: point++;
  2575  0016B0  4A1F               	infsnz	_point,f,c
  2576  0016B2  2A20               	incf	_point+1,f,c
  2577                           
  2578                           ;RFID.c: 111: if(point >= 500){
  2579  0016B4  BE20               	btfsc	_point+1,7,c
  2580  0016B6  0012               	return	
  2581  0016B8  0EF4               	movlw	244
  2582  0016BA  5C1F               	subwf	_point,w,c
  2583  0016BC  0E01               	movlw	1
  2584  0016BE  5820               	subwfb	_point+1,w,c
  2585  0016C0  A0D8               	btfss	status,0,c
  2586  0016C2  0012               	return	
  2587                           
  2588                           ;RFID.c: 112: INTCONbits.TMR0IE = 0;
  2589  0016C4  9AF2               	bcf	intcon,5,c	;volatile
  2590                           
  2591                           ;RFID.c: 113: parseMultiBitToSingleBit(bitArray, 0, resultArray);
  2592  0016C6  0EB4               	movlw	low _bitArray
  2593  0016C8  6E35               	movwf	parseMultiBitToSingleBit@buffer,c
  2594  0016CA  0E05               	movlw	high _bitArray
  2595  0016CC  6E36               	movwf	parseMultiBitToSingleBit@buffer+1,c
  2596  0016CE  0E00               	movlw	0
  2597  0016D0  6E38               	movwf	parseMultiBitToSingleBit@startOffset+1,c
  2598  0016D2  0E00               	movlw	0
  2599  0016D4  6E37               	movwf	parseMultiBitToSingleBit@startOffset,c
  2600  0016D6  0E2C               	movlw	low _resultArray
  2601  0016D8  6E39               	movwf	parseMultiBitToSingleBit@outputBuffer,c
  2602  0016DA  0E0B               	movlw	high _resultArray
  2603  0016DC  6E3A               	movwf	parseMultiBitToSingleBit@outputBuffer+1,c
  2604  0016DE  EC3F  F008         	call	_parseMultiBitToSingleBit	;wreg free
  2605                           
  2606                           ;RFID.c: 114: decodeManchester(finalArray, resultArray);
  2607  0016E2  0E9C               	movlw	low _finalArray
  2608  0016E4  6E35               	movwf	decodeManchester@finalArray,c
  2609  0016E6  0E09               	movlw	high _finalArray
  2610  0016E8  6E36               	movwf	decodeManchester@finalArray+1,c
  2611  0016EA  0E2C               	movlw	low _resultArray
  2612  0016EC  6E37               	movwf	decodeManchester@resultArray,c
  2613  0016EE  0E0B               	movlw	high _resultArray
  2614  0016F0  6E38               	movwf	decodeManchester@resultArray+1,c
  2615  0016F2  EC74  F009         	call	_decodeManchester	;wreg free
  2616  0016F6  0012               	return	
  2617  0016F8                     __end_of_collectManch:
  2618                           	opt stack 0
  2619                           pclatu	equ	0xFFB
  2620                           pclath	equ	0xFFA
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           prodh	equ	0xFF4
  2626                           prodl	equ	0xFF3
  2627                           intcon	equ	0xFF2
  2628                           postinc0	equ	0xFEE
  2629                           fsr0h	equ	0xFEA
  2630                           fsr0l	equ	0xFE9
  2631                           wreg	equ	0xFE8
  2632                           postdec1	equ	0xFE5
  2633                           fsr1h	equ	0xFE2
  2634                           fsr1l	equ	0xFE1
  2635                           indf2	equ	0xFDF
  2636                           postinc2	equ	0xFDE
  2637                           postdec2	equ	0xFDD
  2638                           fsr2h	equ	0xFDA
  2639                           fsr2l	equ	0xFD9
  2640                           status	equ	0xFD8
  2641                           
  2642 ;; *************** function _parseMultiBitToSingleBit *****************
  2643 ;; Defined at:
  2644 ;;		line 118 in file "RFID.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  buffer          2    0[COMRAM] PTR unsigned char 
  2647 ;;		 -> bitArray(1000), 
  2648 ;;  startOffset     2    2[COMRAM] int 
  2649 ;;  outputBuffer    2    4[COMRAM] PTR int 
  2650 ;;		 -> resultArray(400), 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  inARow          2   14[COMRAM] int 
  2653 ;;  lastVal         2   12[COMRAM] int 
  2654 ;;  resultArray_    2   10[COMRAM] int 
  2655 ;;  i               2    8[COMRAM] int 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;		None               void
  2658 ;; Registers used:
  2659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2665 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;Total ram usage:       16 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_collectManch
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text12
  2679  00107E                     __ptext12:
  2680                           	opt stack 0
  2681  00107E                     _parseMultiBitToSingleBit:
  2682                           	opt stack 26
  2683                           
  2684                           ;RFID.c: 119: int i = startOffset;
  2685                           
  2686                           ;incstack = 0
  2687  00107E  C037  F03D         	movff	parseMultiBitToSingleBit@startOffset,parseMultiBitToSingleBit@i
  2688  001082  C038  F03E         	movff	parseMultiBitToSingleBit@startOffset+1,parseMultiBitToSingleBit@i+1
  2689                           
  2690                           ;RFID.c: 120: int lastVal = 0;
  2691  001086  0E00               	movlw	0
  2692  001088  6E42               	movwf	parseMultiBitToSingleBit@lastVal+1,c
  2693  00108A  0E00               	movlw	0
  2694  00108C  6E41               	movwf	parseMultiBitToSingleBit@lastVal,c
  2695                           
  2696                           ;RFID.c: 121: int inARow = 0;
  2697  00108E  0E00               	movlw	0
  2698  001090  6E44               	movwf	parseMultiBitToSingleBit@inARow+1,c
  2699  001092  0E00               	movlw	0
  2700  001094  6E43               	movwf	parseMultiBitToSingleBit@inARow,c
  2701                           
  2702                           ;RFID.c: 122: int resultArray_index = 0;
  2703  001096  0E00               	movlw	0
  2704  001098  6E40               	movwf	parseMultiBitToSingleBit@resultArray_index+1,c
  2705  00109A  0E00               	movlw	0
  2706  00109C  6E3F               	movwf	parseMultiBitToSingleBit@resultArray_index,c
  2707  00109E                     i2l2017:
  2708                           
  2709                           ;RFID.c: 123: for (;i < 500; i++) {
  2710  00109E  BE3E               	btfsc	parseMultiBitToSingleBit@i+1,7,c
  2711  0010A0  D006               	goto	i2l2021
  2712  0010A2  0EF4               	movlw	244
  2713  0010A4  5C3D               	subwf	parseMultiBitToSingleBit@i,w,c
  2714  0010A6  0E01               	movlw	1
  2715  0010A8  583E               	subwfb	parseMultiBitToSingleBit@i+1,w,c
  2716  0010AA  B0D8               	btfsc	status,0,c
  2717  0010AC  0012               	return	
  2718  0010AE                     i2l2021:
  2719                           
  2720                           ;RFID.c: 124: if (buffer [i] == lastVal) {
  2721  0010AE  503D               	movf	parseMultiBitToSingleBit@i,w,c
  2722  0010B0  2435               	addwf	parseMultiBitToSingleBit@buffer,w,c
  2723  0010B2  6ED9               	movwf	fsr2l,c
  2724  0010B4  503E               	movf	parseMultiBitToSingleBit@i+1,w,c
  2725  0010B6  2036               	addwfc	parseMultiBitToSingleBit@buffer+1,w,c
  2726  0010B8  6EDA               	movwf	fsr2h,c
  2727  0010BA  50DF               	movf	indf2,w,c
  2728  0010BC  6E3B               	movwf	??_parseMultiBitToSingleBit& (0+255),c
  2729  0010BE  6A3C               	clrf	(??_parseMultiBitToSingleBit+1)& (0+255),c
  2730  0010C0  5041               	movf	parseMultiBitToSingleBit@lastVal,w,c
  2731  0010C2  183B               	xorwf	??_parseMultiBitToSingleBit,w,c
  2732  0010C4  E107               	bnz	i2l2025
  2733  0010C6  5042               	movf	parseMultiBitToSingleBit@lastVal+1,w,c
  2734  0010C8  183C               	xorwf	??_parseMultiBitToSingleBit+1,w,c
  2735  0010CA  A4D8               	btfss	status,2,c
  2736  0010CC  D003               	goto	i2l2025
  2737                           
  2738                           ;RFID.c: 125: inARow++;
  2739  0010CE  4A43               	infsnz	parseMultiBitToSingleBit@inARow,f,c
  2740  0010D0  2A44               	incf	parseMultiBitToSingleBit@inARow+1,f,c
  2741                           
  2742                           ;RFID.c: 126: }
  2743  0010D2  D072               	goto	i2l2055
  2744  0010D4                     i2l2025:
  2745                           
  2746                           ;RFID.c: 127: else {
  2747                           ;RFID.c: 129: if (inARow >= 4 && inARow <= 8) {
  2748  0010D4  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2749  0010D6  D01E               	goto	i2l2033
  2750  0010D8  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2751  0010DA  E104               	bnz	i2u95_40
  2752  0010DC  0E04               	movlw	4
  2753  0010DE  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2754  0010E0  A0D8               	btfss	status,0,c
  2755  0010E2  D018               	goto	i2l2033
  2756  0010E4                     i2u95_40:
  2757  0010E4  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2758  0010E6  D006               	goto	i2l2029
  2759  0010E8  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2760  0010EA  E114               	bnz	i2l2033
  2761  0010EC  0E09               	movlw	9
  2762  0010EE  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2763  0010F0  B0D8               	btfsc	status,0,c
  2764  0010F2  D010               	goto	i2l2033
  2765  0010F4                     i2l2029:
  2766                           
  2767                           ;RFID.c: 132: outputBuffer[resultArray_index] = lastVal;
  2768  0010F4  90D8               	bcf	status,0,c
  2769  0010F6  343F               	rlcf	parseMultiBitToSingleBit@resultArray_index,w,c
  2770  0010F8  6ED9               	movwf	fsr2l,c
  2771  0010FA  3440               	rlcf	parseMultiBitToSingleBit@resultArray_index+1,w,c
  2772  0010FC  6EDA               	movwf	fsr2h,c
  2773  0010FE  5039               	movf	parseMultiBitToSingleBit@outputBuffer,w,c
  2774  001100  26D9               	addwf	fsr2l,f,c
  2775  001102  503A               	movf	parseMultiBitToSingleBit@outputBuffer+1,w,c
  2776  001104  22DA               	addwfc	fsr2h,f,c
  2777  001106  C041  FFDE         	movff	parseMultiBitToSingleBit@lastVal,postinc2
  2778  00110A  C042  FFDD         	movff	parseMultiBitToSingleBit@lastVal+1,postdec2
  2779                           
  2780                           ;RFID.c: 133: resultArray_index += 1;
  2781  00110E  4A3F               	infsnz	parseMultiBitToSingleBit@resultArray_index,f,c
  2782  001110  2A40               	incf	parseMultiBitToSingleBit@resultArray_index+1,f,c
  2783                           
  2784                           ;RFID.c: 134: }
  2785  001112  D043               	goto	i2l2049
  2786  001114                     i2l2033:
  2787                           
  2788                           ;RFID.c: 135: else if (inARow >= 9 && inARow <= 14) {
  2789  001114  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2790  001116  D035               	goto	i2l2043
  2791  001118  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2792  00111A  E104               	bnz	i2u97_40
  2793  00111C  0E09               	movlw	9
  2794  00111E  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2795  001120  A0D8               	btfss	status,0,c
  2796  001122  D02F               	goto	i2l2043
  2797  001124                     i2u97_40:
  2798  001124  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2799  001126  D006               	goto	i2l2037
  2800  001128  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2801  00112A  E12B               	bnz	i2l2043
  2802  00112C  0E0F               	movlw	15
  2803  00112E  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2804  001130  B0D8               	btfsc	status,0,c
  2805  001132  D027               	goto	i2l2043
  2806  001134                     i2l2037:
  2807                           
  2808                           ;RFID.c: 138: outputBuffer[resultArray_index] = lastVal;
  2809  001134  90D8               	bcf	status,0,c
  2810  001136  343F               	rlcf	parseMultiBitToSingleBit@resultArray_index,w,c
  2811  001138  6ED9               	movwf	fsr2l,c
  2812  00113A  3440               	rlcf	parseMultiBitToSingleBit@resultArray_index+1,w,c
  2813  00113C  6EDA               	movwf	fsr2h,c
  2814  00113E  5039               	movf	parseMultiBitToSingleBit@outputBuffer,w,c
  2815  001140  26D9               	addwf	fsr2l,f,c
  2816  001142  503A               	movf	parseMultiBitToSingleBit@outputBuffer+1,w,c
  2817  001144  22DA               	addwfc	fsr2h,f,c
  2818  001146  C041  FFDE         	movff	parseMultiBitToSingleBit@lastVal,postinc2
  2819  00114A  C042  FFDD         	movff	parseMultiBitToSingleBit@lastVal+1,postdec2
  2820                           
  2821                           ;RFID.c: 139: outputBuffer[resultArray_index+1] = lastVal;
  2822  00114E  C03F  F03B         	movff	parseMultiBitToSingleBit@resultArray_index,??_parseMultiBitToSingleBit
  2823  001152  C040  F03C         	movff	parseMultiBitToSingleBit@resultArray_index+1,??_parseMultiBitToSingleBit+1
  2824  001156  90D8               	bcf	status,0,c
  2825  001158  363B               	rlcf	??_parseMultiBitToSingleBit,f,c
  2826  00115A  363C               	rlcf	??_parseMultiBitToSingleBit+1,f,c
  2827  00115C  0E02               	movlw	2
  2828  00115E  263B               	addwf	??_parseMultiBitToSingleBit,f,c
  2829  001160  0E00               	movlw	0
  2830  001162  223C               	addwfc	??_parseMultiBitToSingleBit+1,f,c
  2831  001164  503B               	movf	??_parseMultiBitToSingleBit,w,c
  2832  001166  2439               	addwf	parseMultiBitToSingleBit@outputBuffer,w,c
  2833  001168  6ED9               	movwf	fsr2l,c
  2834  00116A  503C               	movf	??_parseMultiBitToSingleBit+1,w,c
  2835  00116C  203A               	addwfc	parseMultiBitToSingleBit@outputBuffer+1,w,c
  2836  00116E  6EDA               	movwf	fsr2h,c
  2837  001170  C041  FFDE         	movff	parseMultiBitToSingleBit@lastVal,postinc2
  2838  001174  C042  FFDD         	movff	parseMultiBitToSingleBit@lastVal+1,postdec2
  2839                           
  2840                           ;RFID.c: 140: resultArray_index += 2;
  2841  001178  0E02               	movlw	2
  2842  00117A  263F               	addwf	parseMultiBitToSingleBit@resultArray_index,f,c
  2843  00117C  0E00               	movlw	0
  2844  00117E  2240               	addwfc	parseMultiBitToSingleBit@resultArray_index+1,f,c
  2845                           
  2846                           ;RFID.c: 141: }
  2847  001180  D00C               	goto	i2l2049
  2848  001182                     i2l2043:
  2849                           
  2850                           ;RFID.c: 142: else if (inARow >= 15 && lastVal == 0) {
  2851  001182  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2852  001184  D00A               	goto	i2l2049
  2853  001186  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2854  001188  E104               	bnz	i2u99_40
  2855  00118A  0E0F               	movlw	15
  2856  00118C  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2857  00118E  A0D8               	btfss	status,0,c
  2858  001190  D004               	goto	i2l2049
  2859  001192                     i2u99_40:
  2860  001192  5041               	movf	parseMultiBitToSingleBit@lastVal,w,c
  2861  001194  1042               	iorwf	parseMultiBitToSingleBit@lastVal+1,w,c
  2862  001196  B4D8               	btfsc	status,2,c
  2863  001198  0012               	return	
  2864  00119A                     i2l2049:
  2865                           
  2866                           ;RFID.c: 146: }
  2867                           ;RFID.c: 148: inARow = 1;
  2868  00119A  0E00               	movlw	0
  2869  00119C  6E44               	movwf	parseMultiBitToSingleBit@inARow+1,c
  2870  00119E  0E01               	movlw	1
  2871  0011A0  6E43               	movwf	parseMultiBitToSingleBit@inARow,c
  2872                           
  2873                           ;RFID.c: 149: lastVal = buffer[i];
  2874  0011A2  503D               	movf	parseMultiBitToSingleBit@i,w,c
  2875  0011A4  2435               	addwf	parseMultiBitToSingleBit@buffer,w,c
  2876  0011A6  6ED9               	movwf	fsr2l,c
  2877  0011A8  503E               	movf	parseMultiBitToSingleBit@i+1,w,c
  2878  0011AA  2036               	addwfc	parseMultiBitToSingleBit@buffer+1,w,c
  2879  0011AC  6EDA               	movwf	fsr2h,c
  2880  0011AE  50DF               	movf	indf2,w,c
  2881  0011B0  6E3B               	movwf	??_parseMultiBitToSingleBit& (0+255),c
  2882  0011B2  503B               	movf	??_parseMultiBitToSingleBit,w,c
  2883  0011B4  6E41               	movwf	parseMultiBitToSingleBit@lastVal,c
  2884  0011B6  6A42               	clrf	parseMultiBitToSingleBit@lastVal+1,c
  2885  0011B8                     i2l2055:
  2886  0011B8  4A3D               	infsnz	parseMultiBitToSingleBit@i,f,c
  2887  0011BA  2A3E               	incf	parseMultiBitToSingleBit@i+1,f,c
  2888  0011BC  D770               	goto	i2l2017
  2889  0011BE                     __end_of_parseMultiBitToSingleBit:
  2890                           	opt stack 0
  2891                           pclatu	equ	0xFFB
  2892                           pclath	equ	0xFFA
  2893                           tblptru	equ	0xFF8
  2894                           tblptrh	equ	0xFF7
  2895                           tblptrl	equ	0xFF6
  2896                           tablat	equ	0xFF5
  2897                           prodh	equ	0xFF4
  2898                           prodl	equ	0xFF3
  2899                           intcon	equ	0xFF2
  2900                           postinc0	equ	0xFEE
  2901                           fsr0h	equ	0xFEA
  2902                           fsr0l	equ	0xFE9
  2903                           wreg	equ	0xFE8
  2904                           postdec1	equ	0xFE5
  2905                           fsr1h	equ	0xFE2
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           postinc2	equ	0xFDE
  2909                           postdec2	equ	0xFDD
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           status	equ	0xFD8
  2913                           
  2914 ;; *************** function _decodeManchester *****************
  2915 ;; Defined at:
  2916 ;;		line 164 in file "RFID.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  finalArray      2    0[COMRAM] PTR int 
  2919 ;;		 -> finalArray(400), 
  2920 ;;  resultArray     2    2[COMRAM] PTR int 
  2921 ;;		 -> resultArray(400), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  i               2   10[COMRAM] int 
  2924 ;;  finalArray_i    2    8[COMRAM] int 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;		None               void
  2927 ;; Registers used:
  2928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2938 ;;Total ram usage:       12 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_collectManch
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text13
  2948  0012E8                     __ptext13:
  2949                           	opt stack 0
  2950  0012E8                     _decodeManchester:
  2951                           	opt stack 26
  2952                           
  2953                           ;RFID.c: 167: int finalArray_index = 0;
  2954                           
  2955                           ;incstack = 0
  2956  0012E8  0E00               	movlw	0
  2957  0012EA  6E3E               	movwf	decodeManchester@finalArray_index+1,c
  2958  0012EC  0E00               	movlw	0
  2959  0012EE  6E3D               	movwf	decodeManchester@finalArray_index,c
  2960                           
  2961                           ;RFID.c: 168: for (int i = 0; i < 88; i+=2) {
  2962  0012F0  0E00               	movlw	0
  2963  0012F2  6E40               	movwf	decodeManchester@i+1,c
  2964  0012F4  0E00               	movlw	0
  2965  0012F6  6E3F               	movwf	decodeManchester@i,c
  2966  0012F8                     i2l2061:
  2967  0012F8  BE40               	btfsc	decodeManchester@i+1,7,c
  2968  0012FA  D006               	goto	i2l2065
  2969  0012FC  5040               	movf	decodeManchester@i+1,w,c
  2970  0012FE  E167               	bnz	i2l2083
  2971  001300  0E58               	movlw	88
  2972  001302  5C3F               	subwf	decodeManchester@i,w,c
  2973  001304  B0D8               	btfsc	status,0,c
  2974  001306  D063               	goto	i2l2083
  2975  001308                     i2l2065:
  2976                           
  2977                           ;RFID.c: 169: if (resultArray[i] == 1 && resultArray[i+1] == 0) {
  2978  001308  90D8               	bcf	status,0,c
  2979  00130A  343F               	rlcf	decodeManchester@i,w,c
  2980  00130C  6ED9               	movwf	fsr2l,c
  2981  00130E  3440               	rlcf	decodeManchester@i+1,w,c
  2982  001310  6EDA               	movwf	fsr2h,c
  2983  001312  5037               	movf	decodeManchester@resultArray,w,c
  2984  001314  26D9               	addwf	fsr2l,f,c
  2985  001316  5038               	movf	decodeManchester@resultArray+1,w,c
  2986  001318  22DA               	addwfc	fsr2h,f,c
  2987  00131A  04DE               	decf	postinc2,w,c
  2988  00131C  10DE               	iorwf	postinc2,w,c
  2989  00131E  A4D8               	btfss	status,2,c
  2990  001320  D020               	goto	i2l2071
  2991  001322  C03F  F039         	movff	decodeManchester@i,??_decodeManchester
  2992  001326  C040  F03A         	movff	decodeManchester@i+1,??_decodeManchester+1
  2993  00132A  90D8               	bcf	status,0,c
  2994  00132C  3639               	rlcf	??_decodeManchester,f,c
  2995  00132E  363A               	rlcf	??_decodeManchester+1,f,c
  2996  001330  0E02               	movlw	2
  2997  001332  2639               	addwf	??_decodeManchester,f,c
  2998  001334  0E00               	movlw	0
  2999  001336  223A               	addwfc	??_decodeManchester+1,f,c
  3000  001338  5039               	movf	??_decodeManchester,w,c
  3001  00133A  2437               	addwf	decodeManchester@resultArray,w,c
  3002  00133C  6ED9               	movwf	fsr2l,c
  3003  00133E  503A               	movf	??_decodeManchester+1,w,c
  3004  001340  2038               	addwfc	decodeManchester@resultArray+1,w,c
  3005  001342  6EDA               	movwf	fsr2h,c
  3006  001344  50DE               	movf	postinc2,w,c
  3007  001346  10DE               	iorwf	postinc2,w,c
  3008  001348  A4D8               	btfss	status,2,c
  3009  00134A  D00B               	goto	i2l2071
  3010                           
  3011                           ;RFID.c: 170: finalArray[finalArray_index] = 1;
  3012  00134C  90D8               	bcf	status,0,c
  3013  00134E  343D               	rlcf	decodeManchester@finalArray_index,w,c
  3014  001350  6ED9               	movwf	fsr2l,c
  3015  001352  343E               	rlcf	decodeManchester@finalArray_index+1,w,c
  3016  001354  6EDA               	movwf	fsr2h,c
  3017  001356  5035               	movf	decodeManchester@finalArray,w,c
  3018  001358  26D9               	addwf	fsr2l,f,c
  3019  00135A  5036               	movf	decodeManchester@finalArray+1,w,c
  3020  00135C  22DA               	addwfc	fsr2h,f,c
  3021  00135E  0E01               	movlw	1
  3022  001360  D02C               	goto	L1
  3023  001362                     i2l2071:
  3024                           
  3025                           ;RFID.c: 172: else if (resultArray[i] == 0 && resultArray[i+1] == 1) {
  3026  001362  90D8               	bcf	status,0,c
  3027  001364  343F               	rlcf	decodeManchester@i,w,c
  3028  001366  6ED9               	movwf	fsr2l,c
  3029  001368  3440               	rlcf	decodeManchester@i+1,w,c
  3030  00136A  6EDA               	movwf	fsr2h,c
  3031  00136C  5037               	movf	decodeManchester@resultArray,w,c
  3032  00136E  26D9               	addwf	fsr2l,f,c
  3033  001370  5038               	movf	decodeManchester@resultArray+1,w,c
  3034  001372  22DA               	addwfc	fsr2h,f,c
  3035  001374  50DE               	movf	postinc2,w,c
  3036  001376  10DE               	iorwf	postinc2,w,c
  3037  001378  A4D8               	btfss	status,2,c
  3038  00137A  0012               	return	
  3039  00137C  C03F  F039         	movff	decodeManchester@i,??_decodeManchester
  3040  001380  C040  F03A         	movff	decodeManchester@i+1,??_decodeManchester+1
  3041  001384  90D8               	bcf	status,0,c
  3042  001386  3639               	rlcf	??_decodeManchester,f,c
  3043  001388  363A               	rlcf	??_decodeManchester+1,f,c
  3044  00138A  0E02               	movlw	2
  3045  00138C  2639               	addwf	??_decodeManchester,f,c
  3046  00138E  0E00               	movlw	0
  3047  001390  223A               	addwfc	??_decodeManchester+1,f,c
  3048  001392  5039               	movf	??_decodeManchester,w,c
  3049  001394  2437               	addwf	decodeManchester@resultArray,w,c
  3050  001396  6ED9               	movwf	fsr2l,c
  3051  001398  503A               	movf	??_decodeManchester+1,w,c
  3052  00139A  2038               	addwfc	decodeManchester@resultArray+1,w,c
  3053  00139C  6EDA               	movwf	fsr2h,c
  3054  00139E  04DE               	decf	postinc2,w,c
  3055  0013A0  10DE               	iorwf	postinc2,w,c
  3056  0013A2  A4D8               	btfss	status,2,c
  3057  0013A4  0012               	return	
  3058                           
  3059                           ;RFID.c: 173: finalArray[finalArray_index] = 0;
  3060  0013A6  90D8               	bcf	status,0,c
  3061  0013A8  343D               	rlcf	decodeManchester@finalArray_index,w,c
  3062  0013AA  6ED9               	movwf	fsr2l,c
  3063  0013AC  343E               	rlcf	decodeManchester@finalArray_index+1,w,c
  3064  0013AE  6EDA               	movwf	fsr2h,c
  3065  0013B0  5035               	movf	decodeManchester@finalArray,w,c
  3066  0013B2  26D9               	addwf	fsr2l,f,c
  3067  0013B4  5036               	movf	decodeManchester@finalArray+1,w,c
  3068  0013B6  22DA               	addwfc	fsr2h,f,c
  3069  0013B8  0E00               	movlw	0
  3070  0013BA                     L1:
  3071  0013BA  6EDE               	movwf	postinc2,c
  3072  0013BC  0E00               	movlw	0
  3073  0013BE  6EDD               	movwf	postdec2,c
  3074                           
  3075                           ;RFID.c: 179: }
  3076                           ;RFID.c: 180: finalArray_index++;
  3077                           
  3078                           ;RFID.c: 175: else {
  3079                           ;RFID.c: 178: return;
  3080                           
  3081                           ;RFID.c: 174: }
  3082  0013C0  4A3D               	infsnz	decodeManchester@finalArray_index,f,c
  3083  0013C2  2A3E               	incf	decodeManchester@finalArray_index+1,f,c
  3084  0013C4  0E02               	movlw	2
  3085  0013C6  263F               	addwf	decodeManchester@i,f,c
  3086  0013C8  0E00               	movlw	0
  3087  0013CA  2240               	addwfc	decodeManchester@i+1,f,c
  3088  0013CC  D795               	goto	i2l2061
  3089  0013CE                     i2l2083:
  3090                           
  3091                           ;RFID.c: 181: }
  3092                           ;RFID.c: 182: finalArray_index = 0;
  3093  0013CE  0E00               	movlw	0
  3094  0013D0  6E3E               	movwf	decodeManchester@finalArray_index+1,c
  3095  0013D2  0E00               	movlw	0
  3096  0013D4  6E3D               	movwf	decodeManchester@finalArray_index,c
  3097  0013D6  0012               	return		;funcret
  3098  0013D8                     __end_of_decodeManchester:
  3099                           	opt stack 0
  3100                           pclatu	equ	0xFFB
  3101                           pclath	equ	0xFFA
  3102                           tblptru	equ	0xFF8
  3103                           tblptrh	equ	0xFF7
  3104                           tblptrl	equ	0xFF6
  3105                           tablat	equ	0xFF5
  3106                           prodh	equ	0xFF4
  3107                           prodl	equ	0xFF3
  3108                           intcon	equ	0xFF2
  3109                           postinc0	equ	0xFEE
  3110                           fsr0h	equ	0xFEA
  3111                           fsr0l	equ	0xFE9
  3112                           wreg	equ	0xFE8
  3113                           postdec1	equ	0xFE5
  3114                           fsr1h	equ	0xFE2
  3115                           fsr1l	equ	0xFE1
  3116                           indf2	equ	0xFDF
  3117                           postinc2	equ	0xFDE
  3118                           postdec2	equ	0xFDD
  3119                           fsr2h	equ	0xFDA
  3120                           fsr2l	equ	0xFD9
  3121                           status	equ	0xFD8
  3122                           pclatu	equ	0xFFB
  3123                           pclath	equ	0xFFA
  3124                           tblptru	equ	0xFF8
  3125                           tblptrh	equ	0xFF7
  3126                           tblptrl	equ	0xFF6
  3127                           tablat	equ	0xFF5
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           postinc0	equ	0xFEE
  3132                           fsr0h	equ	0xFEA
  3133                           fsr0l	equ	0xFE9
  3134                           wreg	equ	0xFE8
  3135                           postdec1	equ	0xFE5
  3136                           fsr1h	equ	0xFE2
  3137                           fsr1l	equ	0xFE1
  3138                           indf2	equ	0xFDF
  3139                           postinc2	equ	0xFDE
  3140                           postdec2	equ	0xFDD
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8
  3144                           
  3145                           	psect	rparam
  3146  0000                     pclatu	equ	0xFFB
  3147                           pclath	equ	0xFFA
  3148                           tblptru	equ	0xFF8
  3149                           tblptrh	equ	0xFF7
  3150                           tblptrl	equ	0xFF6
  3151                           tablat	equ	0xFF5
  3152                           prodh	equ	0xFF4
  3153                           prodl	equ	0xFF3
  3154                           intcon	equ	0xFF2
  3155                           postinc0	equ	0xFEE
  3156                           fsr0h	equ	0xFEA
  3157                           fsr0l	equ	0xFE9
  3158                           wreg	equ	0xFE8
  3159                           postdec1	equ	0xFE5
  3160                           fsr1h	equ	0xFE2
  3161                           fsr1l	equ	0xFE1
  3162                           indf2	equ	0xFDF
  3163                           postinc2	equ	0xFDE
  3164                           postdec2	equ	0xFDD
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8
  3168                           
  3169                           	psect	temp
  3170  000054                     btemp:
  3171                           	opt stack 0
  3172  000054                     	ds	1
  3173  0000                     int$flags	set	btemp
  3174                           pclatu	equ	0xFFB
  3175                           pclath	equ	0xFFA
  3176                           tblptru	equ	0xFF8
  3177                           tblptrh	equ	0xFF7
  3178                           tblptrl	equ	0xFF6
  3179                           tablat	equ	0xFF5
  3180                           prodh	equ	0xFF4
  3181                           prodl	equ	0xFF3
  3182                           intcon	equ	0xFF2
  3183                           postinc0	equ	0xFEE
  3184                           fsr0h	equ	0xFEA
  3185                           fsr0l	equ	0xFE9
  3186                           wreg	equ	0xFE8
  3187                           postdec1	equ	0xFE5
  3188                           fsr1h	equ	0xFE2
  3189                           fsr1l	equ	0xFE1
  3190                           indf2	equ	0xFDF
  3191                           postinc2	equ	0xFDE
  3192                           postdec2	equ	0xFDD
  3193                           fsr2h	equ	0xFDA
  3194                           fsr2l	equ	0xFD9
  3195                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    10
    Data        204
    BSS         2870
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      83
    BANK0           160     11      29
    BANK1           256      0     204
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    decodeManchester@finalArray	PTR int  size(2) Largest target is 400
		 -> finalArray(BIGRAM[400]), 

    decodeManchester@resultArray	PTR int  size(2) Largest target is 400
		 -> resultArray(BIGRAM[400]), 

    parseMultiBitToSingleBit@outputBuffer	PTR int  size(2) Largest target is 400
		 -> resultArray(BIGRAM[400]), 

    parseMultiBitToSingleBit@buffer	PTR unsigned char  size(2) Largest target is 1000
		 -> bitArray(BIGRAM[1000]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_collectManch
    _collectManch->_parseMultiBitToSingleBit

Critical Paths under _main in BANK0

    _main->_ECAN_Transmit
    _zipCAN->_setBit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2627
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                           _I2CSetup
                         _InitDevice
                    _setup_Interrupt
                             _zipCAN
 ---------------------------------------------------------------------------------
 (1) _zipCAN                                               2     2      0    1109
                                              6 BANK0      2     2      0
                             _setBit
 ---------------------------------------------------------------------------------
 (2) _setBit                                               6     2      4    1109
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _setup_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2CSetup                                             2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10    1111
                                              0 BANK0     11     1     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay                                                2     0      2     262
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 14    14      0    1171
                                             17 COMRAM    14    14      0
                       _collectManch
 ---------------------------------------------------------------------------------
 (4) _collectManch                                         1     1      0    1171
                                             16 COMRAM     1     1      0
                   _decodeManchester
           _parseMultiBitToSingleBit
 ---------------------------------------------------------------------------------
 (5) _parseMultiBitToSingleBit                            16    10      6     730
                                              0 COMRAM    16    10      6
 ---------------------------------------------------------------------------------
 (5) _decodeManchester                                    12     8      4     441
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _I2CSetup
   _InitDevice
   _setup_Interrupt
   _zipCAN
     _setBit

 _ISR (ROOT)
   _collectManch
     _decodeManchester
     _parseMultiBitToSingleBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     AF0      35       76.8%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      CC       8       79.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      1D       5       18.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      53       1       88.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C       6        0.0%
DATA                 0      0     C2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Dec 22 00:03:05 2015

                            _MAP_BACKLIGHT 0013                                _SSPSTATbits 000FC7  
                              __CFG_BORV$3 000000                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                                        l377 141A  
                                      l379 145A                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                                        _ISR 0008  
                                      _raw 01CC                                        _val 0021  
                        _Interrupt_counter 0062                                        prod 000FF3  
                                      wreg 000FE8                decodeManchester@resultArray 0037  
                parseMultiBitToSingleBit@i 003D                                       ?_ISR 0035  
                            _MAP_HEARTBEAT 0066                                       _B0D0 000E86  
                                     _B0D1 000E87                                       _B0D2 000E88  
                                     _B0D3 000E89                                       _B0D4 000E8A  
                                     _B0D5 000E8B                                       _B0D6 000E8C  
                                     _B0D7 000E8D                              _MAP_DIRECTION 0064  
                                     l2703 11C2                                       l2731 12A2  
                                     l2803 14B2                                       l2811 0F2C  
                                     l2743 12D0                                       l2735 12B0  
                                     l2823 0F98                                       l2745 12DC  
                                     l2737 12BE                                       l2761 1730  
                                     l2841 1040                                       l2817 0F62  
                                     l2739 12C2                                       l2835 1004  
                                     l2773 1810                                       l2757 171A  
                                     l2829 0FCE                                       l2791 149E  
                                     l2767 174C                                       l2789 1498  
                                     l2893 1798                                       STR_1 0F0B  
                                     u2040 0F46                                       u2050 0F7C  
                                     u2060 0FB2                                       u2070 0FE8  
                                     u2080 1022                                       u2090 105E  
                                     u1904 1800                                       u1905 17FA  
                                     i2l90 0064                                       _main 1766  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                                     fsr1l 000FE1                                       indf2 000FDF  
                                     fsr2l 000FD9                                       btemp 0054  
                         __end_of_I2CSetup 1766                             ??_collectManch 0045  
                                     pclat 000FFA                                       prodh 000FF4  
                                     prodl 000FF3                                       start 00A0  
                            __CFG_IESO$OFF 000000                           __end_of_CANSetup 12E8  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000010  
                                    ??_ISR 0046                              _MAP_SAFETYPIN 0068  
                                    _B0DLC 000E85                                      ?_main 0035  
                                    _BSEL0 000E7D                                      _MSEL0 000E79  
                                    _MSEL1 000E7A                                      _MSEL2 000E7B  
                                    _MSEL3 000E7C                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                           _i2c_byte_count 0028                                      _Delay 1810  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                                      _inPin 0079  
                          __end_of_dpowers 0F0B                                      _count 0027  
                                    _index 001D                                      _point 001F  
                                    tablat 000FF5                                      status 000FD8  
                               _InitDevice 1602                      __size_of_ECAN_Receive 00DE  
                          __initialization 157E                               __end_of_main 17A8  
                                   ??_main 0079                              __activetblptr 000002  
        __size_of_parseMultiBitToSingleBit 0140                  ?_parseMultiBitToSingleBit 0035  
                           __CFG_RETEN$OFF 000000                                     ?_Delay 006E  
                                   _B0EIDH 000E83                                     _B0EIDL 000E84  
                         ECAN_Transmit@DLC 006F                                     _B0SIDH 000E81  
                                   _B0SIDL 000E82                                  I2CSetup@i 006E  
                                   _CANCON 000F6F                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                               _ECAN_Receive 13D8  
                                   i2l2021 10AE                            __CFG_BBSIZ$BB2K 000000  
                                   i2l2033 1114                                     i2l2025 10D4  
                                   i2l2017 109E                                     i2l2043 1182  
                                   i2l2061 12F8                                     i2l2037 1134  
                                   i2l2029 10F4                                     i2l2071 1362  
                                   i2l2055 11B8                                     i2l2065 1308  
                                   i2l2049 119A                                     i2l2083 13CE  
                 __size_of_setup_Interrupt 000A                                     _OSCCON 000FD3  
                                   _RXB0D0 000F66                                     _RXB0D1 000F67  
                                   _RXB0D2 000F68                                     _RXB0D3 000F69  
                                   _RXB0D4 000F6A                                     _RXB1D0 000F36  
                                   _RXB0D5 000F6B                                     _RXB1D1 000F37  
                                   _RXB0D6 000F6C                                     _RXB1D2 000F38  
                                   _RXB0D7 000F6D                                     _RXB1D3 000F39  
                                   _RXB1D4 000F3A                                     _RXB1D5 000F3B  
                                   _RXB1D6 000F3C                                     _RXB1D7 000F3D  
                                   _TXB0D0 000F26                                     _TXB0D1 000F27  
                                   _TXB0D2 000F28                                     _TXB0D3 000F29  
                                   _TXB0D4 000F2A                                     _TXB0D5 000F2B  
                                   _TXB0D6 000F2C                                     _TXB0D7 000F2D  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                           __CFG_XINST$OFF 000000                   __end_of_decodeManchester 13D8  
                           __CFG_STVREN$ON 000000                          decodeManchester@i 003F  
                         _heartBeatCounter 006A                                     _ledPin 007B  
                                   _bufnum 01C8                                     clear_0 1586  
                                   clear_1 15A2                                     clear_2 15AE  
                                   _setBit 17EA                                     _zipCAN 0F10  
                     __end_of_collectManch 16F8                                  ?_I2CSetup 0035  
                             __mediumconst 0000                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                                ?_CANSetup 0035                                 __accesstop 0060  
                  __end_of__initialization 15F4                   ECAN_Transmit@TRANSMIT_ID 0070  
                            ___rparam_used 000001                                ?_InitDevice 0035  
                              _i2c_reg_map 0001                              __end_of_Delay 1828  
                           __pcstackCOMRAM 0035                               __pidataBANK0 1832  
                             __pidataBANK1 14B6                     __size_of_ECAN_Transmit 0042  
                               ??_I2CSetup 006E                                    ??_Delay 0070  
                              setBit@shift 006E                                setBit@value 0070  
                               ??_CANSetup 006E                                 __pbssBANK0 0060  
                               __pbssBANK1 01C8                            __CFG_PLLCFG$OFF 000000  
                        ??_setup_Interrupt 006E                          ECAN_Transmit@SIDH 0078  
                        ECAN_Transmit@SIDL 006E                                  _B0CONbits 000E80  
                                  _ECANCON 000F72                                    ?_setBit 006E  
                                  ?_zipCAN 0035                                    _BRGCON1 000E43  
                                  _BRGCON2 000E44                                    _BRGCON3 000E45  
                               _finalArray 099C                           __CFG_CANMX$PORTB 000000  
                      __size_of_InitDevice 0082                                    _RXB0DLC 000F65  
                                  _RXB1DLC 000F35                                    _RXB0CON 000F60  
                                  _RXB1CON 000F30                                    i2u95_40 10E4  
                                  i2u97_40 1124                                    _TXB0DLC 000F25  
                                  i2u99_40 1192                                    _RXFCON0 000E46  
                                  _RXFCON1 000E47                                    _SSPCON1 000FC6  
                                  _SSPCON2 000FC5                                    _SSPSTAT 000FC7  
                            _ECAN_Transmit 17A8                            __CFG_PWRTEN$OFF 000000  
                                  __Hparam 0000                                    __Lparam 0000  
                             __psmallconst 0F00                      __size_of_collectManch 0074  
                                  __pcinit 157E                                    __ramtop 0F00  
                          __size_of_setBit 0026                                    __ptext0 1766  
                                  __ptext1 0F10                                    __ptext2 17EA  
                                  __ptext3 1828                                    __ptext4 1602  
                                  __ptext5 16F8                                    __ptext6 17A8  
                                  __ptext7 13D8                                    __ptext8 1810  
                                  __ptext9 11BE                            __size_of_zipCAN 016E  
                                _T0CONbits 000FD5                               __size_of_ISR 0098  
                                  _dpowers 0F01                          __CFG_MSSPMSK$MSK7 000000  
                                  _temp_D2 002A                                    _temp_D3 002B  
                                  _temp_D4 002C                                    _temp_D5 002D  
                                  _temp_D6 002E                                    _temp_D7 002F  
                           ?_ECAN_Transmit 006E                                  _MAP_BRAKE 0015  
                     end_of_initialization 15F4                              __Lmediumconst 0000  
         decodeManchester@finalArray_index 003D                               _collectManch 1684  
                         _buttonWasPressed 0026                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc2 000FDE                          ?_decodeManchester 0035  
                       ??_decodeManchester 0039                                  _PORTBbits 000F81  
                         __CFG_FOSC$INTIO2 000000             parseMultiBitToSingleBit@inARow 0043  
                        __size_of_I2CSetup 006E             parseMultiBitToSingleBit@buffer 0035  
                        __CFG_SOSCSEL$HIGH 000000                          __size_of_CANSetup 012A  
                             ??_InitDevice 006E                               _i2c_reg_addr 0029  
                 _parseMultiBitToSingleBit 107E                             __end_of_setBit 1810  
                           __end_of_zipCAN 107E                        start_initialization 157E  
                          ??_ECAN_Transmit 0078                                __end_of_ISR 00A0  
                       __end_of_InitDevice 1684       parseMultiBitToSingleBit@outputBuffer 0039  
                          _setup_Interrupt 1828                                _CANSTATbits 000F6E  
          parseMultiBitToSingleBit@lastVal 0041                                __pdataBANK0 0079  
                              __pdataBANK1 0100                                   ??_setBit 0072  
                                 ??_zipCAN 0074                                __pbssBIGRAM 01CC  
                              __pbssCOMRAM 0001                              __pcstackBANK0 006E  
                       ECAN_Transmit@DATA1 0071                         ECAN_Transmit@DATA2 0072  
                       ECAN_Transmit@DATA3 0073                         ECAN_Transmit@DATA4 0074  
                       ECAN_Transmit@DATA5 0075                         ECAN_Transmit@DATA6 0076  
                       ECAN_Transmit@DATA7 0077                                  __pintcode 0008  
                    _MAP_REC_BATTERYSTATUS 0024                                  _bitlenctr 001B  
                           _heartbeatCount 006C                                   _I2C_FLAG 0011  
                              __smallconst 0F00                    __end_of_setup_Interrupt 1832  
                                 _I2CSetup 16F8                             __size_of_Delay 0018  
                                 _CANSetup 11BE                              ?_ECAN_Receive 0035  
                                 _LATAbits 000F89                                   _LATCbits 000F8B  
                                 _PIE1bits 000F9D                                  _temp_EIDH 0031  
                                _temp_EIDL 0032                                  _temp_SIDH 0033  
                                _temp_SIDL 0034                                   i2u127_40 168E  
                                 i2u127_48 1690                                   _PIR1bits 000F9E  
                                 _PIR5bits 000F77                                   _RXB0EIDH 000F63  
                                 _RXB0EIDL 000F64                                   _RXB1EIDH 000F33  
                                 _RXB1EIDL 000F34                                   _RCONbits 000FD0  
                                 _RXB0SIDH 000F61                                   _RXB0SIDL 000F62  
                                 _RXB1SIDH 000F31                                   _RXF0EIDH 000EE2  
                                 _RXB1SIDL 000F32                                   _RXF0EIDL 000EE3  
                                 _RXF1EIDH 000EE6                                   _RXF1EIDL 000EE7  
                                 _RXF2EIDH 000EEA                                   _RXF2EIDL 000EEB  
                                 _RXF0SIDH 000EE0                                   _RXF0SIDL 000EE1  
                                 _TXB0EIDH 000F23                                   _RXF1SIDH 000EE4  
                                 _TXB0EIDL 000F24                                   _RXF1SIDL 000EE5  
                                 _RXF2SIDH 000EE8                                   _RXF2SIDL 000EE9  
                                 _RXM0EIDH 000EFA                                   _RXM0EIDL 000EFB  
                                 _TXB0SIDH 000F21                                   _RXM1EIDH 000EFE  
                                 _TXB0SIDL 000F22                                   _RXM1EIDL 000EFF  
                                 _RXFBCON0 000E71                                   _RXFBCON1 000E72  
                                 _RXFBCON2 000E73                                   _RXFBCON3 000E74  
                                 _RXFBCON4 000E75                                   _RXFBCON5 000E76  
                                 _RXFBCON6 000E77                                   _RXFBCON7 000E78  
                                 _RXM0SIDH 000EF8                                   _RXM0SIDL 000EF9  
                                 _RXM1SIDH 000EFC                                   _RXM1SIDL 000EFD  
                         _MAP_REC_VELOCITY 0025                      ECAN_Receive@RXMsgFlag 006E  
                        process_buf@F18135 0100                                _MAP_BITDATA 0023  
                           ??_ECAN_Receive 006E                  __size_of_decodeManchester 00F0  
                              _MAP_H_BLINK 0017                                  copy_data0 15C8  
                                copy_data1 15E8                                _MAP_V_BLINK 0019  
               ??_parseMultiBitToSingleBit 003B                                   __Hrparam 0000  
                                 __Lrparam 0000                         __CFG_BOREN$SBORDIS 000000  
                                 _bitArray 05B4                           ?_setup_Interrupt 0035  
                                 __ptext11 1684                                   __ptext12 107E  
                                 __ptext13 12E8                                   _curState 01CA  
                            __size_of_main 0042                                 _FIRST_SEND 0060  
                                 _temp_DLC 0030                                   int$flags 0054  
                      __CFG_INTOSCSEL$HIGH 000000                                 Delay@count 006E  
                              _RXB0CONbits 000F60                                _RXB1CONbits 000F30  
               decodeManchester@finalArray 0035                         __CFG_WDTEN$SWDTDIS 000000  
                              _OSCTUNEbits 000F9B                                 _INTCONbits 000FF2  
                    __end_of_ECAN_Transmit 17EA                                   intlevel2 0000  
                              _TXB0CONbits 000F20                                 _OSCCONbits 000FD3  
                       __CFG_WDTPS$1048576 000000                       __end_of_ECAN_Receive 14B6  
parseMultiBitToSingleBit@resultArray_index 003F                                _resultArray 0B2C  
      parseMultiBitToSingleBit@startOffset 0037                                _SSPCON1bits 000FC6  
                         _decodeManchester 12E8                        __CFG_BORPWR$ZPBORMV 000000  
         __end_of_parseMultiBitToSingleBit 11BE                              ?_collectManch 0035  
