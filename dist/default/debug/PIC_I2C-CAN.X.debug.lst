

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Dec 22 00:30:23 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataBANK0
    36  00181A                     __pidataBANK0:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _inPin
    40  00181A  0007               	dw	7
    41                           
    42                           ;initializer for _ledPin
    43  00181C  000D               	dw	13
    44                           
    45                           	psect	idataBANK1
    46  0014BA                     __pidataBANK1:
    47                           	opt stack 0
    48                           
    49                           ;initializer for process_buf@F18129
    50  0014BA  0000               	dw	0
    51  0014BC  0000               	dw	0
    52  0014BE  0000               	dw	0
    53  0014C0  0001               	dw	1
    54  0014C2  0001               	dw	1
    55  0014C4  0000               	dw	0
    56  0014C6  0000               	dw	0
    57  0014C8  0001               	dw	1
    58  0014CA  0000               	dw	0
    59  0014CC  0001               	dw	1
    60  0014CE  0001               	dw	1
    61  0014D0  0001               	dw	1
    62  0014D2  0001               	dw	1
    63  0014D4  0000               	dw	0
    64  0014D6  0000               	dw	0
    65  0014D8  0001               	dw	1
    66  0014DA  0000               	dw	0
    67  0014DC  0000               	dw	0
    68  0014DE  0001               	dw	1
    69  0014E0  0001               	dw	1
    70  0014E2  0000               	dw	0
    71  0014E4  0001               	dw	1
    72  0014E6  0001               	dw	1
    73  0014E8  0001               	dw	1
    74  0014EA  0000               	dw	0
    75  0014EC  0001               	dw	1
    76  0014EE  0001               	dw	1
    77  0014F0  0000               	dw	0
    78  0014F2  0000               	dw	0
    79  0014F4  0000               	dw	0
    80  0014F6  0000               	dw	0
    81  0014F8  0000               	dw	0
    82  0014FA  0000               	dw	0
    83  0014FC  0000               	dw	0
    84  0014FE  0001               	dw	1
    85  001500  0000               	dw	0
    86  001502  0001               	dw	1
    87  001504  0001               	dw	1
    88  001506  0000               	dw	0
    89  001508  0000               	dw	0
    90  00150A  0000               	dw	0
    91  00150C  0000               	dw	0
    92  00150E  0000               	dw	0
    93  001510  0000               	dw	0
    94  001512  0000               	dw	0
    95  001514  0001               	dw	1
    96  001516  0001               	dw	1
    97  001518  0000               	dw	0
    98  00151A  0000               	dw	0
    99  00151C  0000               	dw	0
   100  00151E  0000               	dw	0
   101  001520  0000               	dw	0
   102  001522  0000               	dw	0
   103  001524  0001               	dw	1
   104  001526  0001               	dw	1
   105  001528  0000               	dw	0
   106  00152A  0000               	dw	0
   107  00152C  0001               	dw	1
   108  00152E  0000               	dw	0
   109  001530  0001               	dw	1
   110  001532  0001               	dw	1
   111  001534  0001               	dw	1
   112  001536  0001               	dw	1
   113  001538  0000               	dw	0
   114  00153A  0000               	dw	0
   115  00153C  0001               	dw	1
   116  00153E  0000               	dw	0
   117  001540  0000               	dw	0
   118  001542  0001               	dw	1
   119  001544  0001               	dw	1
   120  001546  0000               	dw	0
   121  001548  0001               	dw	1
   122  00154A  0001               	dw	1
   123  00154C  0001               	dw	1
   124  00154E  0000               	dw	0
   125  001550  0001               	dw	1
   126  001552  0001               	dw	1
   127  001554  0000               	dw	0
   128  001556  0000               	dw	0
   129  001558  0000               	dw	0
   130  00155A  0000               	dw	0
   131  00155C  0000               	dw	0
   132  00155E  0000               	dw	0
   133  001560  0000               	dw	0
   134  001562  0001               	dw	1
   135  001564  0000               	dw	0
   136  001566  0001               	dw	1
   137  001568  0001               	dw	1
   138  00156A  0000               	dw	0
   139  00156C  0000               	dw	0
   140  00156E  0000               	dw	0
   141  001570  0000               	dw	0
   142  001572  0000               	dw	0
   143  001574  0000               	dw	0
   144  001576  0000               	dw	0
   145  001578  0001               	dw	1
   146  00157A  0001               	dw	1
   147  00157C  0000               	dw	0
   148  00157E  0000               	dw	0
   149  001580  0000               	dw	0
   150                           
   151                           	psect	smallconst
   152  000F00                     __psmallconst:
   153                           	opt stack 0
   154  000F00  00                 	db	0
   155  000F01                     _dpowers:
   156                           	opt stack 0
   157  000F01  0001               	dw	1
   158  000F03  000A               	dw	10
   159  000F05  0064               	dw	100
   160  000F07  03E8               	dw	1000
   161  000F09  2710               	dw	10000
   162  000F0B                     __end_of_dpowers:
   163                           	opt stack 0
   164  0000                     _B0CONbits	set	3712
   165  0000                     _B0D0	set	3718
   166  0000                     _B0D1	set	3719
   167  0000                     _B0D2	set	3720
   168  0000                     _B0D3	set	3721
   169  0000                     _B0D4	set	3722
   170  0000                     _B0D5	set	3723
   171  0000                     _B0D6	set	3724
   172  0000                     _B0D7	set	3725
   173  0000                     _B0DLC	set	3717
   174  0000                     _B0EIDH	set	3715
   175  0000                     _B0EIDL	set	3716
   176  0000                     _B0SIDH	set	3713
   177  0000                     _B0SIDL	set	3714
   178  0000                     _BRGCON1	set	3651
   179  0000                     _BRGCON2	set	3652
   180  0000                     _BRGCON3	set	3653
   181  0000                     _BSEL0	set	3709
   182  0000                     _MSEL0	set	3705
   183  0000                     _MSEL1	set	3706
   184  0000                     _MSEL2	set	3707
   185  0000                     _MSEL3	set	3708
   186  0000                     _RXF0EIDH	set	3810
   187  0000                     _RXF0EIDL	set	3811
   188  0000                     _RXF0SIDH	set	3808
   189  0000                     _RXF0SIDL	set	3809
   190  0000                     _RXF1EIDH	set	3814
   191  0000                     _RXF1EIDL	set	3815
   192  0000                     _RXF1SIDH	set	3812
   193  0000                     _RXF1SIDL	set	3813
   194  0000                     _RXF2EIDH	set	3818
   195  0000                     _RXF2EIDL	set	3819
   196  0000                     _RXF2SIDH	set	3816
   197  0000                     _RXF2SIDL	set	3817
   198  0000                     _RXFBCON0	set	3697
   199  0000                     _RXFBCON1	set	3698
   200  0000                     _RXFBCON2	set	3699
   201  0000                     _RXFBCON3	set	3700
   202  0000                     _RXFBCON4	set	3701
   203  0000                     _RXFBCON5	set	3702
   204  0000                     _RXFBCON6	set	3703
   205  0000                     _RXFBCON7	set	3704
   206  0000                     _RXFCON0	set	3654
   207  0000                     _RXFCON1	set	3655
   208  0000                     _RXM0EIDH	set	3834
   209  0000                     _RXM0EIDL	set	3835
   210  0000                     _RXM0SIDH	set	3832
   211  0000                     _RXM0SIDL	set	3833
   212  0000                     _RXM1EIDH	set	3838
   213  0000                     _RXM1EIDL	set	3839
   214  0000                     _RXM1SIDH	set	3836
   215  0000                     _RXM1SIDL	set	3837
   216  0000                     _ANCON0	set	3933
   217  0000                     _ANCON1	set	3932
   218  0000                     _RXB1CON	set	3888
   219  0000                     _RXB1CONbits	set	3888
   220  0000                     _RXB1D0	set	3894
   221  0000                     _RXB1D1	set	3895
   222  0000                     _RXB1D2	set	3896
   223  0000                     _RXB1D3	set	3897
   224  0000                     _RXB1D4	set	3898
   225  0000                     _RXB1D5	set	3899
   226  0000                     _RXB1D6	set	3900
   227  0000                     _RXB1D7	set	3901
   228  0000                     _RXB1DLC	set	3893
   229  0000                     _RXB1EIDH	set	3891
   230  0000                     _RXB1EIDL	set	3892
   231  0000                     _RXB1SIDH	set	3889
   232  0000                     _RXB1SIDL	set	3890
   233  0000                     _TXB0CONbits	set	3872
   234  0000                     _TXB0D0	set	3878
   235  0000                     _TXB0D1	set	3879
   236  0000                     _TXB0D2	set	3880
   237  0000                     _TXB0D3	set	3881
   238  0000                     _TXB0D4	set	3882
   239  0000                     _TXB0D5	set	3883
   240  0000                     _TXB0D6	set	3884
   241  0000                     _TXB0D7	set	3885
   242  0000                     _TXB0DLC	set	3877
   243  0000                     _TXB0EIDH	set	3875
   244  0000                     _TXB0EIDL	set	3876
   245  0000                     _TXB0SIDH	set	3873
   246  0000                     _TXB0SIDL	set	3874
   247  0000                     _CANCON	set	3951
   248  0000                     _CANSTATbits	set	3950
   249  0000                     _ECANCON	set	3954
   250  0000                     _INTCONbits	set	4082
   251  0000                     _LATAbits	set	3977
   252  0000                     _LATCbits	set	3979
   253  0000                     _OSCCON	set	4051
   254  0000                     _OSCCONbits	set	4051
   255  0000                     _OSCTUNEbits	set	3995
   256  0000                     _PIE1bits	set	3997
   257  0000                     _PIR1bits	set	3998
   258  0000                     _PIR5bits	set	3959
   259  0000                     _PORTBbits	set	3969
   260  0000                     _RCONbits	set	4048
   261  0000                     _RXB0CON	set	3936
   262  0000                     _RXB0CONbits	set	3936
   263  0000                     _RXB0D0	set	3942
   264  0000                     _RXB0D1	set	3943
   265  0000                     _RXB0D2	set	3944
   266  0000                     _RXB0D3	set	3945
   267  0000                     _RXB0D4	set	3946
   268  0000                     _RXB0D5	set	3947
   269  0000                     _RXB0D6	set	3948
   270  0000                     _RXB0D7	set	3949
   271  0000                     _RXB0DLC	set	3941
   272  0000                     _RXB0EIDH	set	3939
   273  0000                     _RXB0EIDL	set	3940
   274  0000                     _RXB0SIDH	set	3937
   275  0000                     _RXB0SIDL	set	3938
   276  0000                     _SSPADD	set	4040
   277  0000                     _SSPBUF	set	4041
   278  0000                     _SSPCON1	set	4038
   279  0000                     _SSPCON1bits	set	4038
   280  0000                     _SSPCON2	set	4037
   281  0000                     _SSPSTAT	set	4039
   282  0000                     _SSPSTATbits	set	4039
   283  0000                     _T0CONbits	set	4053
   284  0000                     _TRISA	set	3986
   285  0000                     _TRISB	set	3987
   286  0000                     _TRISC	set	3988
   287  000F0B  25                 	db	37
   288  000F0C  64                 	db	100	;'d'
   289  000F0D  00                 	db	0
   290                           
   291                           ; #config settings
   292  000F0E  00                 	db	0	; dummy byte at the end
   293  0000                     
   294                           	psect	cinit
   295  001582                     __pcinit:
   296                           	opt stack 0
   297  001582                     start_initialization:
   298                           	opt stack 0
   299  001582                     __initialization:
   300                           	opt stack 0
   301                           
   302                           ; Clear objects allocated to BIGRAM (3000 bytes)
   303  001582  EE01  F0CC         	lfsr	0,__pbssBIGRAM
   304  001586  EE1B F0B8          	lfsr	1,3000
   305  00158A                     clear_0:
   306  00158A  6AEE               	clrf	postinc0,c
   307  00158C  50E5               	movf	postdec1,w,c
   308  00158E  50E1               	movf	fsr1l,w,c
   309  001590  E1FC               	bnz	clear_0
   310  001592  50E2               	movf	fsr1h,w,c
   311  001594  E1FA               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK1 (4 bytes)
   314  001596  0101               	movlb	1
   315  001598  6BCB               	clrf	(__pbssBANK1+3)& (0+255),b
   316  00159A  6BCA               	clrf	(__pbssBANK1+2)& (0+255),b
   317  00159C  6BC9               	clrf	(__pbssBANK1+1)& (0+255),b
   318  00159E  6BC8               	clrf	__pbssBANK1& (0+255),b
   319                           
   320                           ; Clear objects allocated to BANK0 (10 bytes)
   321  0015A0  EE00  F06B         	lfsr	0,__pbssBANK0
   322  0015A4  0E0A               	movlw	10
   323  0015A6                     clear_1:
   324  0015A6  6AEE               	clrf	postinc0,c
   325  0015A8  06E8               	decf	wreg,f,c
   326  0015AA  E1FD               	bnz	clear_1
   327                           
   328                           ; Clear objects allocated to COMRAM (56 bytes)
   329  0015AC  EE00  F001         	lfsr	0,__pbssCOMRAM
   330  0015B0  0E38               	movlw	56
   331  0015B2                     clear_2:
   332  0015B2  6AEE               	clrf	postinc0,c
   333  0015B4  06E8               	decf	wreg,f,c
   334  0015B6  E1FD               	bnz	clear_2
   335                           
   336                           ; Initialize objects allocated to BANK1 (200 bytes)
   337                           ; load TBLPTR registers with __pidataBANK1
   338  0015B8  0EBA               	movlw	low __pidataBANK1
   339  0015BA  6EF6               	movwf	tblptrl,c
   340  0015BC  0E14               	movlw	high __pidataBANK1
   341  0015BE  6EF7               	movwf	tblptrh,c
   342  0015C0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   343  0015C2  6EF8               	movwf	tblptru,c
   344  0015C4  EE01  F000         	lfsr	0,__pdataBANK1
   345  0015C8  EE10 F0C8          	lfsr	1,200
   346  0015CC                     copy_data0:
   347  0015CC  0009               	tblrd		*+
   348  0015CE  CFF5 FFEE          	movff	tablat,postinc0
   349  0015D2  50E5               	movf	postdec1,w,c
   350  0015D4  50E1               	movf	fsr1l,w,c
   351  0015D6  E1FA               	bnz	copy_data0
   352                           
   353                           ; Initialize objects allocated to BANK0 (4 bytes)
   354                           ; load TBLPTR registers with __pidataBANK0
   355  0015D8  0E1A               	movlw	low __pidataBANK0
   356  0015DA  6EF6               	movwf	tblptrl,c
   357  0015DC  0E18               	movlw	high __pidataBANK0
   358  0015DE  6EF7               	movwf	tblptrh,c
   359  0015E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   360  0015E2  6EF8               	movwf	tblptru,c
   361  0015E4  EE00  F075         	lfsr	0,__pdataBANK0
   362  0015E8  EE10 F004          	lfsr	1,4
   363  0015EC                     copy_data1:
   364  0015EC  0009               	tblrd		*+
   365  0015EE  CFF5 FFEE          	movff	tablat,postinc0
   366  0015F2  50E5               	movf	postdec1,w,c
   367  0015F4  50E1               	movf	fsr1l,w,c
   368  0015F6  E1FA               	bnz	copy_data1
   369  0015F8                     end_of_initialization:
   370                           	opt stack 0
   371  0015F8                     __end_of__initialization:
   372                           	opt stack 0
   373  0015F8  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   374  0015FA  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   375  0015FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   376  0015FE  6EF8               	movwf	tblptru,c
   377  001600  0100               	movlb	0
   378  001602  EFA7  F00B         	goto	_main	;jump to C main() function
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1h	equ	0xFE2
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	bssCOMRAM
   390  000001                     __pbssCOMRAM:
   391                           	opt stack 0
   392  000001                     _i2c_reg_map:
   393                           	opt stack 0
   394  000001                     	ds	16
   395  000011                     _I2C_FLAG:
   396                           	opt stack 0
   397  000011                     	ds	2
   398  000013                     _MAP_BACKLIGHT:
   399                           	opt stack 0
   400  000013                     	ds	2
   401  000015                     _MAP_BRAKE:
   402                           	opt stack 0
   403  000015                     	ds	2
   404  000017                     _MAP_DIRECTION:
   405                           	opt stack 0
   406  000017                     	ds	2
   407  000019                     _MAP_H_BLINK:
   408                           	opt stack 0
   409  000019                     	ds	2
   410  00001B                     _MAP_SAFETYPIN:
   411                           	opt stack 0
   412  00001B                     	ds	2
   413  00001D                     _MAP_V_BLINK:
   414                           	opt stack 0
   415  00001D                     	ds	2
   416  00001F                     _bitlenctr:
   417                           	opt stack 0
   418  00001F                     	ds	2
   419  000021                     _index:
   420                           	opt stack 0
   421  000021                     	ds	2
   422  000023                     _point:
   423                           	opt stack 0
   424  000023                     	ds	2
   425  000025                     _val:
   426                           	opt stack 0
   427  000025                     	ds	2
   428  000027                     _MAP_BITDATA:
   429                           	opt stack 0
   430  000027                     	ds	1
   431  000028                     _MAP_REC_BATTERYSTATUS:
   432                           	opt stack 0
   433  000028                     	ds	1
   434  000029                     _MAP_REC_VELOCITY:
   435                           	opt stack 0
   436  000029                     	ds	1
   437  00002A                     _buttonWasPressed:
   438                           	opt stack 0
   439  00002A                     	ds	1
   440  00002B                     _count:
   441                           	opt stack 0
   442  00002B                     	ds	1
   443  00002C                     _i2c_byte_count:
   444                           	opt stack 0
   445  00002C                     	ds	1
   446  00002D                     _i2c_reg_addr:
   447                           	opt stack 0
   448  00002D                     	ds	1
   449  00002E                     _temp_D2:
   450                           	opt stack 0
   451  00002E                     	ds	1
   452  00002F                     _temp_D3:
   453                           	opt stack 0
   454  00002F                     	ds	1
   455  000030                     _temp_D4:
   456                           	opt stack 0
   457  000030                     	ds	1
   458  000031                     _temp_D5:
   459                           	opt stack 0
   460  000031                     	ds	1
   461  000032                     _temp_D6:
   462                           	opt stack 0
   463  000032                     	ds	1
   464  000033                     _temp_D7:
   465                           	opt stack 0
   466  000033                     	ds	1
   467  000034                     _temp_DLC:
   468                           	opt stack 0
   469  000034                     	ds	1
   470  000035                     _temp_EIDH:
   471                           	opt stack 0
   472  000035                     	ds	1
   473  000036                     _temp_EIDL:
   474                           	opt stack 0
   475  000036                     	ds	1
   476  000037                     _temp_SIDH:
   477                           	opt stack 0
   478  000037                     	ds	1
   479  000038                     _temp_SIDL:
   480                           	opt stack 0
   481  000038                     	ds	1
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1h	equ	0xFE2
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	bssBANK0
   493  00006B                     __pbssBANK0:
   494                           	opt stack 0
   495  00006B                     _FIRST_SEND:
   496                           	opt stack 0
   497  00006B                     	ds	2
   498  00006D                     _Interrupt_counter:
   499                           	opt stack 0
   500  00006D                     	ds	2
   501  00006F                     _MAP_HEARTBEAT:
   502                           	opt stack 0
   503  00006F                     	ds	2
   504  000071                     _heartBeatCounter:
   505                           	opt stack 0
   506  000071                     	ds	2
   507  000073                     _heartbeatCount:
   508                           	opt stack 0
   509  000073                     	ds	2
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           postdec1	equ	0xFE5
   517                           fsr1h	equ	0xFE2
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	dataBANK0
   521  000075                     __pdataBANK0:
   522                           	opt stack 0
   523  000075                     _inPin:
   524                           	opt stack 0
   525  000075                     	ds	2
   526  000077                     _ledPin:
   527                           	opt stack 0
   528  000077                     	ds	2
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1h	equ	0xFE2
   537                           fsr1l	equ	0xFE1
   538                           
   539                           	psect	bssBANK1
   540  0001C8                     __pbssBANK1:
   541                           	opt stack 0
   542  0001C8                     _bufnum:
   543                           	opt stack 0
   544  0001C8                     	ds	2
   545  0001CA                     _curState:
   546                           	opt stack 0
   547  0001CA                     	ds	2
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1h	equ	0xFE2
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	dataBANK1
   559  000100                     __pdataBANK1:
   560                           	opt stack 0
   561  000100                     process_buf@F18129:
   562                           	opt stack 0
   563  000100                     	ds	200
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           postdec1	equ	0xFE5
   571                           fsr1h	equ	0xFE2
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	bssBIGRAM
   575  0001CC                     __pbssBIGRAM:
   576                           	opt stack 0
   577  0001CC                     _bitArray:
   578                           	opt stack 0
   579  0001CC                     	ds	1400
   580  000744                     _raw:
   581                           	opt stack 0
   582  000744                     	ds	1000
   583  000B2C                     _resultArray:
   584                           	opt stack 0
   585  000B2C                     	ds	300
   586  000C58                     _finalArray:
   587                           	opt stack 0
   588  000C58                     	ds	300
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           postdec1	equ	0xFE5
   596                           fsr1h	equ	0xFE2
   597                           fsr1l	equ	0xFE1
   598                           
   599                           	psect	cstackBANK0
   600  000060                     __pcstackBANK0:
   601                           	opt stack 0
   602  000060                     ECAN_Receive@RXMsgFlag:
   603                           	opt stack 0
   604  000060                     ECAN_Transmit@SIDL:
   605                           	opt stack 0
   606  000060                     setBit@shift:
   607                           	opt stack 0
   608  000060                     I2CSetup@i:
   609                           	opt stack 0
   610  000060                     Delay@count:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x0
   614  000060                     	ds	1
   615  000061                     ECAN_Transmit@DLC:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x1
   619  000061                     	ds	1
   620  000062                     ECAN_Transmit@TRANSMIT_ID:
   621                           	opt stack 0
   622  000062                     setBit@value:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x2
   626  000062                     	ds	1
   627  000063                     ECAN_Transmit@DATA1:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x3
   631  000063                     	ds	1
   632  000064                     ??_setBit:
   633  000064                     ECAN_Transmit@DATA2:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x4
   637  000064                     	ds	1
   638  000065                     ECAN_Transmit@DATA3:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x5
   642  000065                     	ds	1
   643  000066                     ??_zipCAN:
   644  000066                     ECAN_Transmit@DATA4:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x6
   648  000066                     	ds	1
   649  000067                     ECAN_Transmit@DATA5:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x7
   653  000067                     	ds	1
   654  000068                     ECAN_Transmit@DATA6:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x8
   658  000068                     	ds	1
   659  000069                     ECAN_Transmit@DATA7:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x9
   663  000069                     	ds	1
   664  00006A                     ECAN_Transmit@SIDH:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0xA
   668  00006A                     	ds	1
   669  00006B                     tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1h	equ	0xFE2
   677                           fsr1l	equ	0xFE1
   678                           
   679                           ; 0 bytes @ 0xB
   680                           
   681                           	psect	cstackCOMRAM
   682  000039                     __pcstackCOMRAM:
   683                           	opt stack 0
   684  000039                     parseMultiBitToSingleBit@startOffset:
   685                           	opt stack 0
   686  000039                     decodeManchester@finalArray:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x0
   690  000039                     	ds	2
   691  00003B                     ??_parseMultiBitToSingleBit:
   692  00003B                     ??_decodeManchester:
   693                           
   694                           ; 0 bytes @ 0x2
   695  00003B                     	ds	2
   696  00003D                     parseMultiBitToSingleBit@i:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x4
   700  00003D                     	ds	2
   701  00003F                     parseMultiBitToSingleBit@resultArray_index:
   702                           	opt stack 0
   703  00003F                     decodeManchester@finalArray_index:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x6
   707  00003F                     	ds	2
   708  000041                     parseMultiBitToSingleBit@lastVal:
   709                           	opt stack 0
   710  000041                     decodeManchester@i:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x8
   714  000041                     	ds	2
   715  000043                     parseMultiBitToSingleBit@inARow:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0xA
   719  000043                     	ds	2
   720  000045                     ??_collectManch:
   721                           
   722                           ; 0 bytes @ 0xC
   723  000045                     	ds	1
   724  000046                     ??_ISR:
   725                           
   726                           ; 0 bytes @ 0xD
   727  000046                     	ds	14
   728                           tblptru	equ	0xFF8
   729                           tblptrh	equ	0xFF7
   730                           tblptrl	equ	0xFF6
   731                           tablat	equ	0xFF5
   732                           postinc0	equ	0xFEE
   733                           wreg	equ	0xFE8
   734                           postdec1	equ	0xFE5
   735                           fsr1h	equ	0xFE2
   736                           fsr1l	equ	0xFE1
   737                           
   738 ;;
   739 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   740 ;;
   741 ;; *************** function _main *****************
   742 ;; Defined at:
   743 ;;		line 14 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  2   76[None  ] int 
   750 ;; Registers used:
   751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels required when called:    5
   763 ;; This function calls:
   764 ;;		_CANSetup
   765 ;;		_Delay
   766 ;;		_ECAN_Receive
   767 ;;		_ECAN_Transmit
   768 ;;		_I2CSetup
   769 ;;		_InitDevice
   770 ;;		_setup_Interrupt
   771 ;;		_zipCAN
   772 ;; This function is called by:
   773 ;;		Startup code after reset
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text0
   778  00174E                     __ptext0:
   779                           	opt stack 0
   780  00174E                     _main:
   781                           	opt stack 26
   782                           
   783                           ;main.c: 16: InitDevice();
   784                           
   785                           ;incstack = 0
   786  00174E  EC03  F00B         	call	_InitDevice	;wreg free
   787                           
   788                           ;main.c: 17: setup_Interrupt();
   789  001752  EC08  F00C         	call	_setup_Interrupt	;wreg free
   790                           
   791                           ;main.c: 18: CANSetup();
   792  001756  ECDB  F008         	call	_CANSetup	;wreg free
   793                           
   794                           ;main.c: 19: I2CSetup();
   795  00175A  EC42  F00B         	call	_I2CSetup	;wreg free
   796                           
   797                           ;main.c: 21: heartBeatCounter = 0;
   798  00175E  0E00               	movlw	0
   799  001760  0100               	movlb	0	; () banked
   800  001762  6F72               	movwf	(_heartBeatCounter+1)& (0+255),b
   801  001764  0E00               	movlw	0
   802  001766  6F71               	movwf	_heartBeatCounter& (0+255),b
   803                           
   804                           ; BSR set to: 0
   805                           ;main.c: 22: FIRST_SEND = 1;
   806  001768  0E00               	movlw	0
   807  00176A  0100               	movlb	0	; () banked
   808  00176C  6F6C               	movwf	(_FIRST_SEND+1)& (0+255),b
   809  00176E  0E01               	movlw	1
   810  001770  6F6B               	movwf	_FIRST_SEND& (0+255),b
   811                           
   812                           ; BSR set to: 0
   813                           ;main.c: 23: I2C_FLAG = 0;
   814  001772  0E00               	movlw	0
   815  001774  6E12               	movwf	_I2C_FLAG+1,c
   816  001776  0E00               	movlw	0
   817  001778  6E11               	movwf	_I2C_FLAG,c
   818                           
   819                           ; BSR set to: 0
   820                           ;main.c: 25: LATAbits.LATA7 = 1;
   821  00177A  8E89               	bsf	3977,7,c	;volatile
   822                           
   823                           ; BSR set to: 0
   824                           ;main.c: 26: LATCbits.LATC6 = 0;
   825  00177C  9C8B               	bcf	3979,6,c	;volatile
   826                           
   827                           ; BSR set to: 0
   828                           ;main.c: 27: LATCbits.LATC7 = 0;
   829  00177E  9E8B               	bcf	3979,7,c	;volatile
   830  001780                     l2901:
   831                           
   832                           ;main.c: 35: Delay(1);
   833  001780  0E00               	movlw	0
   834  001782  0100               	movlb	0	; () banked
   835  001784  6F61               	movwf	(Delay@count+1)& (0+255),b
   836  001786  0E01               	movlw	1
   837  001788  6F60               	movwf	Delay@count& (0+255),b
   838  00178A  ECFC  F00B         	call	_Delay	;wreg free
   839  00178E  D7F8               	goto	l2901
   840  001790                     __end_of_main:
   841                           	opt stack 0
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           postdec1	equ	0xFE5
   849                           fsr1h	equ	0xFE2
   850                           fsr1l	equ	0xFE1
   851                           
   852 ;; *************** function _zipCAN *****************
   853 ;; Defined at:
   854 ;;		line 337 in file "ECAN.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;		None               void
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   870 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   872 ;;Total ram usage:        2 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    4
   875 ;; This function calls:
   876 ;;		_setBit
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text1
   883  000F10                     __ptext1:
   884                           	opt stack 0
   885  000F10                     _zipCAN:
   886                           	opt stack 26
   887                           
   888                           ;ECAN.c: 338: if(i2c_reg_map[8] == 1){
   889                           
   890                           ;incstack = 0
   891  000F10  0409               	decf	_i2c_reg_map+8,w,c	;volatile
   892  000F12  A4D8               	btfss	status,2,c
   893  000F14  D00B               	goto	l2819
   894                           
   895                           ;ECAN.c: 339: setBit(0, i2c_reg_map[8]);
   896  000F16  0E00               	movlw	0
   897  000F18  0100               	movlb	0	; () banked
   898  000F1A  6F61               	movwf	(setBit@shift+1)& (0+255),b
   899  000F1C  0E00               	movlw	0
   900  000F1E  6F60               	movwf	setBit@shift& (0+255),b
   901  000F20  C009  F062         	movff	_i2c_reg_map+8,setBit@value	;volatile
   902  000F24  0100               	movlb	0	; () banked
   903  000F26  6B63               	clrf	(setBit@value+1)& (0+255),b
   904  000F28  ECE9  F00B         	call	_setBit	;wreg free
   905  000F2C                     l2819:
   906                           
   907                           ;ECAN.c: 340: }
   908                           ;ECAN.c: 341: if(i2c_reg_map[9] != MAP_BRAKE){
   909  000F2C  500A               	movf	_i2c_reg_map+9,w,c	;volatile
   910  000F2E  0100               	movlb	0	; () banked
   911  000F30  6F66               	movwf	??_zipCAN& (0+255),b
   912  000F32  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   913  000F34  5015               	movf	_MAP_BRAKE,w,c
   914  000F36  0100               	movlb	0	; () banked
   915  000F38  1966               	xorwf	??_zipCAN& (0+255),w,b
   916  000F3A  E105               	bnz	u2040
   917  000F3C  5016               	movf	_MAP_BRAKE+1,w,c
   918  000F3E  0100               	movlb	0	; () banked
   919  000F40  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   920  000F42  B4D8               	btfsc	status,2,c
   921  000F44  D00E               	goto	l2825
   922  000F46                     u2040:
   923                           
   924                           ; BSR set to: 0
   925                           ;ECAN.c: 342: setBit(1, i2c_reg_map[9]);
   926  000F46  0E00               	movlw	0
   927  000F48  0100               	movlb	0	; () banked
   928  000F4A  6F61               	movwf	(setBit@shift+1)& (0+255),b
   929  000F4C  0E01               	movlw	1
   930  000F4E  6F60               	movwf	setBit@shift& (0+255),b
   931  000F50  C00A  F062         	movff	_i2c_reg_map+9,setBit@value	;volatile
   932  000F54  0100               	movlb	0	; () banked
   933  000F56  6B63               	clrf	(setBit@value+1)& (0+255),b
   934  000F58  ECE9  F00B         	call	_setBit	;wreg free
   935                           
   936                           ;ECAN.c: 343: MAP_BRAKE = i2c_reg_map[9];
   937  000F5C  C00A  F015         	movff	_i2c_reg_map+9,_MAP_BRAKE	;volatile
   938  000F60  6A16               	clrf	_MAP_BRAKE+1,c
   939  000F62                     l2825:
   940                           
   941                           ;ECAN.c: 344: }
   942                           ;ECAN.c: 345: if(i2c_reg_map[10] != MAP_BACKLIGHT){
   943  000F62  500B               	movf	_i2c_reg_map+10,w,c	;volatile
   944  000F64  0100               	movlb	0	; () banked
   945  000F66  6F66               	movwf	??_zipCAN& (0+255),b
   946  000F68  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   947  000F6A  5013               	movf	_MAP_BACKLIGHT,w,c
   948  000F6C  0100               	movlb	0	; () banked
   949  000F6E  1966               	xorwf	??_zipCAN& (0+255),w,b
   950  000F70  E105               	bnz	u2050
   951  000F72  5014               	movf	_MAP_BACKLIGHT+1,w,c
   952  000F74  0100               	movlb	0	; () banked
   953  000F76  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   954  000F78  B4D8               	btfsc	status,2,c
   955  000F7A  D00E               	goto	l2831
   956  000F7C                     u2050:
   957                           
   958                           ; BSR set to: 0
   959                           ;ECAN.c: 346: setBit(2, i2c_reg_map[10]);
   960  000F7C  0E00               	movlw	0
   961  000F7E  0100               	movlb	0	; () banked
   962  000F80  6F61               	movwf	(setBit@shift+1)& (0+255),b
   963  000F82  0E02               	movlw	2
   964  000F84  6F60               	movwf	setBit@shift& (0+255),b
   965  000F86  C00B  F062         	movff	_i2c_reg_map+10,setBit@value	;volatile
   966  000F8A  0100               	movlb	0	; () banked
   967  000F8C  6B63               	clrf	(setBit@value+1)& (0+255),b
   968  000F8E  ECE9  F00B         	call	_setBit	;wreg free
   969                           
   970                           ;ECAN.c: 347: MAP_BACKLIGHT = i2c_reg_map[10];
   971  000F92  C00B  F013         	movff	_i2c_reg_map+10,_MAP_BACKLIGHT	;volatile
   972  000F96  6A14               	clrf	_MAP_BACKLIGHT+1,c
   973  000F98                     l2831:
   974                           
   975                           ;ECAN.c: 348: }
   976                           ;ECAN.c: 349: if(i2c_reg_map[11] != MAP_V_BLINK){
   977  000F98  500C               	movf	_i2c_reg_map+11,w,c	;volatile
   978  000F9A  0100               	movlb	0	; () banked
   979  000F9C  6F66               	movwf	??_zipCAN& (0+255),b
   980  000F9E  6B67               	clrf	(??_zipCAN+1)& (0+255),b
   981  000FA0  501D               	movf	_MAP_V_BLINK,w,c
   982  000FA2  0100               	movlb	0	; () banked
   983  000FA4  1966               	xorwf	??_zipCAN& (0+255),w,b
   984  000FA6  E105               	bnz	u2060
   985  000FA8  501E               	movf	_MAP_V_BLINK+1,w,c
   986  000FAA  0100               	movlb	0	; () banked
   987  000FAC  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
   988  000FAE  B4D8               	btfsc	status,2,c
   989  000FB0  D00E               	goto	l2837
   990  000FB2                     u2060:
   991                           
   992                           ; BSR set to: 0
   993                           ;ECAN.c: 350: setBit(3, i2c_reg_map[11]);
   994  000FB2  0E00               	movlw	0
   995  000FB4  0100               	movlb	0	; () banked
   996  000FB6  6F61               	movwf	(setBit@shift+1)& (0+255),b
   997  000FB8  0E03               	movlw	3
   998  000FBA  6F60               	movwf	setBit@shift& (0+255),b
   999  000FBC  C00C  F062         	movff	_i2c_reg_map+11,setBit@value	;volatile
  1000  000FC0  0100               	movlb	0	; () banked
  1001  000FC2  6B63               	clrf	(setBit@value+1)& (0+255),b
  1002  000FC4  ECE9  F00B         	call	_setBit	;wreg free
  1003                           
  1004                           ;ECAN.c: 351: MAP_V_BLINK = i2c_reg_map[11];
  1005  000FC8  C00C  F01D         	movff	_i2c_reg_map+11,_MAP_V_BLINK	;volatile
  1006  000FCC  6A1E               	clrf	_MAP_V_BLINK+1,c
  1007  000FCE                     l2837:
  1008                           
  1009                           ;ECAN.c: 352: }
  1010                           ;ECAN.c: 353: if(i2c_reg_map[12] != MAP_H_BLINK){
  1011  000FCE  500D               	movf	_i2c_reg_map+12,w,c	;volatile
  1012  000FD0  0100               	movlb	0	; () banked
  1013  000FD2  6F66               	movwf	??_zipCAN& (0+255),b
  1014  000FD4  6B67               	clrf	(??_zipCAN+1)& (0+255),b
  1015  000FD6  5019               	movf	_MAP_H_BLINK,w,c
  1016  000FD8  0100               	movlb	0	; () banked
  1017  000FDA  1966               	xorwf	??_zipCAN& (0+255),w,b
  1018  000FDC  E105               	bnz	u2070
  1019  000FDE  501A               	movf	_MAP_H_BLINK+1,w,c
  1020  000FE0  0100               	movlb	0	; () banked
  1021  000FE2  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
  1022  000FE4  B4D8               	btfsc	status,2,c
  1023  000FE6  D00E               	goto	l2843
  1024  000FE8                     u2070:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;ECAN.c: 354: setBit(4, i2c_reg_map[12]);
  1028  000FE8  0E00               	movlw	0
  1029  000FEA  0100               	movlb	0	; () banked
  1030  000FEC  6F61               	movwf	(setBit@shift+1)& (0+255),b
  1031  000FEE  0E04               	movlw	4
  1032  000FF0  6F60               	movwf	setBit@shift& (0+255),b
  1033  000FF2  C00D  F062         	movff	_i2c_reg_map+12,setBit@value	;volatile
  1034  000FF6  0100               	movlb	0	; () banked
  1035  000FF8  6B63               	clrf	(setBit@value+1)& (0+255),b
  1036  000FFA  ECE9  F00B         	call	_setBit	;wreg free
  1037                           
  1038                           ;ECAN.c: 355: MAP_H_BLINK = i2c_reg_map[12];
  1039  000FFE  C00D  F019         	movff	_i2c_reg_map+12,_MAP_H_BLINK	;volatile
  1040  001002  6A1A               	clrf	_MAP_H_BLINK+1,c
  1041  001004                     l2843:
  1042                           
  1043                           ;ECAN.c: 356: }
  1044                           ;ECAN.c: 357: if(i2c_reg_map[13] != MAP_DIRECTION){
  1045  001004  500E               	movf	_i2c_reg_map+13,w,c	;volatile
  1046  001006  0100               	movlb	0	; () banked
  1047  001008  6F66               	movwf	??_zipCAN& (0+255),b
  1048  00100A  6B67               	clrf	(??_zipCAN+1)& (0+255),b
  1049  00100C  5017               	movf	_MAP_DIRECTION,w,c
  1050  00100E  0100               	movlb	0	; () banked
  1051  001010  1966               	xorwf	??_zipCAN& (0+255),w,b
  1052  001012  E105               	bnz	u2080
  1053  001014  5018               	movf	_MAP_DIRECTION+1,w,c
  1054  001016  0100               	movlb	0	; () banked
  1055  001018  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
  1056  00101A  B4D8               	btfsc	status,2,c
  1057  00101C  D00E               	goto	l2849
  1058  00101E                     u2080:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;ECAN.c: 358: setBit(5, i2c_reg_map[13]);
  1062  00101E  0E00               	movlw	0
  1063  001020  0100               	movlb	0	; () banked
  1064  001022  6F61               	movwf	(setBit@shift+1)& (0+255),b
  1065  001024  0E05               	movlw	5
  1066  001026  6F60               	movwf	setBit@shift& (0+255),b
  1067  001028  C00E  F062         	movff	_i2c_reg_map+13,setBit@value	;volatile
  1068  00102C  0100               	movlb	0	; () banked
  1069  00102E  6B63               	clrf	(setBit@value+1)& (0+255),b
  1070  001030  ECE9  F00B         	call	_setBit	;wreg free
  1071                           
  1072                           ;ECAN.c: 359: MAP_DIRECTION = i2c_reg_map[13];
  1073  001034  C00E  F017         	movff	_i2c_reg_map+13,_MAP_DIRECTION	;volatile
  1074  001038  6A18               	clrf	_MAP_DIRECTION+1,c
  1075  00103A                     l2849:
  1076                           
  1077                           ;ECAN.c: 360: }
  1078                           ;ECAN.c: 361: if(i2c_reg_map[14] != MAP_SAFETYPIN){
  1079  00103A  500F               	movf	_i2c_reg_map+14,w,c	;volatile
  1080  00103C  0100               	movlb	0	; () banked
  1081  00103E  6F66               	movwf	??_zipCAN& (0+255),b
  1082  001040  6B67               	clrf	(??_zipCAN+1)& (0+255),b
  1083  001042  501B               	movf	_MAP_SAFETYPIN,w,c
  1084  001044  0100               	movlb	0	; () banked
  1085  001046  1966               	xorwf	??_zipCAN& (0+255),w,b
  1086  001048  E105               	bnz	u2090
  1087  00104A  501C               	movf	_MAP_SAFETYPIN+1,w,c
  1088  00104C  0100               	movlb	0	; () banked
  1089  00104E  1967               	xorwf	(??_zipCAN+1)& (0+255),w,b
  1090  001050  B4D8               	btfsc	status,2,c
  1091  001052  0012               	return	
  1092  001054                     u2090:
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;ECAN.c: 362: setBit(6, i2c_reg_map[14]);
  1096  001054  0E00               	movlw	0
  1097  001056  0100               	movlb	0	; () banked
  1098  001058  6F61               	movwf	(setBit@shift+1)& (0+255),b
  1099  00105A  0E06               	movlw	6
  1100  00105C  6F60               	movwf	setBit@shift& (0+255),b
  1101  00105E  C00F  F062         	movff	_i2c_reg_map+14,setBit@value	;volatile
  1102  001062  0100               	movlb	0	; () banked
  1103  001064  6B63               	clrf	(setBit@value+1)& (0+255),b
  1104  001066  ECE9  F00B         	call	_setBit	;wreg free
  1105                           
  1106                           ;ECAN.c: 363: MAP_SAFETYPIN = i2c_reg_map[14];
  1107  00106A  C00F  F01B         	movff	_i2c_reg_map+14,_MAP_SAFETYPIN	;volatile
  1108  00106E  6A1C               	clrf	_MAP_SAFETYPIN+1,c
  1109  001070  0012               	return	
  1110  001072                     __end_of_zipCAN:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           postdec1	equ	0xFE5
  1119                           fsr1h	equ	0xFE2
  1120                           fsr1l	equ	0xFE1
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _setBit *****************
  1124 ;; Defined at:
  1125 ;;		line 367 in file "ECAN.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  shift           2    0[BANK0 ] int 
  1128 ;;  value           2    2[BANK0 ] int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1142 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1143 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1144 ;;Total ram usage:        6 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    3
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_zipCAN
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text2
  1155  0017D2                     __ptext2:
  1156                           	opt stack 0
  1157  0017D2                     _setBit:
  1158                           	opt stack 26
  1159                           
  1160                           ;ECAN.c: 368: MAP_BITDATA = MAP_BITDATA ^ (1 << shift);
  1161                           
  1162                           ;incstack = 0
  1163  0017D2  C060  F064         	movff	setBit@shift,??_setBit
  1164  0017D6  0E01               	movlw	1
  1165  0017D8  0100               	movlb	0	; () banked
  1166  0017DA  6F65               	movwf	(??_setBit+1)& (0+255),b
  1167  0017DC  0100               	movlb	0	; () banked
  1168  0017DE  2B64               	incf	??_setBit& (0+255),f,b
  1169  0017E0  D003               	goto	u1904
  1170  0017E2                     u1905:
  1171  0017E2  0100               	movlb	0	; () banked
  1172  0017E4  90D8               	bcf	status,0,c
  1173  0017E6  3765               	rlcf	(??_setBit+1)& (0+255),f,b
  1174  0017E8                     u1904:
  1175  0017E8  0100               	movlb	0	; () banked
  1176  0017EA  2F64               	decfsz	??_setBit& (0+255),f,b
  1177  0017EC  D7FA               	goto	u1905
  1178  0017EE  0100               	movlb	0	; () banked
  1179  0017F0  5165               	movf	(??_setBit+1)& (0+255),w,b
  1180  0017F2  1827               	xorwf	_MAP_BITDATA,w,c
  1181  0017F4  6E27               	movwf	_MAP_BITDATA,c
  1182                           
  1183                           ; BSR set to: 0
  1184  0017F6  0012               	return		;funcret
  1185  0017F8                     __end_of_setBit:
  1186                           	opt stack 0
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           postdec1	equ	0xFE5
  1194                           fsr1h	equ	0xFE2
  1195                           fsr1l	equ	0xFE1
  1196                           status	equ	0xFD8
  1197                           
  1198 ;; *************** function _setup_Interrupt *****************
  1199 ;; Defined at:
  1200 ;;		line 61 in file "init.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2    4[None  ] int 
  1207 ;; Registers used:
  1208 ;;		None
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    3
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text3
  1229  001810                     __ptext3:
  1230                           	opt stack 0
  1231  001810                     _setup_Interrupt:
  1232                           	opt stack 27
  1233                           
  1234                           ;init.c: 62: RCONbits.IPEN = 1;
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;incstack = 0
  1238  001810  8ED0               	bsf	4048,7,c	;volatile
  1239                           
  1240                           ;init.c: 63: INTCONbits.GIEH = 1;
  1241  001812  8EF2               	bsf	intcon,7,c	;volatile
  1242                           
  1243                           ;init.c: 64: INTCONbits.GIEL = 1;
  1244  001814  8CF2               	bsf	intcon,6,c	;volatile
  1245                           
  1246                           ;init.c: 65: INTCONbits.TMR0IE = 1;
  1247  001816  8AF2               	bsf	intcon,5,c	;volatile
  1248  001818  0012               	return		;funcret
  1249  00181A                     __end_of_setup_Interrupt:
  1250                           	opt stack 0
  1251                           tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           intcon	equ	0xFF2
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1h	equ	0xFE2
  1260                           fsr1l	equ	0xFE1
  1261                           status	equ	0xFD8
  1262                           
  1263 ;; *************** function _InitDevice *****************
  1264 ;; Defined at:
  1265 ;;		line 9 in file "init.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;		None               void
  1272 ;; Registers used:
  1273 ;;		wreg, status,2
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1283 ;;Total ram usage:        0 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    3
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text4
  1294  001606                     __ptext4:
  1295                           	opt stack 0
  1296  001606                     _InitDevice:
  1297                           	opt stack 27
  1298                           
  1299                           ;init.c: 11: Interrupt_counter = 0;
  1300                           
  1301                           ;incstack = 0
  1302  001606  0E00               	movlw	0
  1303  001608  0100               	movlb	0	; () banked
  1304  00160A  6F6E               	movwf	(_Interrupt_counter+1)& (0+255),b
  1305  00160C  0E00               	movlw	0
  1306  00160E  6F6D               	movwf	_Interrupt_counter& (0+255),b
  1307                           
  1308                           ;init.c: 14: OSCCON = 0x60;
  1309  001610  0E60               	movlw	96
  1310  001612  6ED3               	movwf	4051,c	;volatile
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;init.c: 15: OSCCONbits.IRCF = 7;
  1314  001614  88D3               	bsf	4051,4,c	;volatile
  1315  001616  8AD3               	bsf	4051,5,c	;volatile
  1316  001618  8CD3               	bsf	4051,6,c	;volatile
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  1320  00161A  8C9B               	bsf	3995,6,c	;volatile
  1321                           
  1322                           ;init.c: 19: heartbeatCount = 0;
  1323  00161C  0E00               	movlw	0
  1324  00161E  0100               	movlb	0	; () banked
  1325  001620  6F74               	movwf	(_heartbeatCount+1)& (0+255),b
  1326  001622  0E00               	movlw	0
  1327  001624  6F73               	movwf	_heartbeatCount& (0+255),b
  1328                           
  1329                           ;init.c: 20: buttonWasPressed = 0;
  1330  001626  0E00               	movlw	0
  1331  001628  6E2A               	movwf	_buttonWasPressed,c
  1332                           
  1333                           ;init.c: 23: ANCON0 = ANCON1 = 0x00;
  1334  00162A  0E00               	movlw	0
  1335  00162C  010F               	movlb	15	; () banked
  1336  00162E  6F5C               	movwf	92,b	;volatile
  1337  001630  CF5C FF5D          	movff	3932,3933	;volatile
  1338                           
  1339                           ; BSR set to: 15
  1340                           ;init.c: 24: TRISB = 0xFF;
  1341  001634  6893               	setf	3987,c	;volatile
  1342                           
  1343                           ;init.c: 27: TRISA = 0b01111111;
  1344  001636  0E7F               	movlw	127
  1345  001638  6E92               	movwf	3986,c	;volatile
  1346                           
  1347                           ; BSR set to: 15
  1348                           ;init.c: 28: LATAbits.LATA7 = 0;
  1349  00163A  9E89               	bcf	3977,7,c	;volatile
  1350                           
  1351                           ;init.c: 31: TRISC = 0b00011000;
  1352  00163C  0E18               	movlw	24
  1353  00163E  6E94               	movwf	3988,c	;volatile
  1354                           
  1355                           ; BSR set to: 15
  1356                           ;init.c: 32: LATCbits.LATC6 = 0;
  1357  001640  9C8B               	bcf	3979,6,c	;volatile
  1358                           
  1359                           ; BSR set to: 15
  1360                           ;init.c: 33: LATCbits.LATC7 = 0;
  1361  001642  9E8B               	bcf	3979,7,c	;volatile
  1362                           
  1363                           ; BSR set to: 15
  1364                           ;init.c: 39: T0CONbits.TMR0ON = 1;
  1365  001644  8ED5               	bsf	4053,7,c	;volatile
  1366                           
  1367                           ; BSR set to: 15
  1368                           ;init.c: 40: T0CONbits.T08BIT = 0;
  1369  001646  9CD5               	bcf	4053,6,c	;volatile
  1370                           
  1371                           ; BSR set to: 15
  1372                           ;init.c: 41: T0CONbits.T0CS = 0;
  1373  001648  9AD5               	bcf	4053,5,c	;volatile
  1374                           
  1375                           ; BSR set to: 15
  1376                           ;init.c: 43: T0CONbits.PSA = 0;
  1377  00164A  96D5               	bcf	4053,3,c	;volatile
  1378                           
  1379                           ; BSR set to: 15
  1380                           ;init.c: 44: T0CONbits.T0PS = 7;
  1381  00164C  80D5               	bsf	4053,0,c	;volatile
  1382  00164E  82D5               	bsf	4053,1,c	;volatile
  1383  001650  84D5               	bsf	4053,2,c	;volatile
  1384                           
  1385                           ;init.c: 51: MAP_BRAKE = 0;
  1386  001652  0E00               	movlw	0
  1387  001654  6E16               	movwf	_MAP_BRAKE+1,c
  1388  001656  0E00               	movlw	0
  1389  001658  6E15               	movwf	_MAP_BRAKE,c
  1390                           
  1391                           ;init.c: 52: MAP_BACKLIGHT = 0;
  1392  00165A  0E00               	movlw	0
  1393  00165C  6E14               	movwf	_MAP_BACKLIGHT+1,c
  1394  00165E  0E00               	movlw	0
  1395  001660  6E13               	movwf	_MAP_BACKLIGHT,c
  1396                           
  1397                           ;init.c: 53: MAP_V_BLINK = 0;
  1398  001662  0E00               	movlw	0
  1399  001664  6E1E               	movwf	_MAP_V_BLINK+1,c
  1400  001666  0E00               	movlw	0
  1401  001668  6E1D               	movwf	_MAP_V_BLINK,c
  1402                           
  1403                           ;init.c: 54: MAP_H_BLINK = 0;
  1404  00166A  0E00               	movlw	0
  1405  00166C  6E1A               	movwf	_MAP_H_BLINK+1,c
  1406  00166E  0E00               	movlw	0
  1407  001670  6E19               	movwf	_MAP_H_BLINK,c
  1408                           
  1409                           ;init.c: 55: MAP_DIRECTION = 0;
  1410  001672  0E00               	movlw	0
  1411  001674  6E18               	movwf	_MAP_DIRECTION+1,c
  1412  001676  0E00               	movlw	0
  1413  001678  6E17               	movwf	_MAP_DIRECTION,c
  1414                           
  1415                           ;init.c: 56: MAP_SAFETYPIN = 0;
  1416  00167A  0E00               	movlw	0
  1417  00167C  6E1C               	movwf	_MAP_SAFETYPIN+1,c
  1418  00167E  0E00               	movlw	0
  1419  001680  6E1B               	movwf	_MAP_SAFETYPIN,c
  1420                           
  1421                           ; BSR set to: 15
  1422  001682  0012               	return		;funcret
  1423  001684                     __end_of_InitDevice:
  1424                           	opt stack 0
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           intcon	equ	0xFF2
  1430                           postinc0	equ	0xFEE
  1431                           wreg	equ	0xFE8
  1432                           postdec1	equ	0xFE5
  1433                           fsr1h	equ	0xFE2
  1434                           fsr1l	equ	0xFE1
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _I2CSetup *****************
  1438 ;; Defined at:
  1439 ;;		line 10 in file "I2C.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  i               2    0[BANK0 ] int 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;		None               void
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;Total ram usage:        2 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    3
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text5
  1468  001684                     __ptext5:
  1469                           	opt stack 0
  1470  001684                     _I2CSetup:
  1471                           	opt stack 27
  1472                           
  1473                           ;I2C.c: 12: SSPADD = 0x55;
  1474                           
  1475                           ; BSR set to: 15
  1476                           ;incstack = 0
  1477  001684  0E55               	movlw	85
  1478  001686  6EC8               	movwf	4040,c	;volatile
  1479                           
  1480                           ;I2C.c: 13: SSPCON1 = 0x36;
  1481  001688  0E36               	movlw	54
  1482  00168A  6EC6               	movwf	4038,c	;volatile
  1483                           
  1484                           ;I2C.c: 16: SSPSTAT = 0x00;
  1485  00168C  0E00               	movlw	0
  1486  00168E  6EC7               	movwf	4039,c	;volatile
  1487                           
  1488                           ;I2C.c: 17: SSPCON2 = 0x01;
  1489  001690  0E01               	movlw	1
  1490  001692  6EC5               	movwf	4037,c	;volatile
  1491                           
  1492                           ;I2C.c: 19: PIR1bits.SSPIF = 0;
  1493  001694  969E               	bcf	3998,3,c	;volatile
  1494                           
  1495                           ;I2C.c: 20: PIE1bits.SSPIE = 1;
  1496  001696  869D               	bsf	3997,3,c	;volatile
  1497                           
  1498                           ;I2C.c: 21: INTCONbits.GIE_GIEH = 1;
  1499  001698  8EF2               	bsf	intcon,7,c	;volatile
  1500                           
  1501                           ;I2C.c: 22: INTCONbits.PEIE_GIEL = 1;
  1502  00169A  8CF2               	bsf	intcon,6,c	;volatile
  1503                           
  1504                           ;I2C.c: 25: for(int i = 0; i<16; i++){
  1505  00169C  0E00               	movlw	0
  1506  00169E  0100               	movlb	0	; () banked
  1507  0016A0  6F61               	movwf	(I2CSetup@i+1)& (0+255),b
  1508  0016A2  0E00               	movlw	0
  1509  0016A4  6F60               	movwf	I2CSetup@i& (0+255),b
  1510  0016A6                     l2765:
  1511                           
  1512                           ; BSR set to: 0
  1513  0016A6  0100               	movlb	0	; () banked
  1514  0016A8  BF61               	btfsc	(I2CSetup@i+1)& (0+255),7,b
  1515  0016AA  D008               	goto	l2769
  1516  0016AC  0100               	movlb	0	; () banked
  1517  0016AE  5161               	movf	(I2CSetup@i+1)& (0+255),w,b
  1518  0016B0  E113               	bnz	l2775
  1519  0016B2  0E10               	movlw	16
  1520  0016B4  0100               	movlb	0	; () banked
  1521  0016B6  5D60               	subwf	I2CSetup@i& (0+255),w,b
  1522  0016B8  B0D8               	btfsc	status,0,c
  1523  0016BA  D00E               	goto	l2775
  1524  0016BC                     l2769:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;I2C.c: 26: i2c_reg_map[i] = 0;
  1528  0016BC  0E01               	movlw	low _i2c_reg_map
  1529  0016BE  0100               	movlb	0	; () banked
  1530  0016C0  2560               	addwf	I2CSetup@i& (0+255),w,b
  1531  0016C2  6ED9               	movwf	fsr2l,c
  1532  0016C4  0E00               	movlw	high _i2c_reg_map
  1533  0016C6  0100               	movlb	0	; () banked
  1534  0016C8  2161               	addwfc	(I2CSetup@i+1)& (0+255),w,b
  1535  0016CA  6EDA               	movwf	fsr2h,c
  1536  0016CC  0E00               	movlw	0
  1537  0016CE  6EDF               	movwf	indf2,c
  1538                           
  1539                           ; BSR set to: 0
  1540  0016D0  0100               	movlb	0	; () banked
  1541  0016D2  4B60               	infsnz	I2CSetup@i& (0+255),f,b
  1542  0016D4  2B61               	incf	(I2CSetup@i+1)& (0+255),f,b
  1543  0016D6  D7E7               	goto	l2765
  1544  0016D8                     l2775:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;I2C.c: 27: }
  1548                           ;I2C.c: 30: i2c_reg_map[8] = 1;
  1549  0016D8  0E01               	movlw	1
  1550  0016DA  6E09               	movwf	_i2c_reg_map+8,c	;volatile
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;I2C.c: 31: i2c_reg_map[temp_D2] = 1;
  1554  0016DC  502E               	movf	_temp_D2,w,c
  1555  0016DE  0D01               	mullw	1
  1556  0016E0  0E01               	movlw	low _i2c_reg_map
  1557  0016E2  24F3               	addwf	prodl,w,c
  1558  0016E4  6ED9               	movwf	fsr2l,c
  1559  0016E6  0E00               	movlw	high _i2c_reg_map
  1560  0016E8  20F4               	addwfc	prodh,w,c
  1561  0016EA  6EDA               	movwf	fsr2h,c
  1562  0016EC  0E01               	movlw	1
  1563  0016EE  6EDF               	movwf	indf2,c
  1564                           
  1565                           ; BSR set to: 0
  1566  0016F0  0012               	return		;funcret
  1567  0016F2                     __end_of_I2CSetup:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           prodh	equ	0xFF4
  1574                           prodl	equ	0xFF3
  1575                           intcon	equ	0xFF2
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           postdec1	equ	0xFE5
  1579                           fsr1h	equ	0xFE2
  1580                           fsr1l	equ	0xFE1
  1581                           indf2	equ	0xFDF
  1582                           fsr2h	equ	0xFDA
  1583                           fsr2l	equ	0xFD9
  1584                           status	equ	0xFD8
  1585                           
  1586 ;; *************** function _ECAN_Transmit *****************
  1587 ;; Defined at:
  1588 ;;		line 296 in file "ECAN.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  SIDH            1    wreg     unsigned char 
  1591 ;;  SIDL            1    0[BANK0 ] unsigned char 
  1592 ;;  DLC             1    1[BANK0 ] unsigned char 
  1593 ;;  TRANSMIT_ID     1    2[BANK0 ] unsigned char 
  1594 ;;  DATA1           1    3[BANK0 ] unsigned char 
  1595 ;;  DATA2           1    4[BANK0 ] unsigned char 
  1596 ;;  DATA3           1    5[BANK0 ] unsigned char 
  1597 ;;  DATA4           1    6[BANK0 ] unsigned char 
  1598 ;;  DATA5           1    7[BANK0 ] unsigned char 
  1599 ;;  DATA6           1    8[BANK0 ] unsigned char 
  1600 ;;  DATA7           1    9[BANK0 ] unsigned char 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  SIDH            1   10[BANK0 ] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;		None               void
  1605 ;; Registers used:
  1606 ;;		wreg, status,2
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1612 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1616 ;;Total ram usage:       11 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    3
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text6
  1627  001790                     __ptext6:
  1628                           	opt stack 0
  1629  001790                     _ECAN_Transmit:
  1630                           	opt stack 27
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;incstack = 0
  1634                           ;ECAN_Transmit@SIDH stored from wreg
  1635  001790  0100               	movlb	0	; () banked
  1636  001792  6F6A               	movwf	ECAN_Transmit@SIDH& (0+255),b
  1637                           
  1638                           ;ECAN.c: 308: TXB0EIDH = 0x00;
  1639  001794  0E00               	movlw	0
  1640  001796  010F               	movlb	15	; () banked
  1641  001798  6F23               	movwf	35,b	;volatile
  1642                           
  1643                           ;ECAN.c: 309: TXB0EIDL = 0x00;
  1644  00179A  0E00               	movlw	0
  1645  00179C  010F               	movlb	15	; () banked
  1646  00179E  6F24               	movwf	36,b	;volatile
  1647                           
  1648                           ; BSR set to: 15
  1649                           ;ECAN.c: 312: TXB0SIDH = SIDH;
  1650  0017A0  C06A  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  1651                           
  1652                           ; BSR set to: 15
  1653                           ;ECAN.c: 313: TXB0SIDL = SIDL;
  1654  0017A4  C060  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  1655                           
  1656                           ; BSR set to: 15
  1657                           ;ECAN.c: 314: TXB0DLC = DLC;
  1658  0017A8  C061  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  1659                           
  1660                           ; BSR set to: 15
  1661                           ;ECAN.c: 323: TXB0D0 = TRANSMIT_ID;
  1662  0017AC  C062  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  1663                           
  1664                           ; BSR set to: 15
  1665                           ;ECAN.c: 324: TXB0D1 = DATA1;
  1666  0017B0  C063  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  1667                           
  1668                           ; BSR set to: 15
  1669                           ;ECAN.c: 325: TXB0D2 = DATA2;
  1670  0017B4  C064  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  1671                           
  1672                           ; BSR set to: 15
  1673                           ;ECAN.c: 326: TXB0D3 = DATA3;
  1674  0017B8  C065  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  1675                           
  1676                           ; BSR set to: 15
  1677                           ;ECAN.c: 327: TXB0D4 = DATA4;
  1678  0017BC  C066  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  1679                           
  1680                           ; BSR set to: 15
  1681                           ;ECAN.c: 328: TXB0D5 = DATA5;
  1682  0017C0  C067  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  1683                           
  1684                           ; BSR set to: 15
  1685                           ;ECAN.c: 329: TXB0D6 = DATA6;
  1686  0017C4  C068  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  1687                           
  1688                           ; BSR set to: 15
  1689                           ;ECAN.c: 330: TXB0D7 = DATA7;
  1690  0017C8  C069  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  1691                           
  1692                           ; BSR set to: 15
  1693                           ;ECAN.c: 332: TXB0CONbits.TXREQ = 1;
  1694  0017CC  010F               	movlb	15	; () banked
  1695  0017CE  8720               	bsf	32,3,b	;volatile
  1696                           
  1697                           ; BSR set to: 15
  1698  0017D0  0012               	return		;funcret
  1699  0017D2                     __end_of_ECAN_Transmit:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           prodh	equ	0xFF4
  1706                           prodl	equ	0xFF3
  1707                           intcon	equ	0xFF2
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           postdec1	equ	0xFE5
  1711                           fsr1h	equ	0xFE2
  1712                           fsr1l	equ	0xFE1
  1713                           indf2	equ	0xFDF
  1714                           fsr2h	equ	0xFDA
  1715                           fsr2l	equ	0xFD9
  1716                           status	equ	0xFD8
  1717                           
  1718 ;; *************** function _ECAN_Receive *****************
  1719 ;; Defined at:
  1720 ;;		line 215 in file "ECAN.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  RXMsgFlag       1    0[BANK0 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      unsigned char 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1738 ;;Total ram usage:        1 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    3
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text7
  1749  0013DC                     __ptext7:
  1750                           	opt stack 0
  1751  0013DC                     _ECAN_Receive:
  1752                           	opt stack 27
  1753                           
  1754                           ;ECAN.c: 217: unsigned char RXMsgFlag;
  1755                           ;ECAN.c: 219: RXMsgFlag = 0x00;
  1756                           
  1757                           ; BSR set to: 15
  1758                           ;incstack = 0
  1759  0013DC  0E00               	movlw	0
  1760  0013DE  0100               	movlb	0	; () banked
  1761  0013E0  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;ECAN.c: 221: if (RXB0CONbits.RXFUL)
  1765  0013E2  AE60               	btfss	3936,7,c	;volatile
  1766  0013E4  D01C               	goto	l377
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;ECAN.c: 222: {
  1770                           ;ECAN.c: 223: temp_EIDH = RXB0EIDH;
  1771  0013E6  CF63 F035          	movff	3939,_temp_EIDH	;volatile
  1772                           
  1773                           ;ECAN.c: 224: temp_EIDL = RXB0EIDL;
  1774  0013EA  CF64 F036          	movff	3940,_temp_EIDL	;volatile
  1775                           
  1776                           ;ECAN.c: 225: temp_SIDH = RXB0SIDH;
  1777  0013EE  CF61 F037          	movff	3937,_temp_SIDH	;volatile
  1778                           
  1779                           ;ECAN.c: 226: temp_SIDL = RXB0SIDL;
  1780  0013F2  CF62 F038          	movff	3938,_temp_SIDL	;volatile
  1781                           
  1782                           ;ECAN.c: 227: temp_DLC = RXB0DLC;
  1783  0013F6  CF65 F034          	movff	3941,_temp_DLC	;volatile
  1784                           
  1785                           ;ECAN.c: 228: MAP_REC_BATTERYSTATUS = RXB0D0;
  1786  0013FA  CF66 F028          	movff	3942,_MAP_REC_BATTERYSTATUS	;volatile
  1787                           
  1788                           ;ECAN.c: 229: MAP_REC_VELOCITY = RXB0D1;
  1789  0013FE  CF67 F029          	movff	3943,_MAP_REC_VELOCITY	;volatile
  1790                           
  1791                           ;ECAN.c: 230: temp_D2 = RXB0D2;
  1792  001402  CF68 F02E          	movff	3944,_temp_D2	;volatile
  1793                           
  1794                           ;ECAN.c: 231: temp_D3 = RXB0D3;
  1795  001406  CF69 F02F          	movff	3945,_temp_D3	;volatile
  1796                           
  1797                           ;ECAN.c: 232: temp_D4 = RXB0D4;
  1798  00140A  CF6A F030          	movff	3946,_temp_D4	;volatile
  1799                           
  1800                           ;ECAN.c: 233: temp_D5 = RXB0D5;
  1801  00140E  CF6B F031          	movff	3947,_temp_D5	;volatile
  1802                           
  1803                           ;ECAN.c: 234: temp_D6 = RXB0D6;
  1804  001412  CF6C F032          	movff	3948,_temp_D6	;volatile
  1805                           
  1806                           ;ECAN.c: 235: temp_D7 = RXB0D7;
  1807  001416  CF6D F033          	movff	3949,_temp_D7	;volatile
  1808                           
  1809                           ;ECAN.c: 236: RXB0CONbits.RXFUL = 0;
  1810  00141A  9E60               	bcf	3936,7,c	;volatile
  1811  00141C  D03F               	goto	l2797
  1812  00141E                     l377:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;ECAN.c: 239: else if (RXB1CONbits.RXFUL)
  1816  00141E  010F               	movlb	15	; () banked
  1817  001420  AF30               	btfss	48,7,b	;volatile
  1818  001422  D01D               	goto	l379
  1819                           
  1820                           ; BSR set to: 15
  1821                           ;ECAN.c: 240: {
  1822                           ;ECAN.c: 241: temp_EIDH = RXB1EIDH;
  1823  001424  CF33 F035          	movff	3891,_temp_EIDH	;volatile
  1824                           
  1825                           ;ECAN.c: 242: temp_EIDL = RXB1EIDL;
  1826  001428  CF34 F036          	movff	3892,_temp_EIDL	;volatile
  1827                           
  1828                           ;ECAN.c: 243: temp_SIDH = RXB1SIDH;
  1829  00142C  CF31 F037          	movff	3889,_temp_SIDH	;volatile
  1830                           
  1831                           ;ECAN.c: 244: temp_SIDL = RXB1SIDL;
  1832  001430  CF32 F038          	movff	3890,_temp_SIDL	;volatile
  1833                           
  1834                           ;ECAN.c: 245: temp_DLC = RXB1DLC;
  1835  001434  CF35 F034          	movff	3893,_temp_DLC	;volatile
  1836                           
  1837                           ;ECAN.c: 246: MAP_REC_BATTERYSTATUS = RXB1D0;
  1838  001438  CF36 F028          	movff	3894,_MAP_REC_BATTERYSTATUS	;volatile
  1839                           
  1840                           ;ECAN.c: 247: MAP_REC_VELOCITY = RXB1D1;
  1841  00143C  CF37 F029          	movff	3895,_MAP_REC_VELOCITY	;volatile
  1842                           
  1843                           ;ECAN.c: 248: temp_D2 = RXB1D2;
  1844  001440  CF38 F02E          	movff	3896,_temp_D2	;volatile
  1845                           
  1846                           ;ECAN.c: 249: temp_D3 = RXB1D3;
  1847  001444  CF39 F02F          	movff	3897,_temp_D3	;volatile
  1848                           
  1849                           ;ECAN.c: 250: temp_D4 = RXB1D4;
  1850  001448  CF3A F030          	movff	3898,_temp_D4	;volatile
  1851                           
  1852                           ;ECAN.c: 251: temp_D5 = RXB1D5;
  1853  00144C  CF3B F031          	movff	3899,_temp_D5	;volatile
  1854                           
  1855                           ;ECAN.c: 252: temp_D6 = RXB1D6;
  1856  001450  CF3C F032          	movff	3900,_temp_D6	;volatile
  1857                           
  1858                           ;ECAN.c: 253: temp_D7 = RXB1D7;
  1859  001454  CF3D F033          	movff	3901,_temp_D7	;volatile
  1860                           
  1861                           ;ECAN.c: 254: RXB1CONbits.RXFUL = 0;
  1862  001458  010F               	movlb	15	; () banked
  1863  00145A  9F30               	bcf	48,7,b	;volatile
  1864  00145C  D01F               	goto	l2797
  1865  00145E                     l379:
  1866                           
  1867                           ; BSR set to: 15
  1868                           ;ECAN.c: 257: else if (B0CONbits.RXFUL)
  1869  00145E  010E               	movlb	14	; () banked
  1870  001460  AF80               	btfss	128,7,b	;volatile
  1871  001462  D01F               	goto	l2799
  1872                           
  1873                           ; BSR set to: 14
  1874                           ;ECAN.c: 258: {
  1875                           ;ECAN.c: 259: temp_EIDH = B0EIDH;
  1876  001464  CE83 F035          	movff	3715,_temp_EIDH	;volatile
  1877                           
  1878                           ;ECAN.c: 260: temp_EIDL = B0EIDL;
  1879  001468  CE84 F036          	movff	3716,_temp_EIDL	;volatile
  1880                           
  1881                           ;ECAN.c: 261: temp_SIDH = B0SIDH;
  1882  00146C  CE81 F037          	movff	3713,_temp_SIDH	;volatile
  1883                           
  1884                           ;ECAN.c: 262: temp_SIDL = B0SIDL;
  1885  001470  CE82 F038          	movff	3714,_temp_SIDL	;volatile
  1886                           
  1887                           ;ECAN.c: 263: temp_DLC = B0DLC;
  1888  001474  CE85 F034          	movff	3717,_temp_DLC	;volatile
  1889                           
  1890                           ;ECAN.c: 264: MAP_REC_BATTERYSTATUS = B0D0;
  1891  001478  CE86 F028          	movff	3718,_MAP_REC_BATTERYSTATUS	;volatile
  1892                           
  1893                           ;ECAN.c: 265: MAP_REC_VELOCITY = B0D1;
  1894  00147C  CE87 F029          	movff	3719,_MAP_REC_VELOCITY	;volatile
  1895                           
  1896                           ;ECAN.c: 266: temp_D2 = B0D2;
  1897  001480  CE88 F02E          	movff	3720,_temp_D2	;volatile
  1898                           
  1899                           ;ECAN.c: 267: temp_D3 = B0D3;
  1900  001484  CE89 F02F          	movff	3721,_temp_D3	;volatile
  1901                           
  1902                           ;ECAN.c: 268: temp_D4 = B0D4;
  1903  001488  CE8A F030          	movff	3722,_temp_D4	;volatile
  1904                           
  1905                           ;ECAN.c: 269: temp_D5 = B0D5;
  1906  00148C  CE8B F031          	movff	3723,_temp_D5	;volatile
  1907                           
  1908                           ;ECAN.c: 270: temp_D6 = B0D6;
  1909  001490  CE8C F032          	movff	3724,_temp_D6	;volatile
  1910                           
  1911                           ;ECAN.c: 271: temp_D7 = B0D7;
  1912  001494  CE8D F033          	movff	3725,_temp_D7	;volatile
  1913                           
  1914                           ;ECAN.c: 273: B0CONbits.RXFUL = 0;
  1915  001498  010E               	movlb	14	; () banked
  1916  00149A  9F80               	bcf	128,7,b	;volatile
  1917  00149C                     l2797:
  1918                           
  1919                           ; BSR set to: 14
  1920                           ;ECAN.c: 274: RXMsgFlag = 0x01;
  1921  00149C  0E01               	movlw	1
  1922  00149E  0100               	movlb	0	; () banked
  1923  0014A0  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1924  0014A2                     l2799:
  1925                           
  1926                           ;ECAN.c: 275: }
  1927                           ;ECAN.c: 277: if (RXMsgFlag == 0x01)
  1928  0014A2  0100               	movlb	0	; () banked
  1929  0014A4  0560               	decf	ECAN_Receive@RXMsgFlag& (0+255),w,b
  1930  0014A6  A4D8               	btfss	status,2,c
  1931  0014A8  D006               	goto	l2811
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;ECAN.c: 278: {
  1935                           ;ECAN.c: 279: RXMsgFlag = 0x00;
  1936  0014AA  0E00               	movlw	0
  1937  0014AC  0100               	movlb	0	; () banked
  1938  0014AE  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;ECAN.c: 280: PIR5bits.RXB1IF = 0;
  1942  0014B0  9277               	bcf	3959,1,c	;volatile
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;ECAN.c: 281: return 1;
  1946  0014B2  0E01               	movlw	1
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;ECAN.c: 282: }
  1950                           
  1951                           ; BSR set to: 0
  1952  0014B4  0012               	return	
  1953  0014B6                     l2811:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;ECAN.c: 283: else
  1957                           ;ECAN.c: 284: {
  1958                           ;ECAN.c: 285: return 0;
  1959  0014B6  0E00               	movlw	0
  1960                           
  1961                           ; BSR set to: 0
  1962  0014B8  0012               	return	
  1963  0014BA                     __end_of_ECAN_Receive:
  1964                           	opt stack 0
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           prodh	equ	0xFF4
  1970                           prodl	equ	0xFF3
  1971                           intcon	equ	0xFF2
  1972                           postinc0	equ	0xFEE
  1973                           wreg	equ	0xFE8
  1974                           postdec1	equ	0xFE5
  1975                           fsr1h	equ	0xFE2
  1976                           fsr1l	equ	0xFE1
  1977                           indf2	equ	0xFDF
  1978                           fsr2h	equ	0xFDA
  1979                           fsr2l	equ	0xFD9
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function _Delay *****************
  1983 ;; Defined at:
  1984 ;;		line 7 in file "Other.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  count           2    0[BANK0 ] unsigned int 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;		None               void
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;Total ram usage:        2 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    3
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;;		_checkRFID
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text8
  2014  0017F8                     __ptext8:
  2015                           	opt stack 0
  2016  0017F8                     _Delay:
  2017                           	opt stack 27
  2018  0017F8                     l2781:
  2019  0017F8  0100               	movlb	0	; () banked
  2020  0017FA  0760               	decf	Delay@count& (0+255),f,b
  2021  0017FC  A0D8               	btfss	status,0,c
  2022  0017FE  0761               	decf	(Delay@count+1)& (0+255),f,b
  2023  001800  0100               	movlb	0	; () banked
  2024  001802  2960               	incf	Delay@count& (0+255),w,b
  2025  001804  E1F9               	bnz	l2781
  2026  001806  0100               	movlb	0	; () banked
  2027  001808  2961               	incf	(Delay@count+1)& (0+255),w,b
  2028  00180A  B4D8               	btfsc	status,2,c
  2029  00180C  0012               	return	
  2030  00180E  D7F4               	goto	l2781
  2031  001810                     __end_of_Delay:
  2032                           	opt stack 0
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           prodh	equ	0xFF4
  2038                           prodl	equ	0xFF3
  2039                           intcon	equ	0xFF2
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           postdec1	equ	0xFE5
  2043                           fsr1h	equ	0xFE2
  2044                           fsr1l	equ	0xFE1
  2045                           indf2	equ	0xFDF
  2046                           fsr2h	equ	0xFDA
  2047                           fsr2l	equ	0xFD9
  2048                           status	equ	0xFD8
  2049                           
  2050 ;; *************** function _CANSetup *****************
  2051 ;; Defined at:
  2052 ;;		line 104 in file "ECAN.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;		None               void
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    3
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text9
  2081  0011B6                     __ptext9:
  2082                           	opt stack 0
  2083  0011B6                     _CANSetup:
  2084                           	opt stack 27
  2085                           
  2086                           ;ECAN.c: 107: CANCON = 0x80;
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;incstack = 0
  2090  0011B6  0E80               	movlw	128
  2091  0011B8  6E6F               	movwf	3951,c	;volatile
  2092  0011BA                     l2711:
  2093  0011BA  386E               	swapf	3950,w,c	;volatile
  2094  0011BC  32E8               	rrcf	wreg,f,c
  2095  0011BE  0B07               	andlw	7
  2096  0011C0  0A04               	xorlw	4
  2097  0011C2  A4D8               	btfss	status,2,c
  2098  0011C4  D7FA               	goto	l2711
  2099                           
  2100                           ;ECAN.c: 111: ECANCON = 0x40;
  2101  0011C6  0E40               	movlw	64
  2102  0011C8  6E72               	movwf	3954,c	;volatile
  2103                           
  2104                           ;ECAN.c: 115: BRGCON1 = 0x81;
  2105  0011CA  0E81               	movlw	129
  2106  0011CC  010E               	movlb	14	; () banked
  2107  0011CE  6F43               	movwf	67,b	;volatile
  2108                           
  2109                           ;ECAN.c: 116: BRGCON2 = 0xB8;
  2110  0011D0  0EB8               	movlw	184
  2111  0011D2  010E               	movlb	14	; () banked
  2112  0011D4  6F44               	movwf	68,b	;volatile
  2113                           
  2114                           ;ECAN.c: 117: BRGCON3 = 0x05;
  2115  0011D6  0E05               	movlw	5
  2116  0011D8  010E               	movlb	14	; () banked
  2117  0011DA  6F45               	movwf	69,b	;volatile
  2118                           
  2119                           ;ECAN.c: 122: BSEL0 = 0xF8;
  2120  0011DC  0EF8               	movlw	248
  2121  0011DE  010E               	movlb	14	; () banked
  2122  0011E0  6F7D               	movwf	125,b	;volatile
  2123                           
  2124                           ;ECAN.c: 126: RXM0EIDH = 0x00;
  2125  0011E2  0E00               	movlw	0
  2126  0011E4  010E               	movlb	14	; () banked
  2127  0011E6  6FFA               	movwf	250,b	;volatile
  2128                           
  2129                           ;ECAN.c: 127: RXM0EIDL = 0x00;
  2130  0011E8  0E00               	movlw	0
  2131  0011EA  010E               	movlb	14	; () banked
  2132  0011EC  6FFB               	movwf	251,b	;volatile
  2133                           
  2134                           ; BSR set to: 14
  2135                           ;ECAN.c: 128: RXM0SIDH = 0xFF;
  2136  0011EE  010E               	movlb	14	; () banked
  2137  0011F0  69F8               	setf	248,b	;volatile
  2138                           
  2139                           ;ECAN.c: 129: RXM0SIDL = 0xE0;
  2140  0011F2  0EE0               	movlw	224
  2141  0011F4  010E               	movlb	14	; () banked
  2142  0011F6  6FF9               	movwf	249,b	;volatile
  2143                           
  2144                           ;ECAN.c: 132: RXM1EIDH = 0x00;
  2145  0011F8  0E00               	movlw	0
  2146  0011FA  010E               	movlb	14	; () banked
  2147  0011FC  6FFE               	movwf	254,b	;volatile
  2148                           
  2149                           ;ECAN.c: 133: RXM1EIDL = 0x00;
  2150  0011FE  0E00               	movlw	0
  2151  001200  010E               	movlb	14	; () banked
  2152  001202  6FFF               	movwf	255,b	;volatile
  2153                           
  2154                           ; BSR set to: 14
  2155                           ;ECAN.c: 134: RXM1SIDH = 0xFF;
  2156  001204  010E               	movlb	14	; () banked
  2157  001206  69FC               	setf	252,b	;volatile
  2158                           
  2159                           ;ECAN.c: 135: RXM1SIDL = 0xE0;
  2160  001208  0EE0               	movlw	224
  2161  00120A  010E               	movlb	14	; () banked
  2162  00120C  6FFD               	movwf	253,b	;volatile
  2163                           
  2164                           ;ECAN.c: 139: RXFCON0 = 0x07;
  2165  00120E  0E07               	movlw	7
  2166  001210  010E               	movlb	14	; () banked
  2167  001212  6F46               	movwf	70,b	;volatile
  2168                           
  2169                           ;ECAN.c: 140: RXFCON1 = 0x00;
  2170  001214  0E00               	movlw	0
  2171  001216  010E               	movlb	14	; () banked
  2172  001218  6F47               	movwf	71,b	;volatile
  2173                           
  2174                           ;ECAN.c: 143: MSEL0 = 0xC0;
  2175  00121A  0EC0               	movlw	192
  2176  00121C  010E               	movlb	14	; () banked
  2177  00121E  6F79               	movwf	121,b	;volatile
  2178                           
  2179                           ; BSR set to: 14
  2180                           ;ECAN.c: 144: MSEL1 = 0xFF;
  2181  001220  010E               	movlb	14	; () banked
  2182  001222  697A               	setf	122,b	;volatile
  2183                           
  2184                           ; BSR set to: 14
  2185                           ;ECAN.c: 145: MSEL2 = 0xFF;
  2186  001224  010E               	movlb	14	; () banked
  2187  001226  697B               	setf	123,b	;volatile
  2188                           
  2189                           ; BSR set to: 14
  2190                           ;ECAN.c: 146: MSEL3 = 0xFF;
  2191  001228  010E               	movlb	14	; () banked
  2192  00122A  697C               	setf	124,b	;volatile
  2193                           
  2194                           ;ECAN.c: 150: RXFBCON0 = 0x10;
  2195  00122C  0E10               	movlw	16
  2196  00122E  010E               	movlb	14	; () banked
  2197  001230  6F71               	movwf	113,b	;volatile
  2198                           
  2199                           ;ECAN.c: 151: RXFBCON1 = 0xF2;
  2200  001232  0EF2               	movlw	242
  2201  001234  010E               	movlb	14	; () banked
  2202  001236  6F72               	movwf	114,b	;volatile
  2203                           
  2204                           ; BSR set to: 14
  2205                           ;ECAN.c: 153: RXFBCON2 = 0xFF;
  2206  001238  010E               	movlb	14	; () banked
  2207  00123A  6973               	setf	115,b	;volatile
  2208                           
  2209                           ; BSR set to: 14
  2210                           ;ECAN.c: 154: RXFBCON3 = 0xFF;
  2211  00123C  010E               	movlb	14	; () banked
  2212  00123E  6974               	setf	116,b	;volatile
  2213                           
  2214                           ; BSR set to: 14
  2215                           ;ECAN.c: 155: RXFBCON4 = 0xFF;
  2216  001240  010E               	movlb	14	; () banked
  2217  001242  6975               	setf	117,b	;volatile
  2218                           
  2219                           ; BSR set to: 14
  2220                           ;ECAN.c: 156: RXFBCON5 = 0xFF;
  2221  001244  010E               	movlb	14	; () banked
  2222  001246  6976               	setf	118,b	;volatile
  2223                           
  2224                           ; BSR set to: 14
  2225                           ;ECAN.c: 157: RXFBCON6 = 0xFF;
  2226  001248  010E               	movlb	14	; () banked
  2227  00124A  6977               	setf	119,b	;volatile
  2228                           
  2229                           ; BSR set to: 14
  2230                           ;ECAN.c: 158: RXFBCON7 = 0xFF;
  2231  00124C  010E               	movlb	14	; () banked
  2232  00124E  6978               	setf	120,b	;volatile
  2233                           
  2234                           ;ECAN.c: 164: RXF0EIDH = 0x00;
  2235  001250  0E00               	movlw	0
  2236  001252  010E               	movlb	14	; () banked
  2237  001254  6FE2               	movwf	226,b	;volatile
  2238                           
  2239                           ;ECAN.c: 165: RXF0EIDL = 0x00;
  2240  001256  0E00               	movlw	0
  2241  001258  010E               	movlb	14	; () banked
  2242  00125A  6FE3               	movwf	227,b	;volatile
  2243                           
  2244                           ;ECAN.c: 166: RXF0SIDH = 0x32;
  2245  00125C  0E32               	movlw	50
  2246  00125E  010E               	movlb	14	; () banked
  2247  001260  6FE0               	movwf	224,b	;volatile
  2248                           
  2249                           ;ECAN.c: 167: RXF0SIDL = 0xC0;
  2250  001262  0EC0               	movlw	192
  2251  001264  010E               	movlb	14	; () banked
  2252  001266  6FE1               	movwf	225,b	;volatile
  2253                           
  2254                           ;ECAN.c: 168: RXF1EIDH = 0x00;
  2255  001268  0E00               	movlw	0
  2256  00126A  010E               	movlb	14	; () banked
  2257  00126C  6FE6               	movwf	230,b	;volatile
  2258                           
  2259                           ;ECAN.c: 169: RXF1EIDL = 0x00;
  2260  00126E  0E00               	movlw	0
  2261  001270  010E               	movlb	14	; () banked
  2262  001272  6FE7               	movwf	231,b	;volatile
  2263                           
  2264                           ;ECAN.c: 170: RXF1SIDH = 0x33;
  2265  001274  0E33               	movlw	51
  2266  001276  010E               	movlb	14	; () banked
  2267  001278  6FE4               	movwf	228,b	;volatile
  2268                           
  2269                           ;ECAN.c: 171: RXF1SIDL = 0x40;
  2270  00127A  0E40               	movlw	64
  2271  00127C  010E               	movlb	14	; () banked
  2272  00127E  6FE5               	movwf	229,b	;volatile
  2273                           
  2274                           ;ECAN.c: 172: RXF2EIDH = 0x00;
  2275  001280  0E00               	movlw	0
  2276  001282  010E               	movlb	14	; () banked
  2277  001284  6FEA               	movwf	234,b	;volatile
  2278                           
  2279                           ;ECAN.c: 173: RXF2EIDL = 0x00;
  2280  001286  0E00               	movlw	0
  2281  001288  010E               	movlb	14	; () banked
  2282  00128A  6FEB               	movwf	235,b	;volatile
  2283                           
  2284                           ;ECAN.c: 174: RXF2SIDH = 0x33;
  2285  00128C  0E33               	movlw	51
  2286  00128E  010E               	movlb	14	; () banked
  2287  001290  6FE8               	movwf	232,b	;volatile
  2288                           
  2289                           ;ECAN.c: 175: RXF2SIDL = 0xC0;
  2290  001292  0EC0               	movlw	192
  2291  001294  010E               	movlb	14	; () banked
  2292  001296  6FE9               	movwf	233,b	;volatile
  2293                           
  2294                           ;ECAN.c: 178: if (0 ==1)
  2295  001298  D00E               	goto	l2745
  2296  00129A                     l2739:
  2297  00129A  386E               	swapf	3950,w,c	;volatile
  2298  00129C  32E8               	rrcf	wreg,f,c
  2299  00129E  0B07               	andlw	7
  2300  0012A0  0A40               	xorlw	64
  2301  0012A2  A4D8               	btfss	status,2,c
  2302  0012A4  D017               	goto	l2753
  2303  0012A6  D7F9               	goto	l2739
  2304  0012A8                     l2743:
  2305  0012A8  386E               	swapf	3950,w,c	;volatile
  2306  0012AA  32E8               	rrcf	wreg,f,c
  2307  0012AC  0B07               	andlw	7
  2308  0012AE  0A60               	xorlw	96
  2309  0012B0  A4D8               	btfss	status,2,c
  2310  0012B2  D010               	goto	l2753
  2311  0012B4  D7F9               	goto	l2743
  2312  0012B6                     l2745:
  2313                           
  2314                           ;ECAN.c: 189: CANCON = 0x00;
  2315  0012B6  0E00               	movlw	0
  2316  0012B8  6E6F               	movwf	3951,c	;volatile
  2317  0012BA                     l2747:
  2318  0012BA  386E               	swapf	3950,w,c	;volatile
  2319  0012BC  32E8               	rrcf	wreg,f,c
  2320  0012BE  0B07               	andlw	7
  2321  0012C0  0900               	iorlw	0
  2322  0012C2  A4D8               	btfss	status,2,c
  2323  0012C4  D007               	goto	l2753
  2324  0012C6  D7F9               	goto	l2747
  2325  0012C8                     l2751:
  2326  0012C8  386E               	swapf	3950,w,c	;volatile
  2327  0012CA  32E8               	rrcf	wreg,f,c
  2328  0012CC  0B07               	andlw	7
  2329  0012CE  0A40               	xorlw	64
  2330  0012D0  B4D8               	btfsc	status,2,c
  2331  0012D2  D7FA               	goto	l2751
  2332  0012D4                     l2753:
  2333                           
  2334                           ;ECAN.c: 197: }
  2335                           ;ECAN.c: 200: RXB0CON = 0x00;
  2336  0012D4  0E00               	movlw	0
  2337  0012D6  6E60               	movwf	3936,c	;volatile
  2338                           
  2339                           ;ECAN.c: 201: RXB1CON = 0x00;
  2340  0012D8  0E00               	movlw	0
  2341  0012DA  010F               	movlb	15	; () banked
  2342  0012DC  6F30               	movwf	48,b	;volatile
  2343                           
  2344                           ; BSR set to: 15
  2345  0012DE  0012               	return		;funcret
  2346  0012E0                     __end_of_CANSetup:
  2347                           	opt stack 0
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           prodh	equ	0xFF4
  2353                           prodl	equ	0xFF3
  2354                           intcon	equ	0xFF2
  2355                           postinc0	equ	0xFEE
  2356                           wreg	equ	0xFE8
  2357                           postdec1	equ	0xFE5
  2358                           fsr1h	equ	0xFE2
  2359                           fsr1l	equ	0xFE1
  2360                           indf2	equ	0xFDF
  2361                           fsr2h	equ	0xFDA
  2362                           fsr2l	equ	0xFD9
  2363                           status	equ	0xFD8
  2364                           
  2365 ;; *************** function _ISR *****************
  2366 ;; Defined at:
  2367 ;;		line 88 in file "main.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;		None               void
  2374 ;; Registers used:
  2375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2385 ;;Total ram usage:       14 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    2
  2388 ;; This function calls:
  2389 ;;		_collectManch
  2390 ;; This function is called by:
  2391 ;;		Interrupt level 2
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	intcode
  2396  000008                     __pintcode:
  2397                           	opt stack 0
  2398  000008                     _ISR:
  2399                           	opt stack 26
  2400                           
  2401                           ; BSR set to: 15
  2402                           ;incstack = 0
  2403  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2404  00000A  CFFA F046          	movff	pclath,??_ISR
  2405  00000E  CFFB F047          	movff	pclatu,??_ISR+1
  2406  000012  CFE9 F048          	movff	fsr0l,??_ISR+2
  2407  000016  CFEA F049          	movff	fsr0h,??_ISR+3
  2408  00001A  CFE1 F04A          	movff	fsr1l,??_ISR+4
  2409  00001E  CFE2 F04B          	movff	fsr1h,??_ISR+5
  2410  000022  CFD9 F04C          	movff	fsr2l,??_ISR+6
  2411  000026  CFDA F04D          	movff	fsr2h,??_ISR+7
  2412  00002A  CFF3 F04E          	movff	prodl,??_ISR+8
  2413  00002E  CFF4 F04F          	movff	prodh,??_ISR+9
  2414  000032  CFF6 F050          	movff	tblptrl,??_ISR+10
  2415  000036  CFF7 F051          	movff	tblptrh,??_ISR+11
  2416  00003A  CFF8 F052          	movff	tblptru,??_ISR+12
  2417  00003E  CFF5 F053          	movff	tablat,??_ISR+13
  2418                           
  2419                           ;main.c: 102: Interrupt_counter++;
  2420  000042  0100               	movlb	0	; () banked
  2421  000044  4B6D               	infsnz	_Interrupt_counter& (0+255),f,b
  2422  000046  2B6E               	incf	(_Interrupt_counter+1)& (0+255),f,b
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;main.c: 104: if(Interrupt_counter == 10){
  2426  000048  0E0A               	movlw	10
  2427  00004A  0100               	movlb	0	; () banked
  2428  00004C  196D               	xorwf	_Interrupt_counter& (0+255),w,b
  2429  00004E  0100               	movlb	0	; () banked
  2430  000050  116E               	iorwf	(_Interrupt_counter+1)& (0+255),w,b
  2431  000052  A4D8               	btfss	status,2,c
  2432  000054  D007               	goto	i2l90
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;main.c: 107: collectManch();
  2436  000056  EC79  F00B         	call	_collectManch	;wreg free
  2437                           
  2438                           ;main.c: 108: Interrupt_counter = 0;
  2439  00005A  0E00               	movlw	0
  2440  00005C  0100               	movlb	0	; () banked
  2441  00005E  6F6E               	movwf	(_Interrupt_counter+1)& (0+255),b
  2442  000060  0E00               	movlw	0
  2443  000062  6F6D               	movwf	_Interrupt_counter& (0+255),b
  2444  000064                     i2l90:
  2445                           
  2446                           ; BSR set to: 0
  2447  000064  C053  FFF5         	movff	??_ISR+13,tablat
  2448  000068  C052  FFF8         	movff	??_ISR+12,tblptru
  2449  00006C  C051  FFF7         	movff	??_ISR+11,tblptrh
  2450  000070  C050  FFF6         	movff	??_ISR+10,tblptrl
  2451  000074  C04F  FFF4         	movff	??_ISR+9,prodh
  2452  000078  C04E  FFF3         	movff	??_ISR+8,prodl
  2453  00007C  C04D  FFDA         	movff	??_ISR+7,fsr2h
  2454  000080  C04C  FFD9         	movff	??_ISR+6,fsr2l
  2455  000084  C04B  FFE2         	movff	??_ISR+5,fsr1h
  2456  000088  C04A  FFE1         	movff	??_ISR+4,fsr1l
  2457  00008C  C049  FFEA         	movff	??_ISR+3,fsr0h
  2458  000090  C048  FFE9         	movff	??_ISR+2,fsr0l
  2459  000094  C047  FFFB         	movff	??_ISR+1,pclatu
  2460  000098  C046  FFFA         	movff	??_ISR,pclath
  2461  00009C  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2462  00009E  0011               	retfie		f
  2463  0000A0                     __end_of_ISR:
  2464                           	opt stack 0
  2465                           pclatu	equ	0xFFB
  2466                           pclath	equ	0xFFA
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           fsr0h	equ	0xFEA
  2476                           fsr0l	equ	0xFE9
  2477                           wreg	equ	0xFE8
  2478                           postdec1	equ	0xFE5
  2479                           fsr1h	equ	0xFE2
  2480                           fsr1l	equ	0xFE1
  2481                           indf2	equ	0xFDF
  2482                           fsr2h	equ	0xFDA
  2483                           fsr2l	equ	0xFD9
  2484                           status	equ	0xFD8
  2485                           
  2486 ;; *************** function _collectManch *****************
  2487 ;; Defined at:
  2488 ;;		line 107 in file "RFID.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;		None               void
  2495 ;; Registers used:
  2496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;Total ram usage:        1 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    1
  2509 ;; This function calls:
  2510 ;;		_decodeManchester
  2511 ;;		_parseMultiBitToSingleBit
  2512 ;; This function is called by:
  2513 ;;		_ISR
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text11
  2518  0016F2                     __ptext11:
  2519                           	opt stack 0
  2520  0016F2                     _collectManch:
  2521                           	opt stack 26
  2522                           
  2523                           ;RFID.c: 108: val = PORTBbits.RB0;
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;incstack = 0
  2527  0016F2  A081               	btfss	3969,0,c	;volatile
  2528  0016F4  D003               	goto	i2u127_40
  2529  0016F6  6A45               	clrf	??_collectManch& (0+255),c
  2530  0016F8  2A45               	incf	??_collectManch& (0+255),f,c
  2531  0016FA  D001               	goto	i2u127_48
  2532  0016FC                     i2u127_40:
  2533  0016FC  6A45               	clrf	??_collectManch& (0+255),c
  2534  0016FE                     i2u127_48:
  2535  0016FE  5045               	movf	??_collectManch,w,c
  2536  001700  6E25               	movwf	_val,c
  2537  001702  6A26               	clrf	_val+1,c
  2538                           
  2539                           ;RFID.c: 110: bitArray[point] = val;
  2540  001704  90D8               	bcf	status,0,c
  2541  001706  3423               	rlcf	_point,w,c
  2542  001708  6ED9               	movwf	fsr2l,c
  2543  00170A  3424               	rlcf	_point+1,w,c
  2544  00170C  6EDA               	movwf	fsr2h,c
  2545  00170E  0ECC               	movlw	low _bitArray
  2546  001710  26D9               	addwf	fsr2l,f,c
  2547  001712  0E01               	movlw	high _bitArray
  2548  001714  22DA               	addwfc	fsr2h,f,c
  2549  001716  C025  FFDE         	movff	_val,postinc2
  2550  00171A  C026  FFDD         	movff	_val+1,postdec2
  2551                           
  2552                           ;RFID.c: 111: point++;
  2553  00171E  4A23               	infsnz	_point,f,c
  2554  001720  2A24               	incf	_point+1,f,c
  2555                           
  2556                           ;RFID.c: 113: if(point >= 700){
  2557  001722  BE24               	btfsc	_point+1,7,c
  2558  001724  0012               	return	
  2559  001726  0EBC               	movlw	188
  2560  001728  5C23               	subwf	_point,w,c
  2561  00172A  0E02               	movlw	2
  2562  00172C  5824               	subwfb	_point+1,w,c
  2563  00172E  A0D8               	btfss	status,0,c
  2564  001730  0012               	return	
  2565                           
  2566                           ;RFID.c: 114: INTCONbits.TMR0IE = 0;
  2567  001732  9AF2               	bcf	intcon,5,c	;volatile
  2568                           
  2569                           ;RFID.c: 115: parseMultiBitToSingleBit(0);
  2570  001734  0E00               	movlw	0
  2571  001736  6E3A               	movwf	parseMultiBitToSingleBit@startOffset+1,c
  2572  001738  0E00               	movlw	0
  2573  00173A  6E39               	movwf	parseMultiBitToSingleBit@startOffset,c
  2574  00173C  EC39  F008         	call	_parseMultiBitToSingleBit	;wreg free
  2575                           
  2576                           ;RFID.c: 116: decodeManchester(finalArray);
  2577  001740  0E58               	movlw	low _finalArray
  2578  001742  6E39               	movwf	decodeManchester@finalArray,c
  2579  001744  0E0C               	movlw	high _finalArray
  2580  001746  6E3A               	movwf	decodeManchester@finalArray+1,c
  2581  001748  EC70  F009         	call	_decodeManchester	;wreg free
  2582  00174C  0012               	return	
  2583  00174E                     __end_of_collectManch:
  2584                           	opt stack 0
  2585                           pclatu	equ	0xFFB
  2586                           pclath	equ	0xFFA
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           prodh	equ	0xFF4
  2592                           prodl	equ	0xFF3
  2593                           intcon	equ	0xFF2
  2594                           postinc0	equ	0xFEE
  2595                           fsr0h	equ	0xFEA
  2596                           fsr0l	equ	0xFE9
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           indf2	equ	0xFDF
  2602                           postinc2	equ	0xFDE
  2603                           postdec2	equ	0xFDD
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _parseMultiBitToSingleBit *****************
  2609 ;; Defined at:
  2610 ;;		line 120 in file "RFID.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  startOffset     2    0[COMRAM] int 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  inARow          2   10[COMRAM] int 
  2615 ;;  lastVal         2    8[COMRAM] int 
  2616 ;;  resultArray_    2    6[COMRAM] int 
  2617 ;;  i               2    4[COMRAM] int 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;		None               void
  2620 ;; Registers used:
  2621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;Total ram usage:       12 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_collectManch
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text12
  2641  001072                     __ptext12:
  2642                           	opt stack 0
  2643  001072                     _parseMultiBitToSingleBit:
  2644                           	opt stack 26
  2645                           
  2646                           ;RFID.c: 121: int i = startOffset;
  2647                           
  2648                           ;incstack = 0
  2649  001072  C039  F03D         	movff	parseMultiBitToSingleBit@startOffset,parseMultiBitToSingleBit@i
  2650  001076  C03A  F03E         	movff	parseMultiBitToSingleBit@startOffset+1,parseMultiBitToSingleBit@i+1
  2651                           
  2652                           ;RFID.c: 122: int lastVal = 0;
  2653  00107A  0E00               	movlw	0
  2654  00107C  6E42               	movwf	parseMultiBitToSingleBit@lastVal+1,c
  2655  00107E  0E00               	movlw	0
  2656  001080  6E41               	movwf	parseMultiBitToSingleBit@lastVal,c
  2657                           
  2658                           ;RFID.c: 123: int inARow = 0;
  2659  001082  0E00               	movlw	0
  2660  001084  6E44               	movwf	parseMultiBitToSingleBit@inARow+1,c
  2661  001086  0E00               	movlw	0
  2662  001088  6E43               	movwf	parseMultiBitToSingleBit@inARow,c
  2663                           
  2664                           ;RFID.c: 124: int resultArray_index = 0;
  2665  00108A  0E00               	movlw	0
  2666  00108C  6E40               	movwf	parseMultiBitToSingleBit@resultArray_index+1,c
  2667  00108E  0E00               	movlw	0
  2668  001090  6E3F               	movwf	parseMultiBitToSingleBit@resultArray_index,c
  2669  001092                     i2l2021:
  2670                           
  2671                           ;RFID.c: 125: for (;i < 500; i++) {
  2672  001092  BE3E               	btfsc	parseMultiBitToSingleBit@i+1,7,c
  2673  001094  D006               	goto	i2l2025
  2674  001096  0EF4               	movlw	244
  2675  001098  5C3D               	subwf	parseMultiBitToSingleBit@i,w,c
  2676  00109A  0E01               	movlw	1
  2677  00109C  583E               	subwfb	parseMultiBitToSingleBit@i+1,w,c
  2678  00109E  B0D8               	btfsc	status,0,c
  2679  0010A0  0012               	return	
  2680  0010A2                     i2l2025:
  2681                           
  2682                           ;RFID.c: 126: if (bitArray [i] == lastVal) {
  2683  0010A2  90D8               	bcf	status,0,c
  2684  0010A4  343D               	rlcf	parseMultiBitToSingleBit@i,w,c
  2685  0010A6  6ED9               	movwf	fsr2l,c
  2686  0010A8  343E               	rlcf	parseMultiBitToSingleBit@i+1,w,c
  2687  0010AA  6EDA               	movwf	fsr2h,c
  2688  0010AC  0ECC               	movlw	low _bitArray
  2689  0010AE  26D9               	addwf	fsr2l,f,c
  2690  0010B0  0E01               	movlw	high _bitArray
  2691  0010B2  22DA               	addwfc	fsr2h,f,c
  2692  0010B4  5041               	movf	parseMultiBitToSingleBit@lastVal,w,c
  2693  0010B6  18DE               	xorwf	postinc2,w,c
  2694  0010B8  E107               	bnz	i2l2029
  2695  0010BA  5042               	movf	parseMultiBitToSingleBit@lastVal+1,w,c
  2696  0010BC  18DE               	xorwf	postinc2,w,c
  2697  0010BE  A4D8               	btfss	status,2,c
  2698  0010C0  D003               	goto	i2l2029
  2699                           
  2700                           ;RFID.c: 127: inARow++;
  2701  0010C2  4A43               	infsnz	parseMultiBitToSingleBit@inARow,f,c
  2702  0010C4  2A44               	incf	parseMultiBitToSingleBit@inARow+1,f,c
  2703                           
  2704                           ;RFID.c: 128: }
  2705  0010C6  D074               	goto	i2l2059
  2706  0010C8                     i2l2029:
  2707                           
  2708                           ;RFID.c: 129: else {
  2709                           ;RFID.c: 131: if (inARow >= 4 && inARow <= 8) {
  2710  0010C8  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2711  0010CA  D01E               	goto	i2l2037
  2712  0010CC  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2713  0010CE  E104               	bnz	i2u95_40
  2714  0010D0  0E04               	movlw	4
  2715  0010D2  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2716  0010D4  A0D8               	btfss	status,0,c
  2717  0010D6  D018               	goto	i2l2037
  2718  0010D8                     i2u95_40:
  2719  0010D8  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2720  0010DA  D006               	goto	i2l2033
  2721  0010DC  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2722  0010DE  E114               	bnz	i2l2037
  2723  0010E0  0E09               	movlw	9
  2724  0010E2  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2725  0010E4  B0D8               	btfsc	status,0,c
  2726  0010E6  D010               	goto	i2l2037
  2727  0010E8                     i2l2033:
  2728                           
  2729                           ;RFID.c: 134: resultArray[resultArray_index] = lastVal;
  2730  0010E8  90D8               	bcf	status,0,c
  2731  0010EA  343F               	rlcf	parseMultiBitToSingleBit@resultArray_index,w,c
  2732  0010EC  6ED9               	movwf	fsr2l,c
  2733  0010EE  3440               	rlcf	parseMultiBitToSingleBit@resultArray_index+1,w,c
  2734  0010F0  6EDA               	movwf	fsr2h,c
  2735  0010F2  0E2C               	movlw	low _resultArray
  2736  0010F4  26D9               	addwf	fsr2l,f,c
  2737  0010F6  0E0B               	movlw	high _resultArray
  2738  0010F8  22DA               	addwfc	fsr2h,f,c
  2739  0010FA  C041  FFDE         	movff	parseMultiBitToSingleBit@lastVal,postinc2
  2740  0010FE  C042  FFDD         	movff	parseMultiBitToSingleBit@lastVal+1,postdec2
  2741                           
  2742                           ;RFID.c: 135: resultArray_index += 1;
  2743  001102  4A3F               	infsnz	parseMultiBitToSingleBit@resultArray_index,f,c
  2744  001104  2A40               	incf	parseMultiBitToSingleBit@resultArray_index+1,f,c
  2745                           
  2746                           ;RFID.c: 136: }
  2747  001106  D043               	goto	i2l2053
  2748  001108                     i2l2037:
  2749                           
  2750                           ;RFID.c: 137: else if (inARow >= 9 && inARow <= 14) {
  2751  001108  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2752  00110A  D035               	goto	i2l2047
  2753  00110C  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2754  00110E  E104               	bnz	i2u97_40
  2755  001110  0E09               	movlw	9
  2756  001112  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2757  001114  A0D8               	btfss	status,0,c
  2758  001116  D02F               	goto	i2l2047
  2759  001118                     i2u97_40:
  2760  001118  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2761  00111A  D006               	goto	i2l2041
  2762  00111C  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2763  00111E  E12B               	bnz	i2l2047
  2764  001120  0E0F               	movlw	15
  2765  001122  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2766  001124  B0D8               	btfsc	status,0,c
  2767  001126  D027               	goto	i2l2047
  2768  001128                     i2l2041:
  2769                           
  2770                           ;RFID.c: 140: resultArray[resultArray_index] = lastVal;
  2771  001128  90D8               	bcf	status,0,c
  2772  00112A  343F               	rlcf	parseMultiBitToSingleBit@resultArray_index,w,c
  2773  00112C  6ED9               	movwf	fsr2l,c
  2774  00112E  3440               	rlcf	parseMultiBitToSingleBit@resultArray_index+1,w,c
  2775  001130  6EDA               	movwf	fsr2h,c
  2776  001132  0E2C               	movlw	low _resultArray
  2777  001134  26D9               	addwf	fsr2l,f,c
  2778  001136  0E0B               	movlw	high _resultArray
  2779  001138  22DA               	addwfc	fsr2h,f,c
  2780  00113A  C041  FFDE         	movff	parseMultiBitToSingleBit@lastVal,postinc2
  2781  00113E  C042  FFDD         	movff	parseMultiBitToSingleBit@lastVal+1,postdec2
  2782                           
  2783                           ;RFID.c: 141: resultArray[resultArray_index+1] = lastVal;
  2784  001142  C03F  F03B         	movff	parseMultiBitToSingleBit@resultArray_index,??_parseMultiBitToSingleBit
  2785  001146  C040  F03C         	movff	parseMultiBitToSingleBit@resultArray_index+1,??_parseMultiBitToSingleBit+1
  2786  00114A  90D8               	bcf	status,0,c
  2787  00114C  363B               	rlcf	??_parseMultiBitToSingleBit,f,c
  2788  00114E  363C               	rlcf	??_parseMultiBitToSingleBit+1,f,c
  2789  001150  0E02               	movlw	2
  2790  001152  263B               	addwf	??_parseMultiBitToSingleBit,f,c
  2791  001154  0E00               	movlw	0
  2792  001156  223C               	addwfc	??_parseMultiBitToSingleBit+1,f,c
  2793  001158  0E2C               	movlw	low _resultArray
  2794  00115A  243B               	addwf	??_parseMultiBitToSingleBit,w,c
  2795  00115C  6ED9               	movwf	fsr2l,c
  2796  00115E  0E0B               	movlw	high _resultArray
  2797  001160  203C               	addwfc	??_parseMultiBitToSingleBit+1,w,c
  2798  001162  6EDA               	movwf	fsr2h,c
  2799  001164  C041  FFDE         	movff	parseMultiBitToSingleBit@lastVal,postinc2
  2800  001168  C042  FFDD         	movff	parseMultiBitToSingleBit@lastVal+1,postdec2
  2801                           
  2802                           ;RFID.c: 142: resultArray_index += 2;
  2803  00116C  0E02               	movlw	2
  2804  00116E  263F               	addwf	parseMultiBitToSingleBit@resultArray_index,f,c
  2805  001170  0E00               	movlw	0
  2806  001172  2240               	addwfc	parseMultiBitToSingleBit@resultArray_index+1,f,c
  2807                           
  2808                           ;RFID.c: 143: }
  2809  001174  D00C               	goto	i2l2053
  2810  001176                     i2l2047:
  2811                           
  2812                           ;RFID.c: 144: else if (inARow >= 15 && lastVal == 0) {
  2813  001176  BE44               	btfsc	parseMultiBitToSingleBit@inARow+1,7,c
  2814  001178  D00A               	goto	i2l2053
  2815  00117A  5044               	movf	parseMultiBitToSingleBit@inARow+1,w,c
  2816  00117C  E104               	bnz	i2u99_40
  2817  00117E  0E0F               	movlw	15
  2818  001180  5C43               	subwf	parseMultiBitToSingleBit@inARow,w,c
  2819  001182  A0D8               	btfss	status,0,c
  2820  001184  D004               	goto	i2l2053
  2821  001186                     i2u99_40:
  2822  001186  5041               	movf	parseMultiBitToSingleBit@lastVal,w,c
  2823  001188  1042               	iorwf	parseMultiBitToSingleBit@lastVal+1,w,c
  2824  00118A  B4D8               	btfsc	status,2,c
  2825  00118C  0012               	return	
  2826  00118E                     i2l2053:
  2827                           
  2828                           ;RFID.c: 148: }
  2829                           ;RFID.c: 150: inARow = 1;
  2830  00118E  0E00               	movlw	0
  2831  001190  6E44               	movwf	parseMultiBitToSingleBit@inARow+1,c
  2832  001192  0E01               	movlw	1
  2833  001194  6E43               	movwf	parseMultiBitToSingleBit@inARow,c
  2834                           
  2835                           ;RFID.c: 151: lastVal = bitArray[i];
  2836  001196  90D8               	bcf	status,0,c
  2837  001198  343D               	rlcf	parseMultiBitToSingleBit@i,w,c
  2838  00119A  6ED9               	movwf	fsr2l,c
  2839  00119C  343E               	rlcf	parseMultiBitToSingleBit@i+1,w,c
  2840  00119E  6EDA               	movwf	fsr2h,c
  2841  0011A0  0ECC               	movlw	low _bitArray
  2842  0011A2  26D9               	addwf	fsr2l,f,c
  2843  0011A4  0E01               	movlw	high _bitArray
  2844  0011A6  22DA               	addwfc	fsr2h,f,c
  2845  0011A8  CFDE F041          	movff	postinc2,parseMultiBitToSingleBit@lastVal
  2846  0011AC  CFDD F042          	movff	postdec2,parseMultiBitToSingleBit@lastVal+1
  2847  0011B0                     i2l2059:
  2848  0011B0  4A3D               	infsnz	parseMultiBitToSingleBit@i,f,c
  2849  0011B2  2A3E               	incf	parseMultiBitToSingleBit@i+1,f,c
  2850  0011B4  D76E               	goto	i2l2021
  2851  0011B6                     __end_of_parseMultiBitToSingleBit:
  2852                           	opt stack 0
  2853                           pclatu	equ	0xFFB
  2854                           pclath	equ	0xFFA
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           intcon	equ	0xFF2
  2862                           postinc0	equ	0xFEE
  2863                           fsr0h	equ	0xFEA
  2864                           fsr0l	equ	0xFE9
  2865                           wreg	equ	0xFE8
  2866                           postdec1	equ	0xFE5
  2867                           fsr1h	equ	0xFE2
  2868                           fsr1l	equ	0xFE1
  2869                           indf2	equ	0xFDF
  2870                           postinc2	equ	0xFDE
  2871                           postdec2	equ	0xFDD
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function _decodeManchester *****************
  2877 ;; Defined at:
  2878 ;;		line 166 in file "RFID.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  finalArray      2    0[COMRAM] PTR int 
  2881 ;;		 -> finalArray(300), 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  i               2    8[COMRAM] int 
  2884 ;;  finalArray_i    2    6[COMRAM] int 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;		None               void
  2887 ;; Registers used:
  2888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;Total ram usage:       10 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_collectManch
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text13
  2908  0012E0                     __ptext13:
  2909                           	opt stack 0
  2910  0012E0                     _decodeManchester:
  2911                           	opt stack 26
  2912                           
  2913                           ;RFID.c: 169: int finalArray_index = 0;
  2914                           
  2915                           ;incstack = 0
  2916  0012E0  0E00               	movlw	0
  2917  0012E2  6E40               	movwf	decodeManchester@finalArray_index+1,c
  2918  0012E4  0E00               	movlw	0
  2919  0012E6  6E3F               	movwf	decodeManchester@finalArray_index,c
  2920                           
  2921                           ;RFID.c: 170: for (int i = 0; i < 88; i+=2) {
  2922  0012E8  0E00               	movlw	0
  2923  0012EA  6E42               	movwf	decodeManchester@i+1,c
  2924  0012EC  0E00               	movlw	0
  2925  0012EE  6E41               	movwf	decodeManchester@i,c
  2926  0012F0                     i2l2065:
  2927  0012F0  BE42               	btfsc	decodeManchester@i+1,7,c
  2928  0012F2  D006               	goto	i2l2069
  2929  0012F4  5042               	movf	decodeManchester@i+1,w,c
  2930  0012F6  E16D               	bnz	i2l2091
  2931  0012F8  0E58               	movlw	88
  2932  0012FA  5C41               	subwf	decodeManchester@i,w,c
  2933  0012FC  B0D8               	btfsc	status,0,c
  2934  0012FE  D069               	goto	i2l2091
  2935  001300                     i2l2069:
  2936                           
  2937                           ;RFID.c: 171: if (resultArray[i] == 1 && resultArray[i+1] == 0) {
  2938  001300  90D8               	bcf	status,0,c
  2939  001302  3441               	rlcf	decodeManchester@i,w,c
  2940  001304  6ED9               	movwf	fsr2l,c
  2941  001306  3442               	rlcf	decodeManchester@i+1,w,c
  2942  001308  6EDA               	movwf	fsr2h,c
  2943  00130A  0E2C               	movlw	low _resultArray
  2944  00130C  26D9               	addwf	fsr2l,f,c
  2945  00130E  0E0B               	movlw	high _resultArray
  2946  001310  22DA               	addwfc	fsr2h,f,c
  2947  001312  04DE               	decf	postinc2,w,c
  2948  001314  10DE               	iorwf	postinc2,w,c
  2949  001316  A4D8               	btfss	status,2,c
  2950  001318  D020               	goto	i2l2075
  2951  00131A  C041  F03B         	movff	decodeManchester@i,??_decodeManchester
  2952  00131E  C042  F03C         	movff	decodeManchester@i+1,??_decodeManchester+1
  2953  001322  90D8               	bcf	status,0,c
  2954  001324  363B               	rlcf	??_decodeManchester,f,c
  2955  001326  363C               	rlcf	??_decodeManchester+1,f,c
  2956  001328  0E02               	movlw	2
  2957  00132A  263B               	addwf	??_decodeManchester,f,c
  2958  00132C  0E00               	movlw	0
  2959  00132E  223C               	addwfc	??_decodeManchester+1,f,c
  2960  001330  0E2C               	movlw	low _resultArray
  2961  001332  243B               	addwf	??_decodeManchester,w,c
  2962  001334  6ED9               	movwf	fsr2l,c
  2963  001336  0E0B               	movlw	high _resultArray
  2964  001338  203C               	addwfc	??_decodeManchester+1,w,c
  2965  00133A  6EDA               	movwf	fsr2h,c
  2966  00133C  50DE               	movf	postinc2,w,c
  2967  00133E  10DE               	iorwf	postinc2,w,c
  2968  001340  A4D8               	btfss	status,2,c
  2969  001342  D00B               	goto	i2l2075
  2970                           
  2971                           ;RFID.c: 172: finalArray[finalArray_index] = 1;
  2972  001344  90D8               	bcf	status,0,c
  2973  001346  343F               	rlcf	decodeManchester@finalArray_index,w,c
  2974  001348  6ED9               	movwf	fsr2l,c
  2975  00134A  3440               	rlcf	decodeManchester@finalArray_index+1,w,c
  2976  00134C  6EDA               	movwf	fsr2h,c
  2977  00134E  5039               	movf	decodeManchester@finalArray,w,c
  2978  001350  26D9               	addwf	fsr2l,f,c
  2979  001352  503A               	movf	decodeManchester@finalArray+1,w,c
  2980  001354  22DA               	addwfc	fsr2h,f,c
  2981  001356  0E01               	movlw	1
  2982  001358  D02C               	goto	L1
  2983  00135A                     i2l2075:
  2984                           
  2985                           ;RFID.c: 174: else if (resultArray[i] == 0 && resultArray[i+1] == 1) {
  2986  00135A  90D8               	bcf	status,0,c
  2987  00135C  3441               	rlcf	decodeManchester@i,w,c
  2988  00135E  6ED9               	movwf	fsr2l,c
  2989  001360  3442               	rlcf	decodeManchester@i+1,w,c
  2990  001362  6EDA               	movwf	fsr2h,c
  2991  001364  0E2C               	movlw	low _resultArray
  2992  001366  26D9               	addwf	fsr2l,f,c
  2993  001368  0E0B               	movlw	high _resultArray
  2994  00136A  22DA               	addwfc	fsr2h,f,c
  2995  00136C  50DE               	movf	postinc2,w,c
  2996  00136E  10DE               	iorwf	postinc2,w,c
  2997  001370  A4D8               	btfss	status,2,c
  2998  001372  D023               	goto	i2l2081
  2999  001374  C041  F03B         	movff	decodeManchester@i,??_decodeManchester
  3000  001378  C042  F03C         	movff	decodeManchester@i+1,??_decodeManchester+1
  3001  00137C  90D8               	bcf	status,0,c
  3002  00137E  363B               	rlcf	??_decodeManchester,f,c
  3003  001380  363C               	rlcf	??_decodeManchester+1,f,c
  3004  001382  0E02               	movlw	2
  3005  001384  263B               	addwf	??_decodeManchester,f,c
  3006  001386  0E00               	movlw	0
  3007  001388  223C               	addwfc	??_decodeManchester+1,f,c
  3008  00138A  0E2C               	movlw	low _resultArray
  3009  00138C  243B               	addwf	??_decodeManchester,w,c
  3010  00138E  6ED9               	movwf	fsr2l,c
  3011  001390  0E0B               	movlw	high _resultArray
  3012  001392  203C               	addwfc	??_decodeManchester+1,w,c
  3013  001394  6EDA               	movwf	fsr2h,c
  3014  001396  04DE               	decf	postinc2,w,c
  3015  001398  10DE               	iorwf	postinc2,w,c
  3016  00139A  A4D8               	btfss	status,2,c
  3017  00139C  D00E               	goto	i2l2081
  3018                           
  3019                           ;RFID.c: 175: finalArray[finalArray_index] = 0;
  3020  00139E  90D8               	bcf	status,0,c
  3021  0013A0  343F               	rlcf	decodeManchester@finalArray_index,w,c
  3022  0013A2  6ED9               	movwf	fsr2l,c
  3023  0013A4  3440               	rlcf	decodeManchester@finalArray_index+1,w,c
  3024  0013A6  6EDA               	movwf	fsr2h,c
  3025  0013A8  5039               	movf	decodeManchester@finalArray,w,c
  3026  0013AA  26D9               	addwf	fsr2l,f,c
  3027  0013AC  503A               	movf	decodeManchester@finalArray+1,w,c
  3028  0013AE  22DA               	addwfc	fsr2h,f,c
  3029  0013B0  0E00               	movlw	0
  3030  0013B2                     L1:
  3031  0013B2  6EDE               	movwf	postinc2,c
  3032  0013B4  0E00               	movlw	0
  3033  0013B6  6EDD               	movwf	postdec2,c
  3034                           
  3035                           ;RFID.c: 176: }
  3036  0013B8  D005               	goto	i2l2085
  3037  0013BA                     i2l2081:
  3038                           
  3039                           ;RFID.c: 177: else {
  3040                           ;RFID.c: 180: finalArray_index = 0;
  3041  0013BA  0E00               	movlw	0
  3042  0013BC  6E40               	movwf	decodeManchester@finalArray_index+1,c
  3043  0013BE  0E00               	movlw	0
  3044  0013C0  6E3F               	movwf	decodeManchester@finalArray_index,c
  3045                           
  3046                           ;RFID.c: 181: return;
  3047  0013C2  0012               	return	
  3048  0013C4                     i2l2085:
  3049                           
  3050                           ;RFID.c: 182: }
  3051                           ;RFID.c: 183: finalArray_index++;
  3052  0013C4  4A3F               	infsnz	decodeManchester@finalArray_index,f,c
  3053  0013C6  2A40               	incf	decodeManchester@finalArray_index+1,f,c
  3054  0013C8  0E02               	movlw	2
  3055  0013CA  2641               	addwf	decodeManchester@i,f,c
  3056  0013CC  0E00               	movlw	0
  3057  0013CE  2242               	addwfc	decodeManchester@i+1,f,c
  3058  0013D0  D78F               	goto	i2l2065
  3059  0013D2                     i2l2091:
  3060                           
  3061                           ;RFID.c: 184: }
  3062                           ;RFID.c: 185: finalArray_index = 0;
  3063  0013D2  0E00               	movlw	0
  3064  0013D4  6E40               	movwf	decodeManchester@finalArray_index+1,c
  3065  0013D6  0E00               	movlw	0
  3066  0013D8  6E3F               	movwf	decodeManchester@finalArray_index,c
  3067  0013DA  0012               	return		;funcret
  3068  0013DC                     __end_of_decodeManchester:
  3069                           	opt stack 0
  3070                           pclatu	equ	0xFFB
  3071                           pclath	equ	0xFFA
  3072                           tblptru	equ	0xFF8
  3073                           tblptrh	equ	0xFF7
  3074                           tblptrl	equ	0xFF6
  3075                           tablat	equ	0xFF5
  3076                           prodh	equ	0xFF4
  3077                           prodl	equ	0xFF3
  3078                           intcon	equ	0xFF2
  3079                           postinc0	equ	0xFEE
  3080                           fsr0h	equ	0xFEA
  3081                           fsr0l	equ	0xFE9
  3082                           wreg	equ	0xFE8
  3083                           postdec1	equ	0xFE5
  3084                           fsr1h	equ	0xFE2
  3085                           fsr1l	equ	0xFE1
  3086                           indf2	equ	0xFDF
  3087                           postinc2	equ	0xFDE
  3088                           postdec2	equ	0xFDD
  3089                           fsr2h	equ	0xFDA
  3090                           fsr2l	equ	0xFD9
  3091                           status	equ	0xFD8
  3092                           pclatu	equ	0xFFB
  3093                           pclath	equ	0xFFA
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           prodh	equ	0xFF4
  3099                           prodl	equ	0xFF3
  3100                           intcon	equ	0xFF2
  3101                           postinc0	equ	0xFEE
  3102                           fsr0h	equ	0xFEA
  3103                           fsr0l	equ	0xFE9
  3104                           wreg	equ	0xFE8
  3105                           postdec1	equ	0xFE5
  3106                           fsr1h	equ	0xFE2
  3107                           fsr1l	equ	0xFE1
  3108                           indf2	equ	0xFDF
  3109                           postinc2	equ	0xFDE
  3110                           postdec2	equ	0xFDD
  3111                           fsr2h	equ	0xFDA
  3112                           fsr2l	equ	0xFD9
  3113                           status	equ	0xFD8
  3114                           
  3115                           	psect	rparam
  3116  0000                     pclatu	equ	0xFFB
  3117                           pclath	equ	0xFFA
  3118                           tblptru	equ	0xFF8
  3119                           tblptrh	equ	0xFF7
  3120                           tblptrl	equ	0xFF6
  3121                           tablat	equ	0xFF5
  3122                           prodh	equ	0xFF4
  3123                           prodl	equ	0xFF3
  3124                           intcon	equ	0xFF2
  3125                           postinc0	equ	0xFEE
  3126                           fsr0h	equ	0xFEA
  3127                           fsr0l	equ	0xFE9
  3128                           wreg	equ	0xFE8
  3129                           postdec1	equ	0xFE5
  3130                           fsr1h	equ	0xFE2
  3131                           fsr1l	equ	0xFE1
  3132                           indf2	equ	0xFDF
  3133                           postinc2	equ	0xFDE
  3134                           postdec2	equ	0xFDD
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8
  3138                           
  3139                           	psect	temp
  3140  000054                     btemp:
  3141                           	opt stack 0
  3142  000054                     	ds	1
  3143  0000                     int$flags	set	btemp
  3144                           pclatu	equ	0xFFB
  3145                           pclath	equ	0xFFA
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           intcon	equ	0xFF2
  3153                           postinc0	equ	0xFEE
  3154                           fsr0h	equ	0xFEA
  3155                           fsr0l	equ	0xFE9
  3156                           wreg	equ	0xFE8
  3157                           postdec1	equ	0xFE5
  3158                           fsr1h	equ	0xFE2
  3159                           fsr1l	equ	0xFE1
  3160                           indf2	equ	0xFDF
  3161                           postinc2	equ	0xFDE
  3162                           postdec2	equ	0xFDD
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    10
    Data        204
    BSS         3070
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      83
    BANK0           160     11      25
    BANK1           256      0     204
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    decodeManchester@finalArray	PTR int  size(2) Largest target is 300
		 -> finalArray(BIGRAM[300]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_collectManch
    _collectManch->_parseMultiBitToSingleBit

Critical Paths under _main in BANK0

    _main->_ECAN_Transmit
    _zipCAN->_setBit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2627
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                           _I2CSetup
                         _InitDevice
                    _setup_Interrupt
                             _zipCAN
 ---------------------------------------------------------------------------------
 (1) _zipCAN                                               2     2      0    1109
                                              6 BANK0      2     2      0
                             _setBit
 ---------------------------------------------------------------------------------
 (2) _setBit                                               6     2      4    1109
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _setup_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2CSetup                                             2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10    1111
                                              0 BANK0     11     1     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay                                                2     0      2     262
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 14    14      0     782
                                             13 COMRAM    14    14      0
                       _collectManch
 ---------------------------------------------------------------------------------
 (4) _collectManch                                         1     1      0     782
                                             12 COMRAM     1     1      0
                   _decodeManchester
           _parseMultiBitToSingleBit
 ---------------------------------------------------------------------------------
 (5) _parseMultiBitToSingleBit                            12    10      2     492
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _decodeManchester                                    10     8      2     290
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _I2CSetup
   _InitDevice
   _setup_Interrupt
   _zipCAN
     _setBit

 _ISR (ROOT)
   _collectManch
     _decodeManchester
     _parseMultiBitToSingleBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     BB8      35       82.2%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      CC       8       79.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      19       5       15.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      53       1       88.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     138       6        0.0%
DATA                 0      0     CF0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Dec 22 00:30:23 2015

                            _MAP_BACKLIGHT 0013                                _SSPSTATbits 000FC7  
                              __CFG_BORV$3 000000                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                                        l377 141E  
                                      l379 145E                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                                        _ISR 0008  
                                      _raw 0744                                        _val 0025  
                        _Interrupt_counter 006D                                        prod 000FF3  
                                      wreg 000FE8                  parseMultiBitToSingleBit@i 003D  
                                     ?_ISR 0039                              _MAP_HEARTBEAT 006F  
                                     _B0D0 000E86                                       _B0D1 000E87  
                                     _B0D2 000E88                                       _B0D3 000E89  
                                     _B0D4 000E8A                                       _B0D5 000E8B  
                                     _B0D6 000E8C                                       _B0D7 000E8D  
                            _MAP_DIRECTION 0017                                       l2711 11BA  
                                     l2811 14B6                                       l2901 1780  
                                     l2751 12C8                                       l2743 12A8  
                                     l2831 0F98                                       l2753 12D4  
                                     l2745 12B6                                       l2825 0F62  
                                     l2747 12BA                                       l2739 129A  
                                     l2843 1004                                       l2819 0F2C  
                                     l2781 17F8                                       l2765 16A6  
                                     l2837 0FCE                                       l2775 16D8  
                                     l2769 16BC                                       l2849 103A  
                                     l2797 149C                                       l2799 14A2  
                                     STR_1 0F0B                                       u2040 0F46  
                                     u2050 0F7C                                       u2060 0FB2  
                                     u2070 0FE8                                       u2080 101E  
                                     u2090 1054                                       u1904 17E8  
                                     u1905 17E2                                       i2l90 0064  
                                     _main 174E                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       fsr0l 000FE9  
                                     fsr2h 000FDA                                       fsr1l 000FE1  
                                     indf2 000FDF                                       fsr2l 000FD9  
                                     btemp 0054                           __end_of_I2CSetup 16F2  
                           ??_collectManch 0045                                       pclat 000FFA  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 00A0                              __CFG_IESO$OFF 000000  
                         __end_of_CANSetup 12E0                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000010                                      ??_ISR 0046  
                            _MAP_SAFETYPIN 001B                                      _B0DLC 000E85  
                                    ?_main 0039                                      _BSEL0 000E7D  
                                    _MSEL0 000E79                                      _MSEL1 000E7A  
                                    _MSEL2 000E7B                                      _MSEL3 000E7C  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                             _i2c_byte_count 002C  
                                    _Delay 17F8                              __CFG_WRT0$OFF 000000  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                                    _inPin 0075                            __end_of_dpowers 0F0B  
                                    _count 002B                                      _index 0021  
                                    _point 0023                                      tablat 000FF5  
                                    status 000FD8                                 _InitDevice 1606  
                    __size_of_ECAN_Receive 00DE                            __initialization 1582  
                             __end_of_main 1790                                     ??_main 006B  
                            __activetblptr 000002          __size_of_parseMultiBitToSingleBit 0144  
                ?_parseMultiBitToSingleBit 0039                             __CFG_RETEN$OFF 000000  
                                   ?_Delay 0060                                     _B0EIDH 000E83  
                                   _B0EIDL 000E84                           ECAN_Transmit@DLC 0061  
                                   _B0SIDH 000E81                                     _B0SIDL 000E82  
                                I2CSetup@i 0060                                     _CANCON 000F6F  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                             _ECAN_Receive 13DC                                     i2l2021 1092  
                          __CFG_BBSIZ$BB2K 000000                                     i2l2041 1128  
                                   i2l2033 10E8                                     i2l2025 10A2  
                                   i2l2053 118E                                     i2l2037 1108  
                                   i2l2029 10C8                                     i2l2047 1176  
                                   i2l2081 13BA                                     i2l2065 12F0  
                                   i2l2075 135A                                     i2l2091 13D2  
                                   i2l2059 11B0                                     i2l2085 13C4  
                                   i2l2069 1300                   __size_of_setup_Interrupt 000A  
                                   _OSCCON 000FD3                                     _RXB0D0 000F66  
                                   _RXB0D1 000F67                                     _RXB0D2 000F68  
                                   _RXB0D3 000F69                                     _RXB0D4 000F6A  
                                   _RXB1D0 000F36                                     _RXB0D5 000F6B  
                                   _RXB1D1 000F37                                     _RXB0D6 000F6C  
                                   _RXB1D2 000F38                                     _RXB0D7 000F6D  
                                   _RXB1D3 000F39                                     _RXB1D4 000F3A  
                                   _RXB1D5 000F3B                                     _RXB1D6 000F3C  
                                   _RXB1D7 000F3D                                     _TXB0D0 000F26  
                                   _TXB0D1 000F27                                     _TXB0D2 000F28  
                                   _TXB0D3 000F29                                     _TXB0D4 000F2A  
                                   _TXB0D5 000F2B                                     _TXB0D6 000F2C  
                                   _TXB0D7 000F2D                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                             __CFG_XINST$OFF 000000  
                 __end_of_decodeManchester 13DC                             __CFG_STVREN$ON 000000  
                        decodeManchester@i 0041                           _heartBeatCounter 0071  
                                   _ledPin 0077                                     _bufnum 01C8  
                                   clear_0 158A                                     clear_1 15A6  
                                   clear_2 15B2                                     _setBit 17D2  
                                   _zipCAN 0F10                       __end_of_collectManch 174E  
                                ?_I2CSetup 0039                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                  ?_CANSetup 0039  
                               __accesstop 0060                    __end_of__initialization 15F8  
                 ECAN_Transmit@TRANSMIT_ID 0062                              ___rparam_used 000001  
                              ?_InitDevice 0039                                _i2c_reg_map 0001  
                            __end_of_Delay 1810                             __pcstackCOMRAM 0039  
                             __pidataBANK0 181A                               __pidataBANK1 14BA  
                   __size_of_ECAN_Transmit 0042                                 ??_I2CSetup 0060  
                                  ??_Delay 0062                                setBit@shift 0060  
                              setBit@value 0062                                 ??_CANSetup 0060  
                               __pbssBANK0 006B                                 __pbssBANK1 01C8  
                          __CFG_PLLCFG$OFF 000000                          ??_setup_Interrupt 0060  
                        ECAN_Transmit@SIDH 006A                          ECAN_Transmit@SIDL 0060  
                                _B0CONbits 000E80                                    _ECANCON 000F72  
                                  ?_setBit 0060                                    ?_zipCAN 0039  
                                  _BRGCON1 000E43                                    _BRGCON2 000E44  
                                  _BRGCON3 000E45                                 _finalArray 0C58  
                         __CFG_CANMX$PORTB 000000                        __size_of_InitDevice 007E  
                                  _RXB0DLC 000F65                                    _RXB1DLC 000F35  
                                  _RXB0CON 000F60                                    _RXB1CON 000F30  
                                  i2u95_40 10D8                                    i2u97_40 1118  
                                  _TXB0DLC 000F25                                    i2u99_40 1186  
                                  _RXFCON0 000E46                                    _RXFCON1 000E47  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                  _SSPSTAT 000FC7                              _ECAN_Transmit 1790  
                          __CFG_PWRTEN$OFF 000000                                    __Hparam 0000  
                                  __Lparam 0000                               __psmallconst 0F00  
                    __size_of_collectManch 005C                                    __pcinit 1582  
                                  __ramtop 0F00                            __size_of_setBit 0026  
                                  __ptext0 174E                                    __ptext1 0F10  
                                  __ptext2 17D2                                    __ptext3 1810  
                                  __ptext4 1606                                    __ptext5 1684  
                                  __ptext6 1790                                    __ptext7 13DC  
                                  __ptext8 17F8                                    __ptext9 11B6  
                          __size_of_zipCAN 0162                                  _T0CONbits 000FD5  
                             __size_of_ISR 0098                                    _dpowers 0F01  
                        __CFG_MSSPMSK$MSK7 000000                                    _temp_D2 002E  
                                  _temp_D3 002F                                    _temp_D4 0030  
                                  _temp_D5 0031                                    _temp_D6 0032  
                                  _temp_D7 0033                             ?_ECAN_Transmit 0060  
                                _MAP_BRAKE 0015                       end_of_initialization 15F8  
                            __Lmediumconst 0000           decodeManchester@finalArray_index 003F  
                             _collectManch 16F2                           _buttonWasPressed 002A  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc2 000FDE  
                        ?_decodeManchester 0039                         ??_decodeManchester 003B  
                                _PORTBbits 000F81                           __CFG_FOSC$INTIO2 000000  
           parseMultiBitToSingleBit@inARow 0043                          __size_of_I2CSetup 006E  
                        __CFG_SOSCSEL$HIGH 000000                          __size_of_CANSetup 012A  
                             ??_InitDevice 0060                               _i2c_reg_addr 002D  
                 _parseMultiBitToSingleBit 1072                             __end_of_setBit 17F8  
                           __end_of_zipCAN 1072                        start_initialization 1582  
                          ??_ECAN_Transmit 006A                                __end_of_ISR 00A0  
                       __end_of_InitDevice 1684                            _setup_Interrupt 1810  
                              _CANSTATbits 000F6E            parseMultiBitToSingleBit@lastVal 0041  
                              __pdataBANK0 0075                                __pdataBANK1 0100  
                                 ??_setBit 0064                                   ??_zipCAN 0066  
                              __pbssBIGRAM 01CC                                __pbssCOMRAM 0001  
                            __pcstackBANK0 0060                         ECAN_Transmit@DATA1 0063  
                       ECAN_Transmit@DATA2 0064                         ECAN_Transmit@DATA3 0065  
                       ECAN_Transmit@DATA4 0066                         ECAN_Transmit@DATA5 0067  
                       ECAN_Transmit@DATA6 0068                         ECAN_Transmit@DATA7 0069  
                                __pintcode 0008                      _MAP_REC_BATTERYSTATUS 0028  
                                _bitlenctr 001F                             _heartbeatCount 0073  
                                 _I2C_FLAG 0011                                __smallconst 0F00  
                  __end_of_setup_Interrupt 181A                                   _I2CSetup 1684  
                           __size_of_Delay 0018                                   _CANSetup 11B6  
                            ?_ECAN_Receive 0039                                   _LATAbits 000F89  
                                 _LATCbits 000F8B                                   _PIE1bits 000F9D  
                                _temp_EIDH 0035                                  _temp_EIDL 0036  
                                _temp_SIDH 0037                                  _temp_SIDL 0038  
                                 i2u127_40 16FC                                   i2u127_48 16FE  
                                 _PIR1bits 000F9E                                   _PIR5bits 000F77  
                                 _RXB0EIDH 000F63                                   _RXB0EIDL 000F64  
                                 _RXB1EIDH 000F33                                   _RXB1EIDL 000F34  
                                 _RCONbits 000FD0                                   _RXB0SIDH 000F61  
                                 _RXB0SIDL 000F62                                   _RXB1SIDH 000F31  
                                 _RXF0EIDH 000EE2                                   _RXB1SIDL 000F32  
                                 _RXF0EIDL 000EE3                                   _RXF1EIDH 000EE6  
                                 _RXF1EIDL 000EE7                                   _RXF2EIDH 000EEA  
                                 _RXF2EIDL 000EEB                                   _RXF0SIDH 000EE0  
                                 _RXF0SIDL 000EE1                                   _TXB0EIDH 000F23  
                                 _RXF1SIDH 000EE4                                   _TXB0EIDL 000F24  
                                 _RXF1SIDL 000EE5                                   _RXF2SIDH 000EE8  
                                 _RXF2SIDL 000EE9                                   _RXM0EIDH 000EFA  
                                 _RXM0EIDL 000EFB                                   _TXB0SIDH 000F21  
                                 _RXM1EIDH 000EFE                                   _TXB0SIDL 000F22  
                                 _RXM1EIDL 000EFF                                   _RXFBCON0 000E71  
                                 _RXFBCON1 000E72                                   _RXFBCON2 000E73  
                                 _RXFBCON3 000E74                                   _RXFBCON4 000E75  
                                 _RXFBCON5 000E76                                   _RXFBCON6 000E77  
                                 _RXFBCON7 000E78                                   _RXM0SIDH 000EF8  
                                 _RXM0SIDL 000EF9                                   _RXM1SIDH 000EFC  
                                 _RXM1SIDL 000EFD                           _MAP_REC_VELOCITY 0029  
                    ECAN_Receive@RXMsgFlag 0060                          process_buf@F18129 0100  
                              _MAP_BITDATA 0027                             ??_ECAN_Receive 0060  
                __size_of_decodeManchester 00FC                                _MAP_H_BLINK 0019  
                                copy_data0 15CC                                  copy_data1 15EC  
                              _MAP_V_BLINK 001D                 ??_parseMultiBitToSingleBit 003B  
                                 __Hrparam 0000                                   __Lrparam 0000  
                       __CFG_BOREN$SBORDIS 000000                                   _bitArray 01CC  
                         ?_setup_Interrupt 0039                                   __ptext11 16F2  
                                 __ptext12 1072                                   __ptext13 12E0  
                                 _curState 01CA                              __size_of_main 0042  
                               _FIRST_SEND 006B                                   _temp_DLC 0034  
                                 int$flags 0054                        __CFG_INTOSCSEL$HIGH 000000  
                               Delay@count 0060                                _RXB0CONbits 000F60  
                              _RXB1CONbits 000F30                 decodeManchester@finalArray 0039  
                       __CFG_WDTEN$SWDTDIS 000000                                _OSCTUNEbits 000F9B  
                               _INTCONbits 000FF2                      __end_of_ECAN_Transmit 17D2  
                                 intlevel2 0000                                _TXB0CONbits 000F20  
                               _OSCCONbits 000FD3                         __CFG_WDTPS$1048576 000000  
                     __end_of_ECAN_Receive 14BA  parseMultiBitToSingleBit@resultArray_index 003F  
                              _resultArray 0B2C        parseMultiBitToSingleBit@startOffset 0039  
                              _SSPCON1bits 000FC6                           _decodeManchester 12E0  
                      __CFG_BORPWR$ZPBORMV 000000           __end_of_parseMultiBitToSingleBit 11B6  
                            ?_collectManch 0039  
