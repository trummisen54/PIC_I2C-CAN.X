

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 27 12:48:23 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     _B0CONbits	set	3712
    32  0000                     _B0D0	set	3718
    33  0000                     _B0D1	set	3719
    34  0000                     _B0D2	set	3720
    35  0000                     _B0D3	set	3721
    36  0000                     _B0D4	set	3722
    37  0000                     _B0D5	set	3723
    38  0000                     _B0D6	set	3724
    39  0000                     _B0D7	set	3725
    40  0000                     _B0DLC	set	3717
    41  0000                     _B0EIDH	set	3715
    42  0000                     _B0EIDL	set	3716
    43  0000                     _B0SIDH	set	3713
    44  0000                     _B0SIDL	set	3714
    45  0000                     _BRGCON1	set	3651
    46  0000                     _BRGCON2	set	3652
    47  0000                     _BRGCON3	set	3653
    48  0000                     _BSEL0	set	3709
    49  0000                     _MSEL0	set	3705
    50  0000                     _MSEL1	set	3706
    51  0000                     _MSEL2	set	3707
    52  0000                     _MSEL3	set	3708
    53  0000                     _RXF0EIDH	set	3810
    54  0000                     _RXF0EIDL	set	3811
    55  0000                     _RXF0SIDH	set	3808
    56  0000                     _RXF0SIDL	set	3809
    57  0000                     _RXF1EIDH	set	3814
    58  0000                     _RXF1EIDL	set	3815
    59  0000                     _RXF1SIDH	set	3812
    60  0000                     _RXF1SIDL	set	3813
    61  0000                     _RXF2EIDH	set	3818
    62  0000                     _RXF2EIDL	set	3819
    63  0000                     _RXF2SIDH	set	3816
    64  0000                     _RXF2SIDL	set	3817
    65  0000                     _RXFBCON0	set	3697
    66  0000                     _RXFBCON1	set	3698
    67  0000                     _RXFBCON2	set	3699
    68  0000                     _RXFBCON3	set	3700
    69  0000                     _RXFBCON4	set	3701
    70  0000                     _RXFBCON5	set	3702
    71  0000                     _RXFBCON6	set	3703
    72  0000                     _RXFBCON7	set	3704
    73  0000                     _RXFCON0	set	3654
    74  0000                     _RXFCON1	set	3655
    75  0000                     _RXM0EIDH	set	3834
    76  0000                     _RXM0EIDL	set	3835
    77  0000                     _RXM0SIDH	set	3832
    78  0000                     _RXM0SIDL	set	3833
    79  0000                     _RXM1EIDH	set	3838
    80  0000                     _RXM1EIDL	set	3839
    81  0000                     _RXM1SIDH	set	3836
    82  0000                     _RXM1SIDL	set	3837
    83  0000                     _ANCON0	set	3933
    84  0000                     _ANCON1	set	3932
    85  0000                     _RXB1CON	set	3888
    86  0000                     _RXB1CONbits	set	3888
    87  0000                     _RXB1D0	set	3894
    88  0000                     _RXB1D1	set	3895
    89  0000                     _RXB1D2	set	3896
    90  0000                     _RXB1D3	set	3897
    91  0000                     _RXB1D4	set	3898
    92  0000                     _RXB1D5	set	3899
    93  0000                     _RXB1D6	set	3900
    94  0000                     _RXB1D7	set	3901
    95  0000                     _RXB1DLC	set	3893
    96  0000                     _RXB1EIDH	set	3891
    97  0000                     _RXB1EIDL	set	3892
    98  0000                     _RXB1SIDH	set	3889
    99  0000                     _RXB1SIDL	set	3890
   100  0000                     _TXB0CONbits	set	3872
   101  0000                     _TXB0D0	set	3878
   102  0000                     _TXB0D1	set	3879
   103  0000                     _TXB0D2	set	3880
   104  0000                     _TXB0D3	set	3881
   105  0000                     _TXB0D4	set	3882
   106  0000                     _TXB0D5	set	3883
   107  0000                     _TXB0D6	set	3884
   108  0000                     _TXB0D7	set	3885
   109  0000                     _TXB0DLC	set	3877
   110  0000                     _TXB0EIDH	set	3875
   111  0000                     _TXB0EIDL	set	3876
   112  0000                     _TXB0SIDH	set	3873
   113  0000                     _TXB0SIDL	set	3874
   114  0000                     _CANCON	set	3951
   115  0000                     _CANSTATbits	set	3950
   116  0000                     _ECANCON	set	3954
   117  0000                     _INTCONbits	set	4082
   118  0000                     _LATAbits	set	3977
   119  0000                     _LATCbits	set	3979
   120  0000                     _OSCCON	set	4051
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _OSCTUNEbits	set	3995
   123  0000                     _PIE1bits	set	3997
   124  0000                     _PIR1bits	set	3998
   125  0000                     _PIR5bits	set	3959
   126  0000                     _PORTBbits	set	3969
   127  0000                     _RCONbits	set	4048
   128  0000                     _RXB0CON	set	3936
   129  0000                     _RXB0CONbits	set	3936
   130  0000                     _RXB0D0	set	3942
   131  0000                     _RXB0D1	set	3943
   132  0000                     _RXB0D2	set	3944
   133  0000                     _RXB0D3	set	3945
   134  0000                     _RXB0D4	set	3946
   135  0000                     _RXB0D5	set	3947
   136  0000                     _RXB0D6	set	3948
   137  0000                     _RXB0D7	set	3949
   138  0000                     _RXB0DLC	set	3941
   139  0000                     _RXB0EIDH	set	3939
   140  0000                     _RXB0EIDL	set	3940
   141  0000                     _RXB0SIDH	set	3937
   142  0000                     _RXB0SIDL	set	3938
   143  0000                     _SSPADD	set	4040
   144  0000                     _SSPBUF	set	4041
   145  0000                     _SSPCON1	set	4038
   146  0000                     _SSPCON1bits	set	4038
   147  0000                     _SSPCON2	set	4037
   148  0000                     _SSPSTAT	set	4039
   149  0000                     _SSPSTATbits	set	4039
   150  0000                     _T0CONbits	set	4053
   151  0000                     _TRISA	set	3986
   152  0000                     _TRISB	set	3987
   153  0000                     _TRISC	set	3988
   154                           
   155                           ; #config settings
   156  0000                     
   157                           	psect	cinit
   158  000E44                     __pcinit:
   159                           	opt stack 0
   160  000E44                     start_initialization:
   161                           	opt stack 0
   162  000E44                     __initialization:
   163                           	opt stack 0
   164                           
   165                           ; Clear objects allocated to BIGRAM (1302 bytes)
   166  000E44  EE00  F0BA         	lfsr	0,__pbssBIGRAM
   167  000E48  EE15 F016          	lfsr	1,1302
   168  000E4C                     clear_0:
   169  000E4C  6AEE               	clrf	postinc0,c
   170  000E4E  50E5               	movf	postdec1,w,c
   171  000E50  50E1               	movf	fsr1l,w,c
   172  000E52  E1FC               	bnz	clear_0
   173  000E54  50E2               	movf	fsr1h,w,c
   174  000E56  E1FA               	bnz	clear_0
   175                           
   176                           ; Clear objects allocated to BANK0 (14 bytes)
   177  000E58  EE00  F0AC         	lfsr	0,__pbssBANK0
   178  000E5C  0E0E               	movlw	14
   179  000E5E                     clear_1:
   180  000E5E  6AEE               	clrf	postinc0,c
   181  000E60  06E8               	decf	wreg,f,c
   182  000E62  E1FD               	bnz	clear_1
   183                           
   184                           ; Clear objects allocated to COMRAM (52 bytes)
   185  000E64  EE00  F001         	lfsr	0,__pbssCOMRAM
   186  000E68  0E34               	movlw	52
   187  000E6A                     clear_2:
   188  000E6A  6AEE               	clrf	postinc0,c
   189  000E6C  06E8               	decf	wreg,f,c
   190  000E6E  E1FD               	bnz	clear_2
   191  000E70                     end_of_initialization:
   192                           	opt stack 0
   193  000E70                     __end_of__initialization:
   194                           	opt stack 0
   195  000E70  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   196  000E72  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   197  000E74  0100               	movlb	0
   198  000E76  EF21  F005         	goto	_main	;jump to C main() function
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           postdec1	equ	0xFE5
   202                           fsr1h	equ	0xFE2
   203                           fsr1l	equ	0xFE1
   204                           
   205                           	psect	bssCOMRAM
   206  000001                     __pbssCOMRAM:
   207                           	opt stack 0
   208  000001                     _i2c_reg_map:
   209                           	opt stack 0
   210  000001                     	ds	16
   211  000011                     _I2C_FLAG:
   212                           	opt stack 0
   213  000011                     	ds	2
   214  000013                     _MAP_BACKLIGHT:
   215                           	opt stack 0
   216  000013                     	ds	2
   217  000015                     _MAP_BRAKE:
   218                           	opt stack 0
   219  000015                     	ds	2
   220  000017                     _MAP_DIRECTION:
   221                           	opt stack 0
   222  000017                     	ds	2
   223  000019                     _MAP_H_BLINK:
   224                           	opt stack 0
   225  000019                     	ds	2
   226  00001B                     _MAP_SAFETYPIN:
   227                           	opt stack 0
   228  00001B                     	ds	2
   229  00001D                     _MAP_V_BLINK:
   230                           	opt stack 0
   231  00001D                     	ds	2
   232  00001F                     _rawIndex:
   233                           	opt stack 0
   234  00001F                     	ds	2
   235  000021                     _val:
   236                           	opt stack 0
   237  000021                     	ds	2
   238  000023                     _MAP_BITDATA:
   239                           	opt stack 0
   240  000023                     	ds	1
   241  000024                     _MAP_REC_BATTERYSTATUS:
   242                           	opt stack 0
   243  000024                     	ds	1
   244  000025                     _MAP_REC_VELOCITY:
   245                           	opt stack 0
   246  000025                     	ds	1
   247  000026                     _buttonWasPressed:
   248                           	opt stack 0
   249  000026                     	ds	1
   250  000027                     _count:
   251                           	opt stack 0
   252  000027                     	ds	1
   253  000028                     _i2c_byte_count:
   254                           	opt stack 0
   255  000028                     	ds	1
   256  000029                     _i2c_reg_addr:
   257                           	opt stack 0
   258  000029                     	ds	1
   259  00002A                     _temp_D2:
   260                           	opt stack 0
   261  00002A                     	ds	1
   262  00002B                     _temp_D3:
   263                           	opt stack 0
   264  00002B                     	ds	1
   265  00002C                     _temp_D4:
   266                           	opt stack 0
   267  00002C                     	ds	1
   268  00002D                     _temp_D5:
   269                           	opt stack 0
   270  00002D                     	ds	1
   271  00002E                     _temp_D6:
   272                           	opt stack 0
   273  00002E                     	ds	1
   274  00002F                     _temp_D7:
   275                           	opt stack 0
   276  00002F                     	ds	1
   277  000030                     _temp_DLC:
   278                           	opt stack 0
   279  000030                     	ds	1
   280  000031                     _temp_EIDH:
   281                           	opt stack 0
   282  000031                     	ds	1
   283  000032                     _temp_EIDL:
   284                           	opt stack 0
   285  000032                     	ds	1
   286  000033                     _temp_SIDH:
   287                           	opt stack 0
   288  000033                     	ds	1
   289  000034                     _temp_SIDL:
   290                           	opt stack 0
   291  000034                     	ds	1
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1h	equ	0xFE2
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	bssBANK0
   299  0000AC                     __pbssBANK0:
   300                           	opt stack 0
   301  0000AC                     _FIRST_SEND:
   302                           	opt stack 0
   303  0000AC                     	ds	2
   304  0000AE                     _Interrupt_counter:
   305                           	opt stack 0
   306  0000AE                     	ds	2
   307  0000B0                     _MAP_HEARTBEAT:
   308                           	opt stack 0
   309  0000B0                     	ds	2
   310  0000B2                     _bitlenctr:
   311                           	opt stack 0
   312  0000B2                     	ds	2
   313  0000B4                     _curState:
   314                           	opt stack 0
   315  0000B4                     	ds	2
   316  0000B6                     _heartBeatCounter:
   317                           	opt stack 0
   318  0000B6                     	ds	2
   319  0000B8                     _heartbeatCount:
   320                           	opt stack 0
   321  0000B8                     	ds	2
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1h	equ	0xFE2
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	bssBIGRAM
   329  0000BA                     __pbssBIGRAM:
   330                           	opt stack 0
   331  0000BA                     _raw:
   332                           	opt stack 0
   333  0000BA                     	ds	500
   334  0002AE                     _singleArray:
   335                           	opt stack 0
   336  0002AE                     	ds	400
   337  00043E                     _bitArray:
   338                           	opt stack 0
   339  00043E                     	ds	402
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1h	equ	0xFE2
   344                           fsr1l	equ	0xFE1
   345                           
   346                           	psect	cstackBANK0
   347  000060                     __pcstackBANK0:
   348                           	opt stack 0
   349  000060                     ??_bitToCode:
   350  000060                     multiToSingle@_long:
   351                           	opt stack 0
   352  000060                     singleToBit@oopcCount:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x0
   356  000060                     	ds	2
   357  000062                     multiToSingle@_middle:
   358                           	opt stack 0
   359  000062                     singleToBit@lastVal:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x2
   363  000062                     	ds	2
   364  000064                     multiToSingle@_short:
   365                           	opt stack 0
   366  000064                     singleToBit@OutOfPhaseCorrected:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x4
   370  000064                     	ds	2
   371  000066                     multiToSingle@totError:
   372                           	opt stack 0
   373  000066                     singleToBit@i_1627:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x6
   377  000066                     	ds	2
   378  000068                     multiToSingle@v:
   379                           	opt stack 0
   380  000068                     singleToBit@start:
   381                           	opt stack 0
   382  000068                     bitToCode@code:
   383                           	opt stack 0
   384                           
   385                           ; 60 bytes @ 0x8
   386  000068                     	ds	2
   387  00006A                     multiToSingle@i:
   388                           	opt stack 0
   389  00006A                     singleToBit@i:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0xA
   393  00006A                     	ds	2
   394  00006C                     singleToBit@i_1626:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0xC
   398  00006C                     	ds	2
   399  00006E                     singleToBit@k:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0xE
   403  00006E                     	ds	54
   404  0000A4                     bitToCode@stanna:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x44
   408  0000A4                     	ds	2
   409  0000A6                     bitToCode@i:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x46
   413  0000A6                     	ds	2
   414  0000A8                     main@start_condition:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x48
   418  0000A8                     	ds	2
   419  0000AA                     main@start:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x4A
   423  0000AA                     	ds	2
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1h	equ	0xFE2
   428                           fsr1l	equ	0xFE1
   429                           
   430                           	psect	cstackCOMRAM
   431  000035                     __pcstackCOMRAM:
   432                           	opt stack 0
   433  000035                     ??_sample:
   434  000035                     
   435                           ; 2 bytes @ 0x0
   436  000035                     	ds	1
   437  000036                     ??_ISR:
   438                           
   439                           ; 0 bytes @ 0x1
   440  000036                     	ds	14
   441  000044                     ??_singleToBit:
   442  000044                     ?_multiToSingle:
   443                           	opt stack 0
   444  000044                     ?_findStart:
   445                           	opt stack 0
   446  000044                     ?___wmul:
   447                           	opt stack 0
   448  000044                     ECAN_Receive@RXMsgFlag:
   449                           	opt stack 0
   450  000044                     ECAN_Transmit@SIDL:
   451                           	opt stack 0
   452  000044                     setBit@shift:
   453                           	opt stack 0
   454  000044                     I2CSetup@i:
   455                           	opt stack 0
   456  000044                     Delay@count:
   457                           	opt stack 0
   458  000044                     ___wmul@multiplier:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0xF
   462  000044                     	ds	1
   463  000045                     ECAN_Transmit@DLC:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x10
   467  000045                     	ds	1
   468  000046                     ??_multiToSingle:
   469  000046                     ECAN_Transmit@TRANSMIT_ID:
   470                           	opt stack 0
   471  000046                     setBit@value:
   472                           	opt stack 0
   473  000046                     ___wmul@multiplicand:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x11
   477  000046                     	ds	1
   478  000047                     ECAN_Transmit@DATA1:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x12
   482  000047                     	ds	1
   483  000048                     ??_setBit:
   484  000048                     ECAN_Transmit@DATA2:
   485                           	opt stack 0
   486  000048                     findStart@count:
   487                           	opt stack 0
   488  000048                     ___wmul@product:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x13
   492  000048                     	ds	1
   493  000049                     ECAN_Transmit@DATA3:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x14
   497  000049                     	ds	1
   498  00004A                     ??_zipCAN:
   499  00004A                     ECAN_Transmit@DATA4:
   500                           	opt stack 0
   501  00004A                     findStart@i:
   502                           	opt stack 0
   503  00004A                     bitToCode@start:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x15
   507  00004A                     	ds	1
   508  00004B                     ECAN_Transmit@DATA5:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x16
   512  00004B                     	ds	1
   513  00004C                     ECAN_Transmit@DATA6:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x17
   517  00004C                     	ds	1
   518  00004D                     ECAN_Transmit@DATA7:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x18
   522  00004D                     	ds	1
   523  00004E                     ECAN_Transmit@SIDH:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x19
   527  00004E                     	ds	1
   528  00004F                     postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           postdec1	equ	0xFE5
   531                           fsr1h	equ	0xFE2
   532                           fsr1l	equ	0xFE1
   533                           
   534                           ; 0 bytes @ 0x1A
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 15 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  start           2   74[BANK0 ] int 
   545 ;;  start_condit    2   72[BANK0 ] int 
   546 ;; Return value:  Size  Location     Type
   547 ;;                  2   98[None  ] int 
   548 ;; Registers used:
   549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   556 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   558 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   559 ;;Total ram usage:        4 bytes
   560 ;; Hardware stack levels required when called:    4
   561 ;; This function calls:
   562 ;;		_CANSetup
   563 ;;		_Delay
   564 ;;		_ECAN_Receive
   565 ;;		_ECAN_Transmit
   566 ;;		_I2CSetup
   567 ;;		_InitDevice
   568 ;;		_bitToCode
   569 ;;		_findStart
   570 ;;		_multiToSingle
   571 ;;		_setup_Interrupt
   572 ;;		_singleToBit
   573 ;;		_zipCAN
   574 ;; This function is called by:
   575 ;;		Startup code after reset
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text0
   580  000A42                     __ptext0:
   581                           	opt stack 0
   582  000A42                     _main:
   583                           	opt stack 27
   584                           
   585                           ;main.c: 17: InitDevice();
   586                           
   587                           ; BSR set to: 0
   588                           ;incstack = 0
   589  000A42  EC5C  F006         	call	_InitDevice	;wreg free
   590                           
   591                           ;main.c: 18: setup_Interrupt();
   592  000A46  EC67  F007         	call	_setup_Interrupt	;wreg free
   593                           
   594                           ;main.c: 19: CANSetup();
   595  000A4A  ECFB  F003         	call	_CANSetup	;wreg free
   596                           
   597                           ;main.c: 20: I2CSetup();
   598  000A4E  ECD2  F006         	call	_I2CSetup	;wreg free
   599                           
   600                           ;main.c: 22: heartBeatCounter = 0;
   601  000A52  0E00               	movlw	0
   602  000A54  0100               	movlb	0	; () banked
   603  000A56  6FB7               	movwf	(_heartBeatCounter+1)& (0+255),b
   604  000A58  0E00               	movlw	0
   605  000A5A  6FB6               	movwf	_heartBeatCounter& (0+255),b
   606                           
   607                           ; BSR set to: 0
   608                           ;main.c: 23: FIRST_SEND = 1;
   609  000A5C  0E00               	movlw	0
   610  000A5E  0100               	movlb	0	; () banked
   611  000A60  6FAD               	movwf	(_FIRST_SEND+1)& (0+255),b
   612  000A62  0E01               	movlw	1
   613  000A64  6FAC               	movwf	_FIRST_SEND& (0+255),b
   614                           
   615                           ; BSR set to: 0
   616                           ;main.c: 24: I2C_FLAG = 0;
   617  000A66  0E00               	movlw	0
   618  000A68  6E12               	movwf	_I2C_FLAG+1,c
   619  000A6A  0E00               	movlw	0
   620  000A6C  6E11               	movwf	_I2C_FLAG,c
   621                           
   622                           ; BSR set to: 0
   623                           ;main.c: 26: LATAbits.LATA7 = 1;
   624  000A6E  8E89               	bsf	3977,7,c	;volatile
   625                           
   626                           ; BSR set to: 0
   627                           ;main.c: 27: LATCbits.LATC6 = 0;
   628  000A70  9C8B               	bcf	3979,6,c	;volatile
   629                           
   630                           ; BSR set to: 0
   631                           ;main.c: 28: LATCbits.LATC7 = 0;
   632  000A72  9E8B               	bcf	3979,7,c	;volatile
   633  000A74                     l2793:
   634                           
   635                           ;main.c: 32: int start_condition = multiToSingle();
   636  000A74  EC25  F003         	call	_multiToSingle	;wreg free
   637  000A78  C044  F0A8         	movff	?_multiToSingle,main@start_condition
   638  000A7C  C045  F0A9         	movff	?_multiToSingle+1,main@start_condition+1
   639                           
   640                           ;main.c: 34: if(start_condition == 1){
   641  000A80  0100               	movlb	0	; () banked
   642  000A82  05A8               	decf	main@start_condition& (0+255),w,b
   643  000A84  0100               	movlb	0	; () banked
   644  000A86  11A9               	iorwf	(main@start_condition+1)& (0+255),w,b
   645  000A88  A4D8               	btfss	status,2,c
   646  000A8A  D00E               	goto	l2801
   647                           
   648                           ; BSR set to: 0
   649                           ;main.c: 35: singleToBit();
   650  000A8C  EC52  F000         	call	_singleToBit	;wreg free
   651                           
   652                           ;main.c: 36: int start = findStart();
   653  000A90  EC1B  F006         	call	_findStart	;wreg free
   654  000A94  C044  F0AA         	movff	?_findStart,main@start
   655  000A98  C045  F0AB         	movff	?_findStart+1,main@start+1
   656                           
   657                           ;main.c: 37: bitToCode(start);
   658  000A9C  C0AA  F04A         	movff	main@start,bitToCode@start
   659  000AA0  C0AB  F04B         	movff	main@start+1,bitToCode@start+1
   660  000AA4  EC38  F002         	call	_bitToCode	;wreg free
   661  000AA8                     l2801:
   662                           
   663                           ;main.c: 39: }
   664                           ;main.c: 40: Delay(10);
   665  000AA8  0E00               	movlw	0
   666  000AAA  6E45               	movwf	Delay@count+1,c
   667  000AAC  0E0A               	movlw	10
   668  000AAE  6E44               	movwf	Delay@count,c
   669  000AB0  EC5E  F007         	call	_Delay	;wreg free
   670  000AB4  D7DF               	goto	l2793
   671  000AB6                     l2803:
   672                           
   673                           ;main.c: 49: if(ECAN_Receive()){
   674  000AB6  ECB0  F005         	call	_ECAN_Receive	;wreg free
   675  000ABA  0900               	iorlw	0
   676  000ABC  B4D8               	btfsc	status,2,c
   677  000ABE  D01B               	goto	l2825
   678                           
   679                           ;main.c: 50: FIRST_SEND = 0;
   680  000AC0  0E00               	movlw	0
   681  000AC2  0100               	movlb	0	; () banked
   682  000AC4  6FAD               	movwf	(_FIRST_SEND+1)& (0+255),b
   683  000AC6  0E00               	movlw	0
   684  000AC8  6FAC               	movwf	_FIRST_SEND& (0+255),b
   685                           
   686                           ; BSR set to: 0
   687                           ;main.c: 51: LATCbits.LATC6 = 1;
   688  000ACA  8C8B               	bsf	3979,6,c	;volatile
   689                           
   690                           ; BSR set to: 0
   691                           ;main.c: 52: i2c_reg_map[0] = MAP_REC_BATTERYSTATUS;
   692  000ACC  C024  F001         	movff	_MAP_REC_BATTERYSTATUS,_i2c_reg_map	;volatile
   693                           
   694                           ; BSR set to: 0
   695                           ;main.c: 53: i2c_reg_map[1] = MAP_REC_VELOCITY;
   696  000AD0  C025  F002         	movff	_MAP_REC_VELOCITY,_i2c_reg_map+1	;volatile
   697                           
   698                           ; BSR set to: 0
   699                           ;main.c: 54: i2c_reg_map[2] = temp_D2;
   700  000AD4  C02A  F003         	movff	_temp_D2,_i2c_reg_map+2	;volatile
   701                           
   702                           ; BSR set to: 0
   703                           ;main.c: 55: i2c_reg_map[3] = temp_D3;
   704  000AD8  C02B  F004         	movff	_temp_D3,_i2c_reg_map+3	;volatile
   705                           
   706                           ; BSR set to: 0
   707                           ;main.c: 56: i2c_reg_map[4] = temp_D4;
   708  000ADC  C02C  F005         	movff	_temp_D4,_i2c_reg_map+4	;volatile
   709                           
   710                           ; BSR set to: 0
   711                           ;main.c: 57: i2c_reg_map[5] = temp_D5;
   712  000AE0  C02D  F006         	movff	_temp_D5,_i2c_reg_map+5	;volatile
   713                           
   714                           ; BSR set to: 0
   715                           ;main.c: 58: i2c_reg_map[6] = temp_D6;
   716  000AE4  C02E  F007         	movff	_temp_D6,_i2c_reg_map+6	;volatile
   717                           
   718                           ; BSR set to: 0
   719                           ;main.c: 59: i2c_reg_map[7] = temp_D7;
   720  000AE8  C02F  F008         	movff	_temp_D7,_i2c_reg_map+7	;volatile
   721                           
   722                           ;main.c: 61: heartBeatCounter = 0;
   723  000AEC  0E00               	movlw	0
   724  000AEE  0100               	movlb	0	; () banked
   725  000AF0  6FB7               	movwf	(_heartBeatCounter+1)& (0+255),b
   726  000AF2  0E00               	movlw	0
   727  000AF4  6FB6               	movwf	_heartBeatCounter& (0+255),b
   728  000AF6                     l2825:
   729                           
   730                           ;main.c: 63: }
   731                           ;main.c: 65: if(heartBeatCounter > 25){
   732  000AF6  0100               	movlb	0	; () banked
   733  000AF8  BFB7               	btfsc	(_heartBeatCounter+1)& (0+255),7,b
   734  000AFA  D00A               	goto	l2829
   735  000AFC  0100               	movlb	0	; () banked
   736  000AFE  51B7               	movf	(_heartBeatCounter+1)& (0+255),w,b
   737  000B00  E105               	bnz	u1960
   738  000B02  0E1A               	movlw	26
   739  000B04  0100               	movlb	0	; () banked
   740  000B06  5DB6               	subwf	_heartBeatCounter& (0+255),w,b
   741  000B08  A0D8               	btfss	status,0,c
   742  000B0A  D002               	goto	l2829
   743  000B0C                     u1960:
   744                           
   745                           ; BSR set to: 0
   746                           ;main.c: 67: i2c_reg_map[2] = 0;
   747  000B0C  0E00               	movlw	0
   748  000B0E  6E03               	movwf	_i2c_reg_map+2,c	;volatile
   749  000B10                     l2829:
   750                           
   751                           ; BSR set to: 0
   752                           ;main.c: 68: }
   753                           ;main.c: 71: if(I2C_FLAG){
   754  000B10  5011               	movf	_I2C_FLAG,w,c
   755  000B12  1012               	iorwf	_I2C_FLAG+1,w,c
   756  000B14  B4D8               	btfsc	status,2,c
   757  000B16  D01D               	goto	l2837
   758                           
   759                           ; BSR set to: 0
   760                           ;main.c: 72: I2C_FLAG = 0;
   761  000B18  0E00               	movlw	0
   762  000B1A  6E12               	movwf	_I2C_FLAG+1,c
   763  000B1C  0E00               	movlw	0
   764  000B1E  6E11               	movwf	_I2C_FLAG,c
   765                           
   766                           ; BSR set to: 0
   767                           ;main.c: 73: zipCAN();
   768  000B20  EC90  F004         	call	_zipCAN	;wreg free
   769                           
   770                           ;main.c: 74: ECAN_Transmit(0x32,0xC0, 0x02,
   771                           ;main.c: 75: MAP_BITDATA,
   772                           ;main.c: 76: i2c_reg_map[15],
   773                           ;main.c: 77: i2c_reg_map[10],
   774                           ;main.c: 78: i2c_reg_map[11],
   775                           ;main.c: 79: i2c_reg_map[12],
   776                           ;main.c: 80: i2c_reg_map[13],
   777                           ;main.c: 81: i2c_reg_map[14],
   778                           ;main.c: 82: i2c_reg_map[15]);
   779  000B24  0EC0               	movlw	192
   780  000B26  6E44               	movwf	ECAN_Transmit@SIDL,c
   781  000B28  0E02               	movlw	2
   782  000B2A  6E45               	movwf	ECAN_Transmit@DLC,c
   783  000B2C  C023  F046         	movff	_MAP_BITDATA,ECAN_Transmit@TRANSMIT_ID
   784  000B30  C010  F047         	movff	_i2c_reg_map+15,ECAN_Transmit@DATA1	;volatile
   785  000B34  C00B  F048         	movff	_i2c_reg_map+10,ECAN_Transmit@DATA2	;volatile
   786  000B38  C00C  F049         	movff	_i2c_reg_map+11,ECAN_Transmit@DATA3	;volatile
   787  000B3C  C00D  F04A         	movff	_i2c_reg_map+12,ECAN_Transmit@DATA4	;volatile
   788  000B40  C00E  F04B         	movff	_i2c_reg_map+13,ECAN_Transmit@DATA5	;volatile
   789  000B44  C00F  F04C         	movff	_i2c_reg_map+14,ECAN_Transmit@DATA6	;volatile
   790  000B48  C010  F04D         	movff	_i2c_reg_map+15,ECAN_Transmit@DATA7	;volatile
   791  000B4C  0E32               	movlw	50
   792  000B4E  EC02  F007         	call	_ECAN_Transmit
   793  000B52                     l2837:
   794                           
   795                           ;main.c: 85: }
   796                           ;main.c: 91: Delay((unsigned int)(64/4)*80 * 5);
   797  000B52  0E19               	movlw	25
   798  000B54  6E45               	movwf	Delay@count+1,c
   799  000B56  0E00               	movlw	0
   800  000B58  6E44               	movwf	Delay@count,c
   801  000B5A  EC5E  F007         	call	_Delay	;wreg free
   802  000B5E  D7AB               	goto	l2803
   803  000B60                     __end_of_main:
   804                           	opt stack 0
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           postdec1	equ	0xFE5
   808                           fsr1h	equ	0xFE2
   809                           fsr1l	equ	0xFE1
   810                           status	equ	0xFD8
   811                           
   812 ;; *************** function _zipCAN *****************
   813 ;; Defined at:
   814 ;;		line 337 in file "ECAN.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;		None               void
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   830 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    3
   835 ;; This function calls:
   836 ;;		_setBit
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text1
   843  000920                     __ptext1:
   844                           	opt stack 0
   845  000920                     _zipCAN:
   846                           	opt stack 27
   847                           
   848                           ;ECAN.c: 338: if(i2c_reg_map[8] == 1){
   849                           
   850                           ;incstack = 0
   851  000920  0409               	decf	_i2c_reg_map+8,w,c	;volatile
   852  000922  A4D8               	btfss	status,2,c
   853  000924  D009               	goto	l2711
   854                           
   855                           ;ECAN.c: 339: setBit(0, i2c_reg_map[8]);
   856  000926  0E00               	movlw	0
   857  000928  6E45               	movwf	setBit@shift+1,c
   858  00092A  0E00               	movlw	0
   859  00092C  6E44               	movwf	setBit@shift,c
   860  00092E  C009  F046         	movff	_i2c_reg_map+8,setBit@value	;volatile
   861  000932  6A47               	clrf	setBit@value+1,c
   862  000934  EC50  F007         	call	_setBit	;wreg free
   863  000938                     l2711:
   864                           
   865                           ;ECAN.c: 340: }
   866                           ;ECAN.c: 341: if(i2c_reg_map[9] != MAP_BRAKE){
   867  000938  500A               	movf	_i2c_reg_map+9,w,c	;volatile
   868  00093A  6E4A               	movwf	??_zipCAN& (0+255),c
   869  00093C  6A4B               	clrf	(??_zipCAN+1)& (0+255),c
   870  00093E  5015               	movf	_MAP_BRAKE,w,c
   871  000940  184A               	xorwf	??_zipCAN,w,c
   872  000942  E104               	bnz	u1880
   873  000944  5016               	movf	_MAP_BRAKE+1,w,c
   874  000946  184B               	xorwf	??_zipCAN+1,w,c
   875  000948  B4D8               	btfsc	status,2,c
   876  00094A  D00C               	goto	l2717
   877  00094C                     u1880:
   878                           
   879                           ;ECAN.c: 342: setBit(1, i2c_reg_map[9]);
   880  00094C  0E00               	movlw	0
   881  00094E  6E45               	movwf	setBit@shift+1,c
   882  000950  0E01               	movlw	1
   883  000952  6E44               	movwf	setBit@shift,c
   884  000954  C00A  F046         	movff	_i2c_reg_map+9,setBit@value	;volatile
   885  000958  6A47               	clrf	setBit@value+1,c
   886  00095A  EC50  F007         	call	_setBit	;wreg free
   887                           
   888                           ;ECAN.c: 343: MAP_BRAKE = i2c_reg_map[9];
   889  00095E  C00A  F015         	movff	_i2c_reg_map+9,_MAP_BRAKE	;volatile
   890  000962  6A16               	clrf	_MAP_BRAKE+1,c
   891  000964                     l2717:
   892                           
   893                           ;ECAN.c: 344: }
   894                           ;ECAN.c: 345: if(i2c_reg_map[10] != MAP_BACKLIGHT){
   895  000964  500B               	movf	_i2c_reg_map+10,w,c	;volatile
   896  000966  6E4A               	movwf	??_zipCAN& (0+255),c
   897  000968  6A4B               	clrf	(??_zipCAN+1)& (0+255),c
   898  00096A  5013               	movf	_MAP_BACKLIGHT,w,c
   899  00096C  184A               	xorwf	??_zipCAN,w,c
   900  00096E  E104               	bnz	u1890
   901  000970  5014               	movf	_MAP_BACKLIGHT+1,w,c
   902  000972  184B               	xorwf	??_zipCAN+1,w,c
   903  000974  B4D8               	btfsc	status,2,c
   904  000976  D00C               	goto	l2723
   905  000978                     u1890:
   906                           
   907                           ;ECAN.c: 346: setBit(2, i2c_reg_map[10]);
   908  000978  0E00               	movlw	0
   909  00097A  6E45               	movwf	setBit@shift+1,c
   910  00097C  0E02               	movlw	2
   911  00097E  6E44               	movwf	setBit@shift,c
   912  000980  C00B  F046         	movff	_i2c_reg_map+10,setBit@value	;volatile
   913  000984  6A47               	clrf	setBit@value+1,c
   914  000986  EC50  F007         	call	_setBit	;wreg free
   915                           
   916                           ;ECAN.c: 347: MAP_BACKLIGHT = i2c_reg_map[10];
   917  00098A  C00B  F013         	movff	_i2c_reg_map+10,_MAP_BACKLIGHT	;volatile
   918  00098E  6A14               	clrf	_MAP_BACKLIGHT+1,c
   919  000990                     l2723:
   920                           
   921                           ;ECAN.c: 348: }
   922                           ;ECAN.c: 349: if(i2c_reg_map[11] != MAP_V_BLINK){
   923  000990  500C               	movf	_i2c_reg_map+11,w,c	;volatile
   924  000992  6E4A               	movwf	??_zipCAN& (0+255),c
   925  000994  6A4B               	clrf	(??_zipCAN+1)& (0+255),c
   926  000996  501D               	movf	_MAP_V_BLINK,w,c
   927  000998  184A               	xorwf	??_zipCAN,w,c
   928  00099A  E104               	bnz	u1900
   929  00099C  501E               	movf	_MAP_V_BLINK+1,w,c
   930  00099E  184B               	xorwf	??_zipCAN+1,w,c
   931  0009A0  B4D8               	btfsc	status,2,c
   932  0009A2  D00C               	goto	l2729
   933  0009A4                     u1900:
   934                           
   935                           ;ECAN.c: 350: setBit(3, i2c_reg_map[11]);
   936  0009A4  0E00               	movlw	0
   937  0009A6  6E45               	movwf	setBit@shift+1,c
   938  0009A8  0E03               	movlw	3
   939  0009AA  6E44               	movwf	setBit@shift,c
   940  0009AC  C00C  F046         	movff	_i2c_reg_map+11,setBit@value	;volatile
   941  0009B0  6A47               	clrf	setBit@value+1,c
   942  0009B2  EC50  F007         	call	_setBit	;wreg free
   943                           
   944                           ;ECAN.c: 351: MAP_V_BLINK = i2c_reg_map[11];
   945  0009B6  C00C  F01D         	movff	_i2c_reg_map+11,_MAP_V_BLINK	;volatile
   946  0009BA  6A1E               	clrf	_MAP_V_BLINK+1,c
   947  0009BC                     l2729:
   948                           
   949                           ;ECAN.c: 352: }
   950                           ;ECAN.c: 353: if(i2c_reg_map[12] != MAP_H_BLINK){
   951  0009BC  500D               	movf	_i2c_reg_map+12,w,c	;volatile
   952  0009BE  6E4A               	movwf	??_zipCAN& (0+255),c
   953  0009C0  6A4B               	clrf	(??_zipCAN+1)& (0+255),c
   954  0009C2  5019               	movf	_MAP_H_BLINK,w,c
   955  0009C4  184A               	xorwf	??_zipCAN,w,c
   956  0009C6  E104               	bnz	u1910
   957  0009C8  501A               	movf	_MAP_H_BLINK+1,w,c
   958  0009CA  184B               	xorwf	??_zipCAN+1,w,c
   959  0009CC  B4D8               	btfsc	status,2,c
   960  0009CE  D00C               	goto	l2735
   961  0009D0                     u1910:
   962                           
   963                           ;ECAN.c: 354: setBit(4, i2c_reg_map[12]);
   964  0009D0  0E00               	movlw	0
   965  0009D2  6E45               	movwf	setBit@shift+1,c
   966  0009D4  0E04               	movlw	4
   967  0009D6  6E44               	movwf	setBit@shift,c
   968  0009D8  C00D  F046         	movff	_i2c_reg_map+12,setBit@value	;volatile
   969  0009DC  6A47               	clrf	setBit@value+1,c
   970  0009DE  EC50  F007         	call	_setBit	;wreg free
   971                           
   972                           ;ECAN.c: 355: MAP_H_BLINK = i2c_reg_map[12];
   973  0009E2  C00D  F019         	movff	_i2c_reg_map+12,_MAP_H_BLINK	;volatile
   974  0009E6  6A1A               	clrf	_MAP_H_BLINK+1,c
   975  0009E8                     l2735:
   976                           
   977                           ;ECAN.c: 356: }
   978                           ;ECAN.c: 357: if(i2c_reg_map[13] != MAP_DIRECTION){
   979  0009E8  500E               	movf	_i2c_reg_map+13,w,c	;volatile
   980  0009EA  6E4A               	movwf	??_zipCAN& (0+255),c
   981  0009EC  6A4B               	clrf	(??_zipCAN+1)& (0+255),c
   982  0009EE  5017               	movf	_MAP_DIRECTION,w,c
   983  0009F0  184A               	xorwf	??_zipCAN,w,c
   984  0009F2  E104               	bnz	u1920
   985  0009F4  5018               	movf	_MAP_DIRECTION+1,w,c
   986  0009F6  184B               	xorwf	??_zipCAN+1,w,c
   987  0009F8  B4D8               	btfsc	status,2,c
   988  0009FA  D00C               	goto	l2741
   989  0009FC                     u1920:
   990                           
   991                           ;ECAN.c: 358: setBit(5, i2c_reg_map[13]);
   992  0009FC  0E00               	movlw	0
   993  0009FE  6E45               	movwf	setBit@shift+1,c
   994  000A00  0E05               	movlw	5
   995  000A02  6E44               	movwf	setBit@shift,c
   996  000A04  C00E  F046         	movff	_i2c_reg_map+13,setBit@value	;volatile
   997  000A08  6A47               	clrf	setBit@value+1,c
   998  000A0A  EC50  F007         	call	_setBit	;wreg free
   999                           
  1000                           ;ECAN.c: 359: MAP_DIRECTION = i2c_reg_map[13];
  1001  000A0E  C00E  F017         	movff	_i2c_reg_map+13,_MAP_DIRECTION	;volatile
  1002  000A12  6A18               	clrf	_MAP_DIRECTION+1,c
  1003  000A14                     l2741:
  1004                           
  1005                           ;ECAN.c: 360: }
  1006                           ;ECAN.c: 361: if(i2c_reg_map[14] != MAP_SAFETYPIN){
  1007  000A14  500F               	movf	_i2c_reg_map+14,w,c	;volatile
  1008  000A16  6E4A               	movwf	??_zipCAN& (0+255),c
  1009  000A18  6A4B               	clrf	(??_zipCAN+1)& (0+255),c
  1010  000A1A  501B               	movf	_MAP_SAFETYPIN,w,c
  1011  000A1C  184A               	xorwf	??_zipCAN,w,c
  1012  000A1E  E104               	bnz	u1930
  1013  000A20  501C               	movf	_MAP_SAFETYPIN+1,w,c
  1014  000A22  184B               	xorwf	??_zipCAN+1,w,c
  1015  000A24  B4D8               	btfsc	status,2,c
  1016  000A26  0012               	return	
  1017  000A28                     u1930:
  1018                           
  1019                           ;ECAN.c: 362: setBit(6, i2c_reg_map[14]);
  1020  000A28  0E00               	movlw	0
  1021  000A2A  6E45               	movwf	setBit@shift+1,c
  1022  000A2C  0E06               	movlw	6
  1023  000A2E  6E44               	movwf	setBit@shift,c
  1024  000A30  C00F  F046         	movff	_i2c_reg_map+14,setBit@value	;volatile
  1025  000A34  6A47               	clrf	setBit@value+1,c
  1026  000A36  EC50  F007         	call	_setBit	;wreg free
  1027                           
  1028                           ;ECAN.c: 363: MAP_SAFETYPIN = i2c_reg_map[14];
  1029  000A3A  C00F  F01B         	movff	_i2c_reg_map+14,_MAP_SAFETYPIN	;volatile
  1030  000A3E  6A1C               	clrf	_MAP_SAFETYPIN+1,c
  1031  000A40  0012               	return	
  1032  000A42                     __end_of_zipCAN:
  1033                           	opt stack 0
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           postdec1	equ	0xFE5
  1037                           fsr1h	equ	0xFE2
  1038                           fsr1l	equ	0xFE1
  1039                           status	equ	0xFD8
  1040                           
  1041 ;; *************** function _setBit *****************
  1042 ;; Defined at:
  1043 ;;		line 367 in file "ECAN.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  shift           2   15[COMRAM] int 
  1046 ;;  value           2   17[COMRAM] int 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;Total ram usage:        6 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    2
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_zipCAN
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text2
  1073  000EA0                     __ptext2:
  1074                           	opt stack 0
  1075  000EA0                     _setBit:
  1076                           	opt stack 27
  1077                           
  1078                           ;ECAN.c: 368: MAP_BITDATA = MAP_BITDATA ^ (1 << shift);
  1079                           
  1080                           ;incstack = 0
  1081  000EA0  C044  F048         	movff	setBit@shift,??_setBit
  1082  000EA4  0E01               	movlw	1
  1083  000EA6  6E49               	movwf	(??_setBit+1)& (0+255),c
  1084  000EA8  2A48               	incf	??_setBit,f,c
  1085  000EAA  D002               	goto	u1384
  1086  000EAC                     u1385:
  1087  000EAC  90D8               	bcf	status,0,c
  1088  000EAE  3649               	rlcf	??_setBit+1,f,c
  1089  000EB0                     u1384:
  1090  000EB0  2E48               	decfsz	??_setBit,f,c
  1091  000EB2  D7FC               	goto	u1385
  1092  000EB4  5049               	movf	??_setBit+1,w,c
  1093  000EB6  1823               	xorwf	_MAP_BITDATA,w,c
  1094  000EB8  6E23               	movwf	_MAP_BITDATA,c
  1095  000EBA  0012               	return		;funcret
  1096  000EBC                     __end_of_setBit:
  1097                           	opt stack 0
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           postdec1	equ	0xFE5
  1101                           fsr1h	equ	0xFE2
  1102                           fsr1l	equ	0xFE1
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function _singleToBit *****************
  1106 ;; Defined at:
  1107 ;;		line 118 in file "RFID.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  i               2    6[BANK0 ] int 
  1112 ;;  i               2   12[BANK0 ] int 
  1113 ;;  i               2   10[BANK0 ] int 
  1114 ;;  k               2   14[BANK0 ] int 
  1115 ;;  start           2    8[BANK0 ] int 
  1116 ;;  OutOfPhaseCo    2    4[BANK0 ] int 
  1117 ;;  lastVal         2    2[BANK0 ] int 
  1118 ;;  oopcCount       2    0[BANK0 ] int 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;		None               void
  1121 ;; Registers used:
  1122 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1129 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1131 ;;      Totals:         6      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1132 ;;Total ram usage:       22 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    2
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text3
  1143  0000A4                     __ptext3:
  1144                           	opt stack 0
  1145  0000A4                     _singleToBit:
  1146                           	opt stack 28
  1147                           
  1148                           ;RFID.c: 120: int lastVal = 1;
  1149                           
  1150                           ;incstack = 0
  1151  0000A4  0E00               	movlw	0
  1152  0000A6  0100               	movlb	0	; () banked
  1153  0000A8  6F63               	movwf	(singleToBit@lastVal+1)& (0+255),b
  1154  0000AA  0E01               	movlw	1
  1155  0000AC  6F62               	movwf	singleToBit@lastVal& (0+255),b
  1156                           
  1157                           ;RFID.c: 121: int start = 0;
  1158  0000AE  0E00               	movlw	0
  1159  0000B0  0100               	movlb	0	; () banked
  1160  0000B2  6F69               	movwf	(singleToBit@start+1)& (0+255),b
  1161  0000B4  0E00               	movlw	0
  1162  0000B6  6F68               	movwf	singleToBit@start& (0+255),b
  1163                           
  1164                           ;RFID.c: 122: int OutOfPhaseCorrected = 0;
  1165  0000B8  0E00               	movlw	0
  1166  0000BA  0100               	movlb	0	; () banked
  1167  0000BC  6F65               	movwf	(singleToBit@OutOfPhaseCorrected+1)& (0+255),b
  1168  0000BE  0E00               	movlw	0
  1169  0000C0  6F64               	movwf	singleToBit@OutOfPhaseCorrected& (0+255),b
  1170                           
  1171                           ;RFID.c: 123: int oopcCount = 0;
  1172  0000C2  0E00               	movlw	0
  1173  0000C4  0100               	movlb	0	; () banked
  1174  0000C6  6F61               	movwf	(singleToBit@oopcCount+1)& (0+255),b
  1175  0000C8  0E00               	movlw	0
  1176  0000CA  6F60               	movwf	singleToBit@oopcCount& (0+255),b
  1177                           
  1178                           ;RFID.c: 125: for(int i = 0; i<200; i++){
  1179  0000CC  0E00               	movlw	0
  1180  0000CE  0100               	movlb	0	; () banked
  1181  0000D0  6F6B               	movwf	(singleToBit@i+1)& (0+255),b
  1182  0000D2  0E00               	movlw	0
  1183  0000D4  6F6A               	movwf	singleToBit@i& (0+255),b
  1184  0000D6                     l2531:
  1185                           
  1186                           ; BSR set to: 0
  1187  0000D6  0100               	movlb	0	; () banked
  1188  0000D8  BF6B               	btfsc	(singleToBit@i+1)& (0+255),7,b
  1189  0000DA  D008               	goto	l2535
  1190  0000DC  0100               	movlb	0	; () banked
  1191  0000DE  516B               	movf	(singleToBit@i+1)& (0+255),w,b
  1192  0000E0  E136               	bnz	l2547
  1193  0000E2  0EC8               	movlw	200
  1194  0000E4  0100               	movlb	0	; () banked
  1195  0000E6  5D6A               	subwf	singleToBit@i& (0+255),w,b
  1196  0000E8  B0D8               	btfsc	status,0,c
  1197  0000EA  D031               	goto	l2547
  1198  0000EC                     l2535:
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;RFID.c: 126: if(singleArray[i] != 0 && singleArray[i] != 999){
  1202  0000EC  90D8               	bcf	status,0,c
  1203  0000EE  0100               	movlb	0	; () banked
  1204  0000F0  356A               	rlcf	singleToBit@i& (0+255),w,b
  1205  0000F2  6ED9               	movwf	fsr2l,c
  1206  0000F4  0100               	movlb	0	; () banked
  1207  0000F6  356B               	rlcf	(singleToBit@i+1)& (0+255),w,b
  1208  0000F8  6EDA               	movwf	fsr2h,c
  1209  0000FA  0EAE               	movlw	low _singleArray
  1210  0000FC  26D9               	addwf	fsr2l,f,c
  1211  0000FE  0E02               	movlw	high _singleArray
  1212  000100  22DA               	addwfc	fsr2h,f,c
  1213  000102  50DE               	movf	postinc2,w,c
  1214  000104  10DE               	iorwf	postinc2,w,c
  1215  000106  B4D8               	btfsc	status,2,c
  1216  000108  D017               	goto	l2541
  1217                           
  1218                           ; BSR set to: 0
  1219  00010A  90D8               	bcf	status,0,c
  1220  00010C  0100               	movlb	0	; () banked
  1221  00010E  356A               	rlcf	singleToBit@i& (0+255),w,b
  1222  000110  6ED9               	movwf	fsr2l,c
  1223  000112  0100               	movlb	0	; () banked
  1224  000114  356B               	rlcf	(singleToBit@i+1)& (0+255),w,b
  1225  000116  6EDA               	movwf	fsr2h,c
  1226  000118  0EAE               	movlw	low _singleArray
  1227  00011A  26D9               	addwf	fsr2l,f,c
  1228  00011C  0E02               	movlw	high _singleArray
  1229  00011E  22DA               	addwfc	fsr2h,f,c
  1230  000120  0EE7               	movlw	231
  1231  000122  18DE               	xorwf	postinc2,w,c
  1232  000124  E104               	bnz	u1570
  1233  000126  0E03               	movlw	3
  1234  000128  18DE               	xorwf	postinc2,w,c
  1235  00012A  B4D8               	btfsc	status,2,c
  1236  00012C  D005               	goto	l2541
  1237  00012E                     u1570:
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;RFID.c: 127: start = i;
  1241  00012E  C06A  F068         	movff	singleToBit@i,singleToBit@start
  1242  000132  C06B  F069         	movff	singleToBit@i+1,singleToBit@start+1
  1243                           
  1244                           ;RFID.c: 128: break;
  1245  000136  D00B               	goto	l2547
  1246  000138                     l2541:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;RFID.c: 129: }
  1250                           ;RFID.c: 130: if(i == 200){
  1251  000138  0EC8               	movlw	200
  1252  00013A  0100               	movlb	0	; () banked
  1253  00013C  196A               	xorwf	singleToBit@i& (0+255),w,b
  1254  00013E  0100               	movlb	0	; () banked
  1255  000140  116B               	iorwf	(singleToBit@i+1)& (0+255),w,b
  1256  000142  B4D8               	btfsc	status,2,c
  1257  000144  D7FF               	goto	l622
  1258  000146  0100               	movlb	0	; () banked
  1259  000148  4B6A               	infsnz	singleToBit@i& (0+255),f,b
  1260  00014A  2B6B               	incf	(singleToBit@i+1)& (0+255),f,b
  1261  00014C  D7C4               	goto	l2531
  1262  00014E                     l2547:
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;RFID.c: 132: }
  1266                           ;RFID.c: 134: }
  1267                           ;RFID.c: 135: int k = 0;
  1268  00014E  0E00               	movlw	0
  1269  000150  0100               	movlb	0	; () banked
  1270  000152  6F6F               	movwf	(singleToBit@k+1)& (0+255),b
  1271  000154  0E00               	movlw	0
  1272  000156  6F6E               	movwf	singleToBit@k& (0+255),b
  1273                           
  1274                           ;RFID.c: 136: for(int i = 0; i<200; i++){
  1275  000158  0E00               	movlw	0
  1276  00015A  0100               	movlb	0	; () banked
  1277  00015C  6F6D               	movwf	(singleToBit@i_1626+1)& (0+255),b
  1278  00015E  0E00               	movlw	0
  1279  000160  6F6C               	movwf	singleToBit@i_1626& (0+255),b
  1280                           
  1281                           ; BSR set to: 0
  1282  000162  0100               	movlb	0	; () banked
  1283  000164  BF6D               	btfsc	(singleToBit@i_1626+1)& (0+255),7,b
  1284  000166  D00A               	goto	l2553
  1285  000168  0100               	movlb	0	; () banked
  1286  00016A  516D               	movf	(singleToBit@i_1626+1)& (0+255),w,b
  1287  00016C  E106               	bnz	u1600
  1288  00016E  0EC8               	movlw	200
  1289  000170  0100               	movlb	0	; () banked
  1290  000172  5D6C               	subwf	singleToBit@i_1626& (0+255),w,b
  1291  000174  B0D8               	btfsc	status,0,c
  1292  000176  D145               	goto	l2621
  1293  000178  D001               	goto	l2553
  1294  00017A                     u1600:
  1295                           
  1296                           ; BSR set to: 0
  1297  00017A  D143               	goto	l2621
  1298  00017C                     l2553:
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;RFID.c: 137: if(k >= 201 - 1){break;}
  1302  00017C  0100               	movlb	0	; () banked
  1303  00017E  BF6F               	btfsc	(singleToBit@k+1)& (0+255),7,b
  1304  000180  D00A               	goto	l2557
  1305  000182  0100               	movlb	0	; () banked
  1306  000184  516F               	movf	(singleToBit@k+1)& (0+255),w,b
  1307  000186  E106               	bnz	u1610
  1308  000188  0EC8               	movlw	200
  1309  00018A  0100               	movlb	0	; () banked
  1310  00018C  5D6E               	subwf	singleToBit@k& (0+255),w,b
  1311  00018E  B0D8               	btfsc	status,0,c
  1312  000190  D138               	goto	l2621
  1313  000192  D001               	goto	l2557
  1314  000194                     u1610:
  1315                           
  1316                           ; BSR set to: 0
  1317  000194  D136               	goto	l2621
  1318  000196                     l2557:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;RFID.c: 139: if(lastVal == 1){
  1322  000196  0100               	movlb	0	; () banked
  1323  000198  0562               	decf	singleToBit@lastVal& (0+255),w,b
  1324  00019A  0100               	movlb	0	; () banked
  1325  00019C  1163               	iorwf	(singleToBit@lastVal+1)& (0+255),w,b
  1326  00019E  A4D8               	btfss	status,2,c
  1327  0001A0  D07C               	goto	l2581
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;RFID.c: 141: if(singleArray[i+start] == 1){
  1331  0001A2  0100               	movlb	0	; () banked
  1332  0001A4  5168               	movf	singleToBit@start& (0+255),w,b
  1333  0001A6  0100               	movlb	0	; () banked
  1334  0001A8  256C               	addwf	singleToBit@i_1626& (0+255),w,b
  1335  0001AA  6E44               	movwf	??_singleToBit& (0+255),c
  1336  0001AC  0100               	movlb	0	; () banked
  1337  0001AE  5169               	movf	(singleToBit@start+1)& (0+255),w,b
  1338  0001B0  0100               	movlb	0	; () banked
  1339  0001B2  216D               	addwfc	(singleToBit@i_1626+1)& (0+255),w,b
  1340  0001B4  6E45               	movwf	(??_singleToBit+1)& (0+255),c
  1341  0001B6  90D8               	bcf	status,0,c
  1342  0001B8  3644               	rlcf	??_singleToBit,f,c
  1343  0001BA  3645               	rlcf	??_singleToBit+1,f,c
  1344  0001BC  0EAE               	movlw	low _singleArray
  1345  0001BE  2444               	addwf	??_singleToBit,w,c
  1346  0001C0  6ED9               	movwf	fsr2l,c
  1347  0001C2  0E02               	movlw	high _singleArray
  1348  0001C4  2045               	addwfc	??_singleToBit+1,w,c
  1349  0001C6  6EDA               	movwf	fsr2h,c
  1350  0001C8  04DE               	decf	postinc2,w,c
  1351  0001CA  10DE               	iorwf	postinc2,w,c
  1352  0001CC  A4D8               	btfss	status,2,c
  1353  0001CE  D011               	goto	l2565
  1354  0001D0                     l2561:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;RFID.c: 142: bitArray[k++] = 1;
  1358  0001D0  90D8               	bcf	status,0,c
  1359  0001D2  0100               	movlb	0	; () banked
  1360  0001D4  356E               	rlcf	singleToBit@k& (0+255),w,b
  1361  0001D6  6ED9               	movwf	fsr2l,c
  1362  0001D8  0100               	movlb	0	; () banked
  1363  0001DA  356F               	rlcf	(singleToBit@k+1)& (0+255),w,b
  1364  0001DC  6EDA               	movwf	fsr2h,c
  1365  0001DE  0E3E               	movlw	low _bitArray
  1366  0001E0  26D9               	addwf	fsr2l,f,c
  1367  0001E2  0E04               	movlw	high _bitArray
  1368  0001E4  22DA               	addwfc	fsr2h,f,c
  1369  0001E6  0E01               	movlw	1
  1370  0001E8  D088               	goto	L6
  1371  0001EA                     l2563:
  1372                           
  1373                           ; BSR set to: 0
  1374  0001EA  0100               	movlb	0	; () banked
  1375  0001EC  4B6E               	infsnz	singleToBit@k& (0+255),f,b
  1376  0001EE  2B6F               	incf	(singleToBit@k+1)& (0+255),f,b
  1377                           
  1378                           ;RFID.c: 143: }
  1379  0001F0  D0DB               	goto	l2611
  1380  0001F2                     l2565:
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;RFID.c: 144: else if(singleArray[i+start] == 2){
  1384  0001F2  0100               	movlb	0	; () banked
  1385  0001F4  5168               	movf	singleToBit@start& (0+255),w,b
  1386  0001F6  0100               	movlb	0	; () banked
  1387  0001F8  256C               	addwf	singleToBit@i_1626& (0+255),w,b
  1388  0001FA  6E44               	movwf	??_singleToBit& (0+255),c
  1389  0001FC  0100               	movlb	0	; () banked
  1390  0001FE  5169               	movf	(singleToBit@start+1)& (0+255),w,b
  1391  000200  0100               	movlb	0	; () banked
  1392  000202  216D               	addwfc	(singleToBit@i_1626+1)& (0+255),w,b
  1393  000204  6E45               	movwf	(??_singleToBit+1)& (0+255),c
  1394  000206  90D8               	bcf	status,0,c
  1395  000208  3644               	rlcf	??_singleToBit,f,c
  1396  00020A  3645               	rlcf	??_singleToBit+1,f,c
  1397  00020C  0EAE               	movlw	low _singleArray
  1398  00020E  2444               	addwf	??_singleToBit,w,c
  1399  000210  6ED9               	movwf	fsr2l,c
  1400  000212  0E02               	movlw	high _singleArray
  1401  000214  2045               	addwfc	??_singleToBit+1,w,c
  1402  000216  6EDA               	movwf	fsr2h,c
  1403  000218  0E02               	movlw	2
  1404  00021A  18DE               	xorwf	postinc2,w,c
  1405  00021C  10DE               	iorwf	postinc2,w,c
  1406  00021E  A4D8               	btfss	status,2,c
  1407  000220  D01F               	goto	l2573
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;RFID.c: 145: bitArray[k++] = 0;
  1411  000222  90D8               	bcf	status,0,c
  1412  000224  0100               	movlb	0	; () banked
  1413  000226  356E               	rlcf	singleToBit@k& (0+255),w,b
  1414  000228  6ED9               	movwf	fsr2l,c
  1415  00022A  0100               	movlb	0	; () banked
  1416  00022C  356F               	rlcf	(singleToBit@k+1)& (0+255),w,b
  1417  00022E  6EDA               	movwf	fsr2h,c
  1418  000230  0E3E               	movlw	low _bitArray
  1419  000232  26D9               	addwf	fsr2l,f,c
  1420  000234  0E04               	movlw	high _bitArray
  1421  000236  22DA               	addwfc	fsr2h,f,c
  1422  000238  0E00               	movlw	0
  1423  00023A  6EDE               	movwf	postinc2,c
  1424  00023C  0E00               	movlw	0
  1425  00023E  6EDD               	movwf	postdec2,c
  1426                           
  1427                           ; BSR set to: 0
  1428  000240  0100               	movlb	0	; () banked
  1429  000242  4B6E               	infsnz	singleToBit@k& (0+255),f,b
  1430  000244  2B6F               	incf	(singleToBit@k+1)& (0+255),f,b
  1431  000246                     l2571:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;RFID.c: 146: bitArray[k++] = 0;
  1435  000246  90D8               	bcf	status,0,c
  1436  000248  0100               	movlb	0	; () banked
  1437  00024A  356E               	rlcf	singleToBit@k& (0+255),w,b
  1438  00024C  6ED9               	movwf	fsr2l,c
  1439  00024E  0100               	movlb	0	; () banked
  1440  000250  356F               	rlcf	(singleToBit@k+1)& (0+255),w,b
  1441  000252  6EDA               	movwf	fsr2h,c
  1442  000254  0E3E               	movlw	low _bitArray
  1443  000256  26D9               	addwf	fsr2l,f,c
  1444  000258  0E04               	movlw	high _bitArray
  1445  00025A  22DA               	addwfc	fsr2h,f,c
  1446  00025C  0E00               	movlw	0
  1447  00025E  D04D               	goto	L6
  1448  000260                     l2573:
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;RFID.c: 148: else if(singleArray[i+start] == 3){
  1452  000260  0100               	movlb	0	; () banked
  1453  000262  5168               	movf	singleToBit@start& (0+255),w,b
  1454  000264  0100               	movlb	0	; () banked
  1455  000266  256C               	addwf	singleToBit@i_1626& (0+255),w,b
  1456  000268  6E44               	movwf	??_singleToBit& (0+255),c
  1457  00026A  0100               	movlb	0	; () banked
  1458  00026C  5169               	movf	(singleToBit@start+1)& (0+255),w,b
  1459  00026E  0100               	movlb	0	; () banked
  1460  000270  216D               	addwfc	(singleToBit@i_1626+1)& (0+255),w,b
  1461  000272  6E45               	movwf	(??_singleToBit+1)& (0+255),c
  1462  000274  90D8               	bcf	status,0,c
  1463  000276  3644               	rlcf	??_singleToBit,f,c
  1464  000278  3645               	rlcf	??_singleToBit+1,f,c
  1465  00027A  0EAE               	movlw	low _singleArray
  1466  00027C  2444               	addwf	??_singleToBit,w,c
  1467  00027E  6ED9               	movwf	fsr2l,c
  1468  000280  0E02               	movlw	high _singleArray
  1469  000282  2045               	addwfc	??_singleToBit+1,w,c
  1470  000284  6EDA               	movwf	fsr2h,c
  1471  000286  0E03               	movlw	3
  1472  000288  18DE               	xorwf	postinc2,w,c
  1473  00028A  10DE               	iorwf	postinc2,w,c
  1474  00028C  A4D8               	btfss	status,2,c
  1475  00028E  D08C               	goto	l2611
  1476  000290  D07B               	goto	l2605
  1477  000292                     l2577:
  1478                           
  1479                           ; BSR set to: 0
  1480  000292  0100               	movlb	0	; () banked
  1481  000294  4B6E               	infsnz	singleToBit@k& (0+255),f,b
  1482  000296  2B6F               	incf	(singleToBit@k+1)& (0+255),f,b
  1483  000298  D79B               	goto	l2561
  1484  00029A                     l2581:
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;RFID.c: 153: else{
  1488                           ;RFID.c: 154: if(singleArray[i+start] == 1){
  1489  00029A  0100               	movlb	0	; () banked
  1490  00029C  5168               	movf	singleToBit@start& (0+255),w,b
  1491  00029E  0100               	movlb	0	; () banked
  1492  0002A0  256C               	addwf	singleToBit@i_1626& (0+255),w,b
  1493  0002A2  6E44               	movwf	??_singleToBit& (0+255),c
  1494  0002A4  0100               	movlb	0	; () banked
  1495  0002A6  5169               	movf	(singleToBit@start+1)& (0+255),w,b
  1496  0002A8  0100               	movlb	0	; () banked
  1497  0002AA  216D               	addwfc	(singleToBit@i_1626+1)& (0+255),w,b
  1498  0002AC  6E45               	movwf	(??_singleToBit+1)& (0+255),c
  1499  0002AE  90D8               	bcf	status,0,c
  1500  0002B0  3644               	rlcf	??_singleToBit,f,c
  1501  0002B2  3645               	rlcf	??_singleToBit+1,f,c
  1502  0002B4  0EAE               	movlw	low _singleArray
  1503  0002B6  2444               	addwf	??_singleToBit,w,c
  1504  0002B8  6ED9               	movwf	fsr2l,c
  1505  0002BA  0E02               	movlw	high _singleArray
  1506  0002BC  2045               	addwfc	??_singleToBit+1,w,c
  1507  0002BE  6EDA               	movwf	fsr2h,c
  1508  0002C0  04DE               	decf	postinc2,w,c
  1509  0002C2  10DE               	iorwf	postinc2,w,c
  1510  0002C4  B4D8               	btfsc	status,2,c
  1511  0002C6  D7BF               	goto	l2571
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;RFID.c: 157: else if(singleArray[i+start] == 2){
  1515                           
  1516                           ; BSR set to: 0
  1517                           
  1518                           ;RFID.c: 156: }
  1519                           
  1520                           ; BSR set to: 0
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;RFID.c: 155: bitArray[k++] = 0;
  1524  0002C8  0100               	movlb	0	; () banked
  1525  0002CA  5168               	movf	singleToBit@start& (0+255),w,b
  1526  0002CC  0100               	movlb	0	; () banked
  1527  0002CE  256C               	addwf	singleToBit@i_1626& (0+255),w,b
  1528  0002D0  6E44               	movwf	??_singleToBit& (0+255),c
  1529  0002D2  0100               	movlb	0	; () banked
  1530  0002D4  5169               	movf	(singleToBit@start+1)& (0+255),w,b
  1531  0002D6  0100               	movlb	0	; () banked
  1532  0002D8  216D               	addwfc	(singleToBit@i_1626+1)& (0+255),w,b
  1533  0002DA  6E45               	movwf	(??_singleToBit+1)& (0+255),c
  1534  0002DC  90D8               	bcf	status,0,c
  1535  0002DE  3644               	rlcf	??_singleToBit,f,c
  1536  0002E0  3645               	rlcf	??_singleToBit+1,f,c
  1537  0002E2  0EAE               	movlw	low _singleArray
  1538  0002E4  2444               	addwf	??_singleToBit,w,c
  1539  0002E6  6ED9               	movwf	fsr2l,c
  1540  0002E8  0E02               	movlw	high _singleArray
  1541  0002EA  2045               	addwfc	??_singleToBit+1,w,c
  1542  0002EC  6EDA               	movwf	fsr2h,c
  1543  0002EE  0E02               	movlw	2
  1544  0002F0  18DE               	xorwf	postinc2,w,c
  1545  0002F2  10DE               	iorwf	postinc2,w,c
  1546  0002F4  A4D8               	btfss	status,2,c
  1547  0002F6  D005               	goto	l2593
  1548  0002F8  D76B               	goto	l2561
  1549  0002FA                     L6:
  1550  0002FA  6EDE               	movwf	postinc2,c
  1551  0002FC  0E00               	movlw	0
  1552  0002FE  6EDD               	movwf	postdec2,c
  1553  000300  D774               	goto	l2563
  1554  000302                     l2593:
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;RFID.c: 160: else if(singleArray[i+start] == 3){
  1558  000302  0100               	movlb	0	; () banked
  1559  000304  5168               	movf	singleToBit@start& (0+255),w,b
  1560  000306  0100               	movlb	0	; () banked
  1561  000308  256C               	addwf	singleToBit@i_1626& (0+255),w,b
  1562  00030A  6E44               	movwf	??_singleToBit& (0+255),c
  1563  00030C  0100               	movlb	0	; () banked
  1564  00030E  5169               	movf	(singleToBit@start+1)& (0+255),w,b
  1565  000310  0100               	movlb	0	; () banked
  1566  000312  216D               	addwfc	(singleToBit@i_1626+1)& (0+255),w,b
  1567  000314  6E45               	movwf	(??_singleToBit+1)& (0+255),c
  1568  000316  90D8               	bcf	status,0,c
  1569  000318  3644               	rlcf	??_singleToBit,f,c
  1570  00031A  3645               	rlcf	??_singleToBit+1,f,c
  1571  00031C  0EAE               	movlw	low _singleArray
  1572  00031E  2444               	addwf	??_singleToBit,w,c
  1573  000320  6ED9               	movwf	fsr2l,c
  1574  000322  0E02               	movlw	high _singleArray
  1575  000324  2045               	addwfc	??_singleToBit+1,w,c
  1576  000326  6EDA               	movwf	fsr2h,c
  1577  000328  0E03               	movlw	3
  1578  00032A  18DE               	xorwf	postinc2,w,c
  1579  00032C  10DE               	iorwf	postinc2,w,c
  1580  00032E  A4D8               	btfss	status,2,c
  1581  000330  D03B               	goto	l2611
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;RFID.c: 162: oopcCount++;
  1585  000332  0100               	movlb	0	; () banked
  1586  000334  4B60               	infsnz	singleToBit@oopcCount& (0+255),f,b
  1587  000336  2B61               	incf	(singleToBit@oopcCount+1)& (0+255),f,b
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;RFID.c: 163: if (OutOfPhaseCorrected == 0){
  1591  000338  0100               	movlb	0	; () banked
  1592  00033A  5164               	movf	singleToBit@OutOfPhaseCorrected& (0+255),w,b
  1593  00033C  0100               	movlb	0	; () banked
  1594  00033E  1165               	iorwf	(singleToBit@OutOfPhaseCorrected+1)& (0+255),w,b
  1595  000340  A4D8               	btfss	status,2,c
  1596  000342  D022               	goto	l2605
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;RFID.c: 164: OutOfPhaseCorrected = k;
  1600  000344  C06E  F064         	movff	singleToBit@k,singleToBit@OutOfPhaseCorrected
  1601  000348  C06F  F065         	movff	singleToBit@k+1,singleToBit@OutOfPhaseCorrected+1
  1602                           
  1603                           ;RFID.c: 165: while(OutOfPhaseCorrected > 0){
  1604  00034C  D013               	goto	l2603
  1605  00034E                     l2601:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;RFID.c: 166: bitArray[--OutOfPhaseCorrected] = 2;
  1609  00034E  0100               	movlb	0	; () banked
  1610  000350  0764               	decf	singleToBit@OutOfPhaseCorrected& (0+255),f,b
  1611  000352  A0D8               	btfss	status,0,c
  1612  000354  0765               	decf	(singleToBit@OutOfPhaseCorrected+1)& (0+255),f,b
  1613  000356  90D8               	bcf	status,0,c
  1614  000358  0100               	movlb	0	; () banked
  1615  00035A  3564               	rlcf	singleToBit@OutOfPhaseCorrected& (0+255),w,b
  1616  00035C  6ED9               	movwf	fsr2l,c
  1617  00035E  0100               	movlb	0	; () banked
  1618  000360  3565               	rlcf	(singleToBit@OutOfPhaseCorrected+1)& (0+255),w,b
  1619  000362  6EDA               	movwf	fsr2h,c
  1620  000364  0E3E               	movlw	low _bitArray
  1621  000366  26D9               	addwf	fsr2l,f,c
  1622  000368  0E04               	movlw	high _bitArray
  1623  00036A  22DA               	addwfc	fsr2h,f,c
  1624  00036C  0E02               	movlw	2
  1625  00036E  6EDE               	movwf	postinc2,c
  1626  000370  0E00               	movlw	0
  1627  000372  6EDD               	movwf	postdec2,c
  1628  000374                     l2603:
  1629                           
  1630                           ; BSR set to: 0
  1631  000374  0100               	movlb	0	; () banked
  1632  000376  BF65               	btfsc	(singleToBit@OutOfPhaseCorrected+1)& (0+255),7,b
  1633  000378  D007               	goto	l2605
  1634  00037A  0100               	movlb	0	; () banked
  1635  00037C  5165               	movf	(singleToBit@OutOfPhaseCorrected+1)& (0+255),w,b
  1636  00037E  E1E7               	bnz	l2601
  1637  000380  0100               	movlb	0	; () banked
  1638  000382  0564               	decf	singleToBit@OutOfPhaseCorrected& (0+255),w,b
  1639  000384  B0D8               	btfsc	status,0,c
  1640  000386  D7E3               	goto	l2601
  1641  000388                     l2605:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;RFID.c: 167: }
  1645                           ;RFID.c: 169: }
  1646                           ;RFID.c: 171: bitArray[k++] = 0;
  1647  000388  90D8               	bcf	status,0,c
  1648  00038A  0100               	movlb	0	; () banked
  1649  00038C  356E               	rlcf	singleToBit@k& (0+255),w,b
  1650  00038E  6ED9               	movwf	fsr2l,c
  1651  000390  0100               	movlb	0	; () banked
  1652  000392  356F               	rlcf	(singleToBit@k+1)& (0+255),w,b
  1653  000394  6EDA               	movwf	fsr2h,c
  1654  000396  0E3E               	movlw	low _bitArray
  1655  000398  26D9               	addwf	fsr2l,f,c
  1656  00039A  0E04               	movlw	high _bitArray
  1657  00039C  22DA               	addwfc	fsr2h,f,c
  1658  00039E  0E00               	movlw	0
  1659  0003A0  6EDE               	movwf	postinc2,c
  1660  0003A2  0E00               	movlw	0
  1661  0003A4  6EDD               	movwf	postdec2,c
  1662  0003A6  D775               	goto	l2577
  1663  0003A8                     l2611:
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;RFID.c: 175: }
  1667                           ;RFID.c: 176: }
  1668                           ;RFID.c: 178: if(bitArray[k-1] == 1){
  1669  0003A8  0EFE               	movlw	254
  1670  0003AA  6E44               	movwf	??_singleToBit& (0+255),c
  1671  0003AC  0EFF               	movlw	255
  1672  0003AE  6E45               	movwf	(??_singleToBit+1)& (0+255),c
  1673  0003B0  C06E  F046         	movff	singleToBit@k,??_singleToBit+2
  1674  0003B4  C06F  F047         	movff	singleToBit@k+1,??_singleToBit+3
  1675  0003B8  90D8               	bcf	status,0,c
  1676  0003BA  3646               	rlcf	??_singleToBit+2,f,c
  1677  0003BC  3647               	rlcf	??_singleToBit+3,f,c
  1678  0003BE  5044               	movf	??_singleToBit,w,c
  1679  0003C0  2646               	addwf	??_singleToBit+2,f,c
  1680  0003C2  5045               	movf	??_singleToBit+1,w,c
  1681  0003C4  2247               	addwfc	??_singleToBit+3,f,c
  1682  0003C6  0E3E               	movlw	low _bitArray
  1683  0003C8  2446               	addwf	??_singleToBit+2,w,c
  1684  0003CA  6ED9               	movwf	fsr2l,c
  1685  0003CC  0E04               	movlw	high _bitArray
  1686  0003CE  2047               	addwfc	??_singleToBit+3,w,c
  1687  0003D0  6EDA               	movwf	fsr2h,c
  1688  0003D2  04DE               	decf	postinc2,w,c
  1689  0003D4  10DE               	iorwf	postinc2,w,c
  1690  0003D6  A4D8               	btfss	status,2,c
  1691  0003D8  D005               	goto	l2615
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;RFID.c: 179: lastVal = 1;
  1695  0003DA  0E00               	movlw	0
  1696  0003DC  0100               	movlb	0	; () banked
  1697  0003DE  6F63               	movwf	(singleToBit@lastVal+1)& (0+255),b
  1698  0003E0  0E01               	movlw	1
  1699  0003E2  D004               	goto	L2
  1700  0003E4                     l2615:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;RFID.c: 181: else{lastVal = 0;}
  1704  0003E4  0E00               	movlw	0
  1705  0003E6  0100               	movlb	0	; () banked
  1706  0003E8  6F63               	movwf	(singleToBit@lastVal+1)& (0+255),b
  1707  0003EA  0E00               	movlw	0
  1708  0003EC                     L2:
  1709  0003EC  6F62               	movwf	singleToBit@lastVal& (0+255),b
  1710                           
  1711                           ; BSR set to: 0
  1712                           
  1713                           ; BSR set to: 0
  1714  0003EE  0100               	movlb	0	; () banked
  1715  0003F0  4B6C               	infsnz	singleToBit@i_1626& (0+255),f,b
  1716  0003F2  2B6D               	incf	(singleToBit@i_1626+1)& (0+255),f,b
  1717                           
  1718                           ; BSR set to: 0
  1719  0003F4  0100               	movlb	0	; () banked
  1720  0003F6  BF6D               	btfsc	(singleToBit@i_1626+1)& (0+255),7,b
  1721  0003F8  D6C1               	goto	l2553
  1722  0003FA  0100               	movlb	0	; () banked
  1723  0003FC  516D               	movf	(singleToBit@i_1626+1)& (0+255),w,b
  1724  0003FE  E101               	bnz	l2621
  1725  000400  D6B6               	goto	L3
  1726  000402                     l2621:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;RFID.c: 183: }
  1730                           ;RFID.c: 185: for(int i = 0; i< 201; i++){
  1731  000402  0E00               	movlw	0
  1732  000404  0100               	movlb	0	; () banked
  1733  000406  6F67               	movwf	(singleToBit@i_1627+1)& (0+255),b
  1734  000408  0E00               	movlw	0
  1735  00040A  6F66               	movwf	singleToBit@i_1627& (0+255),b
  1736  00040C                     l2623:
  1737                           
  1738                           ; BSR set to: 0
  1739  00040C  0100               	movlb	0	; () banked
  1740  00040E  BF67               	btfsc	(singleToBit@i_1627+1)& (0+255),7,b
  1741  000410  D008               	goto	l2627
  1742  000412  0100               	movlb	0	; () banked
  1743  000414  5167               	movf	(singleToBit@i_1627+1)& (0+255),w,b
  1744  000416  E12B               	bnz	l647
  1745  000418  0EC9               	movlw	201
  1746  00041A  0100               	movlb	0	; () banked
  1747  00041C  5D66               	subwf	singleToBit@i_1627& (0+255),w,b
  1748  00041E  B0D8               	btfsc	status,0,c
  1749  000420  0012               	return	
  1750  000422                     l2627:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;RFID.c: 186: bitArray[i] = bitArray[i] ^ 1;
  1754  000422  90D8               	bcf	status,0,c
  1755  000424  0100               	movlb	0	; () banked
  1756  000426  3566               	rlcf	singleToBit@i_1627& (0+255),w,b
  1757  000428  6ED9               	movwf	fsr2l,c
  1758  00042A  0100               	movlb	0	; () banked
  1759  00042C  3567               	rlcf	(singleToBit@i_1627+1)& (0+255),w,b
  1760  00042E  6EDA               	movwf	fsr2h,c
  1761  000430  0E3E               	movlw	low _bitArray
  1762  000432  26D9               	addwf	fsr2l,f,c
  1763  000434  0E04               	movlw	high _bitArray
  1764  000436  22DA               	addwfc	fsr2h,f,c
  1765  000438  CFDE F044          	movff	postinc2,??_singleToBit
  1766  00043C  CFDD F045          	movff	postdec2,??_singleToBit+1
  1767  000440  0E01               	movlw	1
  1768  000442  1A44               	xorwf	??_singleToBit,f,c
  1769  000444  0E00               	movlw	0
  1770  000446  1A45               	xorwf	??_singleToBit+1,f,c
  1771  000448  90D8               	bcf	status,0,c
  1772  00044A  0100               	movlb	0	; () banked
  1773  00044C  3566               	rlcf	singleToBit@i_1627& (0+255),w,b
  1774  00044E  6ED9               	movwf	fsr2l,c
  1775  000450  0100               	movlb	0	; () banked
  1776  000452  3567               	rlcf	(singleToBit@i_1627+1)& (0+255),w,b
  1777  000454  6EDA               	movwf	fsr2h,c
  1778  000456  0E3E               	movlw	low _bitArray
  1779  000458  26D9               	addwf	fsr2l,f,c
  1780  00045A  0E04               	movlw	high _bitArray
  1781  00045C  22DA               	addwfc	fsr2h,f,c
  1782  00045E  C044  FFDE         	movff	??_singleToBit,postinc2
  1783  000462  C045  FFDD         	movff	??_singleToBit+1,postdec2
  1784                           
  1785                           ; BSR set to: 0
  1786  000466  0100               	movlb	0	; () banked
  1787  000468  4B66               	infsnz	singleToBit@i_1627& (0+255),f,b
  1788  00046A  2B67               	incf	(singleToBit@i_1627+1)& (0+255),f,b
  1789  00046C  D7CF               	goto	l2623
  1790  00046E                     l647:
  1791                           
  1792                           ; BSR set to: 0
  1793  00046E  0012               	return		;funcret
  1794  000470                     __end_of_singleToBit:
  1795                           	opt stack 0
  1796                           postinc0	equ	0xFEE
  1797                           wreg	equ	0xFE8
  1798                           postdec1	equ	0xFE5
  1799                           fsr1h	equ	0xFE2
  1800                           fsr1l	equ	0xFE1
  1801                           postinc2	equ	0xFDE
  1802                           postdec2	equ	0xFDD
  1803                           fsr2h	equ	0xFDA
  1804                           fsr2l	equ	0xFD9
  1805                           status	equ	0xFD8
  1806                           
  1807 ;; *************** function _setup_Interrupt *****************
  1808 ;; Defined at:
  1809 ;;		line 61 in file "init.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  2    4[None  ] int 
  1816 ;; Registers used:
  1817 ;;		None
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    2
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text4
  1838  000ECE                     __ptext4:
  1839                           	opt stack 0
  1840  000ECE                     _setup_Interrupt:
  1841                           	opt stack 28
  1842                           
  1843                           ;init.c: 62: RCONbits.IPEN = 1;
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;incstack = 0
  1847  000ECE  8ED0               	bsf	4048,7,c	;volatile
  1848                           
  1849                           ;init.c: 63: INTCONbits.GIEH = 1;
  1850  000ED0  8EF2               	bsf	intcon,7,c	;volatile
  1851                           
  1852                           ;init.c: 64: INTCONbits.GIEL = 1;
  1853  000ED2  8CF2               	bsf	intcon,6,c	;volatile
  1854                           
  1855                           ;init.c: 65: INTCONbits.TMR0IE = 1;
  1856  000ED4  8AF2               	bsf	intcon,5,c	;volatile
  1857  000ED6  0012               	return		;funcret
  1858  000ED8                     __end_of_setup_Interrupt:
  1859                           	opt stack 0
  1860                           intcon	equ	0xFF2
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           postdec1	equ	0xFE5
  1864                           fsr1h	equ	0xFE2
  1865                           fsr1l	equ	0xFE1
  1866                           postinc2	equ	0xFDE
  1867                           postdec2	equ	0xFDD
  1868                           fsr2h	equ	0xFDA
  1869                           fsr2l	equ	0xFD9
  1870                           status	equ	0xFD8
  1871                           
  1872 ;; *************** function _multiToSingle *****************
  1873 ;; Defined at:
  1874 ;;		line 63 in file "RFID.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  v               2    8[BANK0 ] int 
  1879 ;;  i               2   10[BANK0 ] int 
  1880 ;;  totError        2    6[BANK0 ] int 
  1881 ;;  _short          2    4[BANK0 ] int 
  1882 ;;  _middle         2    2[BANK0 ] int 
  1883 ;;  _long           2    0[BANK0 ] int 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  2   15[COMRAM] int 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1894 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;Total ram usage:       15 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    2
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text5
  1908  00064A                     __ptext5:
  1909                           	opt stack 0
  1910  00064A                     _multiToSingle:
  1911                           	opt stack 28
  1912                           
  1913                           ;RFID.c: 65: if(rawIndex >= 500) {
  1914                           
  1915                           ;incstack = 0
  1916  00064A  BE20               	btfsc	_rawIndex+1,7,c
  1917  00064C  D0D1               	goto	l596
  1918  00064E  0EF4               	movlw	244
  1919  000650  5C1F               	subwf	_rawIndex,w,c
  1920  000652  0E01               	movlw	1
  1921  000654  5820               	subwfb	_rawIndex+1,w,c
  1922  000656  A0D8               	btfss	status,0,c
  1923  000658  D0CB               	goto	l596
  1924                           
  1925                           ;RFID.c: 67: int _long = 0;
  1926  00065A  0E00               	movlw	0
  1927  00065C  0100               	movlb	0	; () banked
  1928  00065E  6F61               	movwf	(multiToSingle@_long+1)& (0+255),b
  1929  000660  0E00               	movlw	0
  1930  000662  6F60               	movwf	multiToSingle@_long& (0+255),b
  1931                           
  1932                           ;RFID.c: 68: int _middle = 0;
  1933  000664  0E00               	movlw	0
  1934  000666  0100               	movlb	0	; () banked
  1935  000668  6F63               	movwf	(multiToSingle@_middle+1)& (0+255),b
  1936  00066A  0E00               	movlw	0
  1937  00066C  6F62               	movwf	multiToSingle@_middle& (0+255),b
  1938                           
  1939                           ;RFID.c: 69: int _short = 0;
  1940  00066E  0E00               	movlw	0
  1941  000670  0100               	movlb	0	; () banked
  1942  000672  6F65               	movwf	(multiToSingle@_short+1)& (0+255),b
  1943  000674  0E00               	movlw	0
  1944  000676  6F64               	movwf	multiToSingle@_short& (0+255),b
  1945                           
  1946                           ;RFID.c: 70: int totError = 0;
  1947  000678  0E00               	movlw	0
  1948  00067A  0100               	movlb	0	; () banked
  1949  00067C  6F67               	movwf	(multiToSingle@totError+1)& (0+255),b
  1950  00067E  0E00               	movlw	0
  1951  000680  6F66               	movwf	multiToSingle@totError& (0+255),b
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;RFID.c: 72: raw[0] = 0;
  1955  000682  0E00               	movlw	0
  1956  000684  CFE8 F0BA          	movff	wreg,_raw
  1957                           
  1958                           ;RFID.c: 74: for(int i = 1; i < 500; i++) {
  1959  000688  0E00               	movlw	0
  1960  00068A  0100               	movlb	0	; () banked
  1961  00068C  6F6B               	movwf	(multiToSingle@i+1)& (0+255),b
  1962  00068E  0E01               	movlw	1
  1963  000690  6F6A               	movwf	multiToSingle@i& (0+255),b
  1964  000692                     l2487:
  1965                           
  1966                           ; BSR set to: 0
  1967  000692  0100               	movlb	0	; () banked
  1968  000694  BF6B               	btfsc	(multiToSingle@i+1)& (0+255),7,b
  1969  000696  D008               	goto	l2491
  1970  000698  0EF4               	movlw	244
  1971  00069A  0100               	movlb	0	; () banked
  1972  00069C  5D6A               	subwf	multiToSingle@i& (0+255),w,b
  1973  00069E  0E01               	movlw	1
  1974  0006A0  0100               	movlb	0	; () banked
  1975  0006A2  596B               	subwfb	(multiToSingle@i+1)& (0+255),w,b
  1976  0006A4  B0D8               	btfsc	status,0,c
  1977  0006A6  D09F               	goto	l2525
  1978  0006A8                     l2491:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;RFID.c: 75: int v = raw[i];
  1982  0006A8  0EBA               	movlw	low _raw
  1983  0006AA  0100               	movlb	0	; () banked
  1984  0006AC  256A               	addwf	multiToSingle@i& (0+255),w,b
  1985  0006AE  6ED9               	movwf	fsr2l,c
  1986  0006B0  0E00               	movlw	high _raw
  1987  0006B2  0100               	movlb	0	; () banked
  1988  0006B4  216B               	addwfc	(multiToSingle@i+1)& (0+255),w,b
  1989  0006B6  6EDA               	movwf	fsr2h,c
  1990  0006B8  50DF               	movf	indf2,w,c
  1991  0006BA  6E46               	movwf	??_multiToSingle& (0+255),c
  1992  0006BC  5046               	movf	??_multiToSingle,w,c
  1993  0006BE  0100               	movlb	0	; () banked
  1994  0006C0  6F68               	movwf	multiToSingle@v& (0+255),b
  1995  0006C2  6B69               	clrf	(multiToSingle@v+1)& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;RFID.c: 76: if(v > 44 && v < 53) {
  1999  0006C4  0100               	movlb	0	; () banked
  2000  0006C6  BF69               	btfsc	(multiToSingle@v+1)& (0+255),7,b
  2001  0006C8  D026               	goto	l2501
  2002  0006CA  0100               	movlb	0	; () banked
  2003  0006CC  5169               	movf	(multiToSingle@v+1)& (0+255),w,b
  2004  0006CE  E105               	bnz	u1480
  2005  0006D0  0E2D               	movlw	45
  2006  0006D2  0100               	movlb	0	; () banked
  2007  0006D4  5D68               	subwf	multiToSingle@v& (0+255),w,b
  2008  0006D6  A0D8               	btfss	status,0,c
  2009  0006D8  D01E               	goto	l2501
  2010  0006DA                     u1480:
  2011                           
  2012                           ; BSR set to: 0
  2013  0006DA  0100               	movlb	0	; () banked
  2014  0006DC  BF69               	btfsc	(multiToSingle@v+1)& (0+255),7,b
  2015  0006DE  D008               	goto	l2497
  2016  0006E0  0100               	movlb	0	; () banked
  2017  0006E2  5169               	movf	(multiToSingle@v+1)& (0+255),w,b
  2018  0006E4  E118               	bnz	l2501
  2019  0006E6  0E35               	movlw	53
  2020  0006E8  0100               	movlb	0	; () banked
  2021  0006EA  5D68               	subwf	multiToSingle@v& (0+255),w,b
  2022  0006EC  B0D8               	btfsc	status,0,c
  2023  0006EE  D013               	goto	l2501
  2024  0006F0                     l2497:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;RFID.c: 77: singleArray[i] = 1;
  2028  0006F0  90D8               	bcf	status,0,c
  2029  0006F2  0100               	movlb	0	; () banked
  2030  0006F4  356A               	rlcf	multiToSingle@i& (0+255),w,b
  2031  0006F6  6ED9               	movwf	fsr2l,c
  2032  0006F8  0100               	movlb	0	; () banked
  2033  0006FA  356B               	rlcf	(multiToSingle@i+1)& (0+255),w,b
  2034  0006FC  6EDA               	movwf	fsr2h,c
  2035  0006FE  0EAE               	movlw	low _singleArray
  2036  000700  26D9               	addwf	fsr2l,f,c
  2037  000702  0E02               	movlw	high _singleArray
  2038  000704  22DA               	addwfc	fsr2h,f,c
  2039  000706  0E01               	movlw	1
  2040  000708  6EDE               	movwf	postinc2,c
  2041  00070A  0E00               	movlw	0
  2042  00070C  6EDD               	movwf	postdec2,c
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;RFID.c: 78: _short++;
  2046  00070E  0100               	movlb	0	; () banked
  2047  000710  4B64               	infsnz	multiToSingle@_short& (0+255),f,b
  2048  000712  2B65               	incf	(multiToSingle@_short+1)& (0+255),f,b
  2049                           
  2050                           ;RFID.c: 79: }
  2051  000714  D064               	goto	l2521
  2052  000716                     l2501:
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;RFID.c: 80: else if(v > 70 && v < 79) {
  2056  000716  0100               	movlb	0	; () banked
  2057  000718  BF69               	btfsc	(multiToSingle@v+1)& (0+255),7,b
  2058  00071A  D026               	goto	l2509
  2059  00071C  0100               	movlb	0	; () banked
  2060  00071E  5169               	movf	(multiToSingle@v+1)& (0+255),w,b
  2061  000720  E105               	bnz	u1500
  2062  000722  0E47               	movlw	71
  2063  000724  0100               	movlb	0	; () banked
  2064  000726  5D68               	subwf	multiToSingle@v& (0+255),w,b
  2065  000728  A0D8               	btfss	status,0,c
  2066  00072A  D01E               	goto	l2509
  2067  00072C                     u1500:
  2068                           
  2069                           ; BSR set to: 0
  2070  00072C  0100               	movlb	0	; () banked
  2071  00072E  BF69               	btfsc	(multiToSingle@v+1)& (0+255),7,b
  2072  000730  D008               	goto	l2505
  2073  000732  0100               	movlb	0	; () banked
  2074  000734  5169               	movf	(multiToSingle@v+1)& (0+255),w,b
  2075  000736  E118               	bnz	l2509
  2076  000738  0E4F               	movlw	79
  2077  00073A  0100               	movlb	0	; () banked
  2078  00073C  5D68               	subwf	multiToSingle@v& (0+255),w,b
  2079  00073E  B0D8               	btfsc	status,0,c
  2080  000740  D013               	goto	l2509
  2081  000742                     l2505:
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;RFID.c: 81: singleArray[i] = 2;
  2085  000742  90D8               	bcf	status,0,c
  2086  000744  0100               	movlb	0	; () banked
  2087  000746  356A               	rlcf	multiToSingle@i& (0+255),w,b
  2088  000748  6ED9               	movwf	fsr2l,c
  2089  00074A  0100               	movlb	0	; () banked
  2090  00074C  356B               	rlcf	(multiToSingle@i+1)& (0+255),w,b
  2091  00074E  6EDA               	movwf	fsr2h,c
  2092  000750  0EAE               	movlw	low _singleArray
  2093  000752  26D9               	addwf	fsr2l,f,c
  2094  000754  0E02               	movlw	high _singleArray
  2095  000756  22DA               	addwfc	fsr2h,f,c
  2096  000758  0E02               	movlw	2
  2097  00075A  6EDE               	movwf	postinc2,c
  2098  00075C  0E00               	movlw	0
  2099  00075E  6EDD               	movwf	postdec2,c
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;RFID.c: 82: _middle++;
  2103  000760  0100               	movlb	0	; () banked
  2104  000762  4B62               	infsnz	multiToSingle@_middle& (0+255),f,b
  2105  000764  2B63               	incf	(multiToSingle@_middle+1)& (0+255),f,b
  2106                           
  2107                           ;RFID.c: 83: }
  2108  000766  D03B               	goto	l2521
  2109  000768                     l2509:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;RFID.c: 84: else if(v > 95 && v < 104) {
  2113  000768  0100               	movlb	0	; () banked
  2114  00076A  BF69               	btfsc	(multiToSingle@v+1)& (0+255),7,b
  2115  00076C  D026               	goto	l2517
  2116  00076E  0100               	movlb	0	; () banked
  2117  000770  5169               	movf	(multiToSingle@v+1)& (0+255),w,b
  2118  000772  E105               	bnz	u1520
  2119  000774  0E60               	movlw	96
  2120  000776  0100               	movlb	0	; () banked
  2121  000778  5D68               	subwf	multiToSingle@v& (0+255),w,b
  2122  00077A  A0D8               	btfss	status,0,c
  2123  00077C  D01E               	goto	l2517
  2124  00077E                     u1520:
  2125                           
  2126                           ; BSR set to: 0
  2127  00077E  0100               	movlb	0	; () banked
  2128  000780  BF69               	btfsc	(multiToSingle@v+1)& (0+255),7,b
  2129  000782  D008               	goto	l2513
  2130  000784  0100               	movlb	0	; () banked
  2131  000786  5169               	movf	(multiToSingle@v+1)& (0+255),w,b
  2132  000788  E118               	bnz	l2517
  2133  00078A  0E68               	movlw	104
  2134  00078C  0100               	movlb	0	; () banked
  2135  00078E  5D68               	subwf	multiToSingle@v& (0+255),w,b
  2136  000790  B0D8               	btfsc	status,0,c
  2137  000792  D013               	goto	l2517
  2138  000794                     l2513:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;RFID.c: 85: singleArray[i] = 3;
  2142  000794  90D8               	bcf	status,0,c
  2143  000796  0100               	movlb	0	; () banked
  2144  000798  356A               	rlcf	multiToSingle@i& (0+255),w,b
  2145  00079A  6ED9               	movwf	fsr2l,c
  2146  00079C  0100               	movlb	0	; () banked
  2147  00079E  356B               	rlcf	(multiToSingle@i+1)& (0+255),w,b
  2148  0007A0  6EDA               	movwf	fsr2h,c
  2149  0007A2  0EAE               	movlw	low _singleArray
  2150  0007A4  26D9               	addwf	fsr2l,f,c
  2151  0007A6  0E02               	movlw	high _singleArray
  2152  0007A8  22DA               	addwfc	fsr2h,f,c
  2153  0007AA  0E03               	movlw	3
  2154  0007AC  6EDE               	movwf	postinc2,c
  2155  0007AE  0E00               	movlw	0
  2156  0007B0  6EDD               	movwf	postdec2,c
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;RFID.c: 86: _long++;
  2160  0007B2  0100               	movlb	0	; () banked
  2161  0007B4  4B60               	infsnz	multiToSingle@_long& (0+255),f,b
  2162  0007B6  2B61               	incf	(multiToSingle@_long+1)& (0+255),f,b
  2163                           
  2164                           ;RFID.c: 87: }
  2165  0007B8  D012               	goto	l2521
  2166  0007BA                     l2517:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;RFID.c: 88: else {
  2170                           ;RFID.c: 89: singleArray[i] = 999;
  2171  0007BA  90D8               	bcf	status,0,c
  2172  0007BC  0100               	movlb	0	; () banked
  2173  0007BE  356A               	rlcf	multiToSingle@i& (0+255),w,b
  2174  0007C0  6ED9               	movwf	fsr2l,c
  2175  0007C2  0100               	movlb	0	; () banked
  2176  0007C4  356B               	rlcf	(multiToSingle@i+1)& (0+255),w,b
  2177  0007C6  6EDA               	movwf	fsr2h,c
  2178  0007C8  0EAE               	movlw	low _singleArray
  2179  0007CA  26D9               	addwf	fsr2l,f,c
  2180  0007CC  0E02               	movlw	high _singleArray
  2181  0007CE  22DA               	addwfc	fsr2h,f,c
  2182  0007D0  0EE7               	movlw	231
  2183  0007D2  6EDE               	movwf	postinc2,c
  2184  0007D4  0E03               	movlw	3
  2185  0007D6  6EDD               	movwf	postdec2,c
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;RFID.c: 90: totError++;
  2189  0007D8  0100               	movlb	0	; () banked
  2190  0007DA  4B66               	infsnz	multiToSingle@totError& (0+255),f,b
  2191  0007DC  2B67               	incf	(multiToSingle@totError+1)& (0+255),f,b
  2192  0007DE                     l2521:
  2193                           
  2194                           ; BSR set to: 0
  2195  0007DE  0100               	movlb	0	; () banked
  2196  0007E0  4B6A               	infsnz	multiToSingle@i& (0+255),f,b
  2197  0007E2  2B6B               	incf	(multiToSingle@i+1)& (0+255),f,b
  2198  0007E4  D756               	goto	l2487
  2199  0007E6                     l2525:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;RFID.c: 91: }
  2203                           ;RFID.c: 92: }
  2204                           ;RFID.c: 93: return 1;
  2205  0007E6  0E00               	movlw	0
  2206  0007E8  6E45               	movwf	?_multiToSingle+1,c
  2207  0007EA  0E01               	movlw	1
  2208  0007EC  6E44               	movwf	?_multiToSingle,c
  2209                           
  2210                           ; BSR set to: 0
  2211  0007EE  0012               	return	
  2212  0007F0                     l596:
  2213                           
  2214                           ;RFID.c: 94: }
  2215                           ;RFID.c: 95: return -1;
  2216  0007F0  6844               	setf	?_multiToSingle,c
  2217  0007F2  6845               	setf	?_multiToSingle+1,c
  2218  0007F4  0012               	return		;funcret
  2219  0007F6                     __end_of_multiToSingle:
  2220                           	opt stack 0
  2221                           intcon	equ	0xFF2
  2222                           postinc0	equ	0xFEE
  2223                           wreg	equ	0xFE8
  2224                           postdec1	equ	0xFE5
  2225                           fsr1h	equ	0xFE2
  2226                           fsr1l	equ	0xFE1
  2227                           indf2	equ	0xFDF
  2228                           postinc2	equ	0xFDE
  2229                           postdec2	equ	0xFDD
  2230                           fsr2h	equ	0xFDA
  2231                           fsr2l	equ	0xFD9
  2232                           status	equ	0xFD8
  2233                           
  2234 ;; *************** function _findStart *****************
  2235 ;; Defined at:
  2236 ;;		line 98 in file "RFID.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  i               2   21[COMRAM] int 
  2241 ;;  count           2   19[COMRAM] int 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2   15[COMRAM] int 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;Total ram usage:        8 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    2
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text6
  2266  000C36                     __ptext6:
  2267                           	opt stack 0
  2268  000C36                     _findStart:
  2269                           	opt stack 28
  2270                           
  2271                           ;RFID.c: 99: int count = 0;
  2272                           
  2273                           ;incstack = 0
  2274  000C36  0E00               	movlw	0
  2275  000C38  6E49               	movwf	findStart@count+1,c
  2276  000C3A  0E00               	movlw	0
  2277  000C3C  6E48               	movwf	findStart@count,c
  2278                           
  2279                           ;RFID.c: 101: for(int i = 0; i<201; i++){
  2280  000C3E  0E00               	movlw	0
  2281  000C40  6E4B               	movwf	findStart@i+1,c
  2282  000C42  0E00               	movlw	0
  2283  000C44  6E4A               	movwf	findStart@i,c
  2284  000C46                     l2635:
  2285  000C46  BE4B               	btfsc	findStart@i+1,7,c
  2286  000C48  D006               	goto	l2639
  2287  000C4A  504B               	movf	findStart@i+1,w,c
  2288  000C4C  E134               	bnz	l613
  2289  000C4E  0EC9               	movlw	201
  2290  000C50  5C4A               	subwf	findStart@i,w,c
  2291  000C52  B0D8               	btfsc	status,0,c
  2292  000C54  0012               	return	
  2293  000C56                     l2639:
  2294                           
  2295                           ;RFID.c: 102: if(bitArray[i] != 2){
  2296  000C56  90D8               	bcf	status,0,c
  2297  000C58  344A               	rlcf	findStart@i,w,c
  2298  000C5A  6ED9               	movwf	fsr2l,c
  2299  000C5C  344B               	rlcf	findStart@i+1,w,c
  2300  000C5E  6EDA               	movwf	fsr2h,c
  2301  000C60  0E3E               	movlw	low _bitArray
  2302  000C62  26D9               	addwf	fsr2l,f,c
  2303  000C64  0E04               	movlw	high _bitArray
  2304  000C66  22DA               	addwfc	fsr2h,f,c
  2305  000C68  0E02               	movlw	2
  2306  000C6A  18DE               	xorwf	postinc2,w,c
  2307  000C6C  10DE               	iorwf	postinc2,w,c
  2308  000C6E  B4D8               	btfsc	status,2,c
  2309  000C70  D01F               	goto	l2653
  2310                           
  2311                           ;RFID.c: 104: if(bitArray[i] == 1){
  2312  000C72  90D8               	bcf	status,0,c
  2313  000C74  344A               	rlcf	findStart@i,w,c
  2314  000C76  6ED9               	movwf	fsr2l,c
  2315  000C78  344B               	rlcf	findStart@i+1,w,c
  2316  000C7A  6EDA               	movwf	fsr2h,c
  2317  000C7C  0E3E               	movlw	low _bitArray
  2318  000C7E  26D9               	addwf	fsr2l,f,c
  2319  000C80  0E04               	movlw	high _bitArray
  2320  000C82  22DA               	addwfc	fsr2h,f,c
  2321  000C84  04DE               	decf	postinc2,w,c
  2322  000C86  10DE               	iorwf	postinc2,w,c
  2323  000C88  A4D8               	btfss	status,2,c
  2324  000C8A  D00E               	goto	l2651
  2325                           
  2326                           ;RFID.c: 105: count++;
  2327  000C8C  4A48               	infsnz	findStart@count,f,c
  2328  000C8E  2A49               	incf	findStart@count+1,f,c
  2329                           
  2330                           ;RFID.c: 106: if(count == 9){
  2331  000C90  0E09               	movlw	9
  2332  000C92  1848               	xorwf	findStart@count,w,c
  2333  000C94  1049               	iorwf	findStart@count+1,w,c
  2334  000C96  A4D8               	btfss	status,2,c
  2335  000C98  D00B               	goto	l2653
  2336                           
  2337                           ;RFID.c: 107: return i+1;
  2338  000C9A  0E01               	movlw	1
  2339  000C9C  244A               	addwf	findStart@i,w,c
  2340  000C9E  6E44               	movwf	?_findStart,c
  2341  000CA0  0E00               	movlw	0
  2342  000CA2  204B               	addwfc	findStart@i+1,w,c
  2343  000CA4  6E45               	movwf	?_findStart+1,c
  2344  000CA6  0012               	return	
  2345  000CA8                     l2651:
  2346                           
  2347                           ;RFID.c: 110: else{
  2348                           ;RFID.c: 111: count = 0;
  2349  000CA8  0E00               	movlw	0
  2350  000CAA  6E49               	movwf	findStart@count+1,c
  2351  000CAC  0E00               	movlw	0
  2352  000CAE  6E48               	movwf	findStart@count,c
  2353  000CB0                     l2653:
  2354  000CB0  4A4A               	infsnz	findStart@i,f,c
  2355  000CB2  2A4B               	incf	findStart@i+1,f,c
  2356  000CB4  D7C8               	goto	l2635
  2357  000CB6                     l613:
  2358  000CB6  0012               	return		;funcret
  2359  000CB8                     __end_of_findStart:
  2360                           	opt stack 0
  2361                           intcon	equ	0xFF2
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           postdec1	equ	0xFE5
  2365                           fsr1h	equ	0xFE2
  2366                           fsr1l	equ	0xFE1
  2367                           indf2	equ	0xFDF
  2368                           postinc2	equ	0xFDE
  2369                           postdec2	equ	0xFDD
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8
  2373                           
  2374 ;; *************** function _bitToCode *****************
  2375 ;; Defined at:
  2376 ;;		line 191 in file "RFID.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  start           2   21[COMRAM] int 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  stanna          2   68[BANK0 ] int 
  2381 ;;  i               2   70[BANK0 ] int 
  2382 ;;  code           60    8[BANK0 ] int [30]
  2383 ;; Return value:  Size  Location     Type
  2384 ;;		None               void
  2385 ;; Registers used:
  2386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2394 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2395 ;;      Totals:         2      72       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2396 ;;Total ram usage:       74 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    3
  2399 ;; This function calls:
  2400 ;;		___wmul
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text7
  2407  000470                     __ptext7:
  2408                           	opt stack 0
  2409  000470                     _bitToCode:
  2410                           	opt stack 27
  2411                           
  2412                           ;RFID.c: 192: int code[30];
  2413                           ;RFID.c: 194: for(int i = 0; i<30; i++){
  2414                           
  2415                           ;incstack = 0
  2416  000470  0E00               	movlw	0
  2417  000472  0100               	movlb	0	; () banked
  2418  000474  6FA7               	movwf	(bitToCode@i+1)& (0+255),b
  2419  000476  0E00               	movlw	0
  2420  000478  6FA6               	movwf	bitToCode@i& (0+255),b
  2421                           
  2422                           ; BSR set to: 0
  2423  00047A  0100               	movlb	0	; () banked
  2424  00047C  BFA7               	btfsc	(bitToCode@i+1)& (0+255),7,b
  2425  00047E  D00A               	goto	l2663
  2426  000480  0100               	movlb	0	; () banked
  2427  000482  51A7               	movf	(bitToCode@i+1)& (0+255),w,b
  2428  000484  E106               	bnz	u1800
  2429  000486  0E1E               	movlw	30
  2430  000488  0100               	movlb	0	; () banked
  2431  00048A  5DA6               	subwf	bitToCode@i& (0+255),w,b
  2432  00048C  B0D8               	btfsc	status,0,c
  2433  00048E  D0D7               	goto	l2669
  2434  000490  D001               	goto	l2663
  2435  000492                     u1800:
  2436                           
  2437                           ; BSR set to: 0
  2438  000492  D0D5               	goto	l2669
  2439  000494                     l2663:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;RFID.c: 195: code[i] = (0b1111 & (bitArray[i*5+start] << 3)) |
  2443                           ;RFID.c: 196: (0b1111 & (bitArray[i*5+start+1] << 2)) |
  2444                           ;RFID.c: 197: (0b1111 & (bitArray[i*5+start+2] << 1)) |
  2445                           ;RFID.c: 198: (0b1111 & (bitArray[i*5+start+3] << 0));
  2446  000494  C0A6  F044         	movff	bitToCode@i,___wmul@multiplier
  2447  000498  C0A7  F045         	movff	bitToCode@i+1,___wmul@multiplier+1
  2448  00049C  0E00               	movlw	0
  2449  00049E  6E47               	movwf	___wmul@multiplicand+1,c
  2450  0004A0  0E05               	movlw	5
  2451  0004A2  6E46               	movwf	___wmul@multiplicand,c
  2452  0004A4  EC3D  F007         	call	___wmul	;wreg free
  2453  0004A8  504A               	movf	bitToCode@start,w,c
  2454  0004AA  2644               	addwf	?___wmul,f,c
  2455  0004AC  504B               	movf	bitToCode@start+1,w,c
  2456  0004AE  2245               	addwfc	?___wmul+1,f,c
  2457  0004B0  90D8               	bcf	status,0,c
  2458  0004B2  3644               	rlcf	?___wmul,f,c
  2459  0004B4  3645               	rlcf	?___wmul+1,f,c
  2460  0004B6  0E06               	movlw	6
  2461  0004B8  2644               	addwf	?___wmul,f,c
  2462  0004BA  0E00               	movlw	0
  2463  0004BC  2245               	addwfc	?___wmul+1,f,c
  2464  0004BE  0E3E               	movlw	low _bitArray
  2465  0004C0  2444               	addwf	?___wmul,w,c
  2466  0004C2  6ED9               	movwf	fsr2l,c
  2467  0004C4  0E04               	movlw	high _bitArray
  2468  0004C6  2045               	addwfc	?___wmul+1,w,c
  2469  0004C8  6EDA               	movwf	fsr2h,c
  2470  0004CA  CFDE F060          	movff	postinc2,??_bitToCode
  2471  0004CE  CFDD F061          	movff	postdec2,??_bitToCode+1
  2472  0004D2  0E0F               	movlw	15
  2473  0004D4  0100               	movlb	0	; () banked
  2474  0004D6  1760               	andwf	??_bitToCode& (0+255),f,b
  2475  0004D8  0E00               	movlw	0
  2476  0004DA  1761               	andwf	(??_bitToCode+1)& (0+255),f,b
  2477  0004DC  C0A6  F044         	movff	bitToCode@i,___wmul@multiplier
  2478  0004E0  C0A7  F045         	movff	bitToCode@i+1,___wmul@multiplier+1
  2479  0004E4  0E00               	movlw	0
  2480  0004E6  6E47               	movwf	___wmul@multiplicand+1,c
  2481  0004E8  0E05               	movlw	5
  2482  0004EA  6E46               	movwf	___wmul@multiplicand,c
  2483  0004EC  EC3D  F007         	call	___wmul	;wreg free
  2484  0004F0  504A               	movf	bitToCode@start,w,c
  2485  0004F2  2644               	addwf	?___wmul,f,c
  2486  0004F4  504B               	movf	bitToCode@start+1,w,c
  2487  0004F6  2245               	addwfc	?___wmul+1,f,c
  2488  0004F8  90D8               	bcf	status,0,c
  2489  0004FA  3644               	rlcf	?___wmul,f,c
  2490  0004FC  3645               	rlcf	?___wmul+1,f,c
  2491  0004FE  0E04               	movlw	4
  2492  000500  2644               	addwf	?___wmul,f,c
  2493  000502  0E00               	movlw	0
  2494  000504  2245               	addwfc	?___wmul+1,f,c
  2495  000506  0E3E               	movlw	low _bitArray
  2496  000508  2444               	addwf	?___wmul,w,c
  2497  00050A  6ED9               	movwf	fsr2l,c
  2498  00050C  0E04               	movlw	high _bitArray
  2499  00050E  2045               	addwfc	?___wmul+1,w,c
  2500  000510  6EDA               	movwf	fsr2h,c
  2501  000512  CFDE F062          	movff	postinc2,??_bitToCode+2
  2502  000516  CFDD F063          	movff	postdec2,??_bitToCode+3
  2503  00051A  90D8               	bcf	status,0,c
  2504  00051C  0100               	movlb	0	; () banked
  2505  00051E  3762               	rlcf	(??_bitToCode+2)& (0+255),f,b
  2506  000520  3763               	rlcf	(??_bitToCode+3)& (0+255),f,b
  2507  000522  0E0F               	movlw	15
  2508  000524  0100               	movlb	0	; () banked
  2509  000526  1762               	andwf	(??_bitToCode+2)& (0+255),f,b
  2510  000528  0E00               	movlw	0
  2511  00052A  1763               	andwf	(??_bitToCode+3)& (0+255),f,b
  2512  00052C  C0A6  F044         	movff	bitToCode@i,___wmul@multiplier
  2513  000530  C0A7  F045         	movff	bitToCode@i+1,___wmul@multiplier+1
  2514  000534  0E00               	movlw	0
  2515  000536  6E47               	movwf	___wmul@multiplicand+1,c
  2516  000538  0E05               	movlw	5
  2517  00053A  6E46               	movwf	___wmul@multiplicand,c
  2518  00053C  EC3D  F007         	call	___wmul	;wreg free
  2519  000540  504A               	movf	bitToCode@start,w,c
  2520  000542  2644               	addwf	?___wmul,f,c
  2521  000544  504B               	movf	bitToCode@start+1,w,c
  2522  000546  2245               	addwfc	?___wmul+1,f,c
  2523  000548  90D8               	bcf	status,0,c
  2524  00054A  3644               	rlcf	?___wmul,f,c
  2525  00054C  3645               	rlcf	?___wmul+1,f,c
  2526  00054E  0E02               	movlw	2
  2527  000550  2644               	addwf	?___wmul,f,c
  2528  000552  0E00               	movlw	0
  2529  000554  2245               	addwfc	?___wmul+1,f,c
  2530  000556  0E3E               	movlw	low _bitArray
  2531  000558  2444               	addwf	?___wmul,w,c
  2532  00055A  6ED9               	movwf	fsr2l,c
  2533  00055C  0E04               	movlw	high _bitArray
  2534  00055E  2045               	addwfc	?___wmul+1,w,c
  2535  000560  6EDA               	movwf	fsr2h,c
  2536  000562  CFDE F064          	movff	postinc2,??_bitToCode+4
  2537  000566  CFDD F065          	movff	postdec2,??_bitToCode+5
  2538  00056A  0100               	movlb	0	; () banked
  2539  00056C  90D8               	bcf	status,0,c
  2540  00056E  3764               	rlcf	(??_bitToCode+4)& (0+255),f,b
  2541  000570  3765               	rlcf	(??_bitToCode+5)& (0+255),f,b
  2542  000572  0100               	movlb	0	; () banked
  2543  000574  90D8               	bcf	status,0,c
  2544  000576  3764               	rlcf	(??_bitToCode+4)& (0+255),f,b
  2545  000578  3765               	rlcf	(??_bitToCode+5)& (0+255),f,b
  2546  00057A  0E0F               	movlw	15
  2547  00057C  0100               	movlb	0	; () banked
  2548  00057E  1764               	andwf	(??_bitToCode+4)& (0+255),f,b
  2549  000580  0E00               	movlw	0
  2550  000582  1765               	andwf	(??_bitToCode+5)& (0+255),f,b
  2551  000584  C0A6  F044         	movff	bitToCode@i,___wmul@multiplier
  2552  000588  C0A7  F045         	movff	bitToCode@i+1,___wmul@multiplier+1
  2553  00058C  0E00               	movlw	0
  2554  00058E  6E47               	movwf	___wmul@multiplicand+1,c
  2555  000590  0E05               	movlw	5
  2556  000592  6E46               	movwf	___wmul@multiplicand,c
  2557  000594  EC3D  F007         	call	___wmul	;wreg free
  2558  000598  504A               	movf	bitToCode@start,w,c
  2559  00059A  2644               	addwf	?___wmul,f,c
  2560  00059C  504B               	movf	bitToCode@start+1,w,c
  2561  00059E  2245               	addwfc	?___wmul+1,f,c
  2562  0005A0  90D8               	bcf	status,0,c
  2563  0005A2  3644               	rlcf	?___wmul,f,c
  2564  0005A4  3645               	rlcf	?___wmul+1,f,c
  2565  0005A6  0E3E               	movlw	low _bitArray
  2566  0005A8  2444               	addwf	?___wmul,w,c
  2567  0005AA  6ED9               	movwf	fsr2l,c
  2568  0005AC  0E04               	movlw	high _bitArray
  2569  0005AE  2045               	addwfc	?___wmul+1,w,c
  2570  0005B0  6EDA               	movwf	fsr2h,c
  2571  0005B2  CFDE F066          	movff	postinc2,??_bitToCode+6
  2572  0005B6  CFDD F067          	movff	postdec2,??_bitToCode+7
  2573  0005BA  0100               	movlb	0	; () banked
  2574  0005BC  90D8               	bcf	status,0,c
  2575  0005BE  3766               	rlcf	(??_bitToCode+6)& (0+255),f,b
  2576  0005C0  3767               	rlcf	(??_bitToCode+7)& (0+255),f,b
  2577  0005C2  0100               	movlb	0	; () banked
  2578  0005C4  90D8               	bcf	status,0,c
  2579  0005C6  3766               	rlcf	(??_bitToCode+6)& (0+255),f,b
  2580  0005C8  3767               	rlcf	(??_bitToCode+7)& (0+255),f,b
  2581  0005CA  0100               	movlb	0	; () banked
  2582  0005CC  90D8               	bcf	status,0,c
  2583  0005CE  3766               	rlcf	(??_bitToCode+6)& (0+255),f,b
  2584  0005D0  3767               	rlcf	(??_bitToCode+7)& (0+255),f,b
  2585  0005D2  0E0F               	movlw	15
  2586  0005D4  0100               	movlb	0	; () banked
  2587  0005D6  1766               	andwf	(??_bitToCode+6)& (0+255),f,b
  2588  0005D8  0E00               	movlw	0
  2589  0005DA  1767               	andwf	(??_bitToCode+7)& (0+255),f,b
  2590  0005DC  0100               	movlb	0	; () banked
  2591  0005DE  5164               	movf	(??_bitToCode+4)& (0+255),w,b
  2592  0005E0  0100               	movlb	0	; () banked
  2593  0005E2  1366               	iorwf	(??_bitToCode+6)& (0+255),f,b
  2594  0005E4  0100               	movlb	0	; () banked
  2595  0005E6  5165               	movf	(??_bitToCode+5)& (0+255),w,b
  2596  0005E8  0100               	movlb	0	; () banked
  2597  0005EA  1367               	iorwf	(??_bitToCode+7)& (0+255),f,b
  2598  0005EC  0100               	movlb	0	; () banked
  2599  0005EE  5162               	movf	(??_bitToCode+2)& (0+255),w,b
  2600  0005F0  0100               	movlb	0	; () banked
  2601  0005F2  1366               	iorwf	(??_bitToCode+6)& (0+255),f,b
  2602  0005F4  0100               	movlb	0	; () banked
  2603  0005F6  5163               	movf	(??_bitToCode+3)& (0+255),w,b
  2604  0005F8  0100               	movlb	0	; () banked
  2605  0005FA  1367               	iorwf	(??_bitToCode+7)& (0+255),f,b
  2606  0005FC  0100               	movlb	0	; () banked
  2607  0005FE  5160               	movf	??_bitToCode& (0+255),w,b
  2608  000600  0100               	movlb	0	; () banked
  2609  000602  1366               	iorwf	(??_bitToCode+6)& (0+255),f,b
  2610  000604  0100               	movlb	0	; () banked
  2611  000606  5161               	movf	(??_bitToCode+1)& (0+255),w,b
  2612  000608  0100               	movlb	0	; () banked
  2613  00060A  1367               	iorwf	(??_bitToCode+7)& (0+255),f,b
  2614  00060C  90D8               	bcf	status,0,c
  2615  00060E  0100               	movlb	0	; () banked
  2616  000610  35A6               	rlcf	bitToCode@i& (0+255),w,b
  2617  000612  6ED9               	movwf	fsr2l,c
  2618  000614  0100               	movlb	0	; () banked
  2619  000616  35A7               	rlcf	(bitToCode@i+1)& (0+255),w,b
  2620  000618  6EDA               	movwf	fsr2h,c
  2621  00061A  0E68               	movlw	low bitToCode@code
  2622  00061C  26D9               	addwf	fsr2l,f,c
  2623  00061E  0E00               	movlw	high bitToCode@code
  2624  000620  22DA               	addwfc	fsr2h,f,c
  2625  000622  C066  FFDE         	movff	??_bitToCode+6,postinc2
  2626  000626  C067  FFDD         	movff	??_bitToCode+7,postdec2
  2627                           
  2628                           ; BSR set to: 0
  2629  00062A  0100               	movlb	0	; () banked
  2630  00062C  4BA6               	infsnz	bitToCode@i& (0+255),f,b
  2631  00062E  2BA7               	incf	(bitToCode@i+1)& (0+255),f,b
  2632                           
  2633                           ; BSR set to: 0
  2634  000630  0100               	movlb	0	; () banked
  2635  000632  BFA7               	btfsc	(bitToCode@i+1)& (0+255),7,b
  2636  000634  D72F               	goto	l2663
  2637  000636  0100               	movlb	0	; () banked
  2638  000638  51A7               	movf	(bitToCode@i+1)& (0+255),w,b
  2639  00063A  E101               	bnz	l2669
  2640  00063C  D724               	goto	L7
  2641  00063E                     l2669:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;RFID.c: 202: int stanna = 4;
  2645  00063E  0E00               	movlw	0
  2646  000640  0100               	movlb	0	; () banked
  2647  000642  6FA5               	movwf	(bitToCode@stanna+1)& (0+255),b
  2648  000644  0E04               	movlw	4
  2649  000646  6FA4               	movwf	bitToCode@stanna& (0+255),b
  2650                           
  2651                           ; BSR set to: 0
  2652  000648  D7FA               	goto	l2669
  2653  00064A                     __end_of_bitToCode:
  2654                           	opt stack 0
  2655                           intcon	equ	0xFF2
  2656                           postinc0	equ	0xFEE
  2657                           wreg	equ	0xFE8
  2658                           postdec1	equ	0xFE5
  2659                           fsr1h	equ	0xFE2
  2660                           fsr1l	equ	0xFE1
  2661                           indf2	equ	0xFDF
  2662                           postinc2	equ	0xFDE
  2663                           postdec2	equ	0xFDD
  2664                           fsr2h	equ	0xFDA
  2665                           fsr2l	equ	0xFD9
  2666                           status	equ	0xFD8
  2667                           
  2668 ;; *************** function ___wmul *****************
  2669 ;; Defined at:
  2670 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  multiplier      2   15[COMRAM] unsigned int 
  2673 ;;  multiplicand    2   17[COMRAM] unsigned int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  product         2   19[COMRAM] unsigned int 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  2   15[COMRAM] unsigned int 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0, prodl, prodh
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;Total ram usage:        6 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    2
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_bitToCode
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text8
  2700  000E7A                     __ptext8:
  2701                           	opt stack 0
  2702  000E7A                     ___wmul:
  2703                           	opt stack 27
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;incstack = 0
  2707  000E7A  5044               	movf	___wmul@multiplier,w,c
  2708  000E7C  0246               	mulwf	___wmul@multiplicand,c
  2709  000E7E  CFF3 F048          	movff	prodl,___wmul@product
  2710  000E82  CFF4 F049          	movff	prodh,___wmul@product+1
  2711  000E86  5044               	movf	___wmul@multiplier,w,c
  2712  000E88  0247               	mulwf	___wmul@multiplicand+1,c
  2713  000E8A  50F3               	movf	prodl,w,c
  2714  000E8C  2649               	addwf	___wmul@product+1,f,c
  2715  000E8E  5045               	movf	___wmul@multiplier+1,w,c
  2716  000E90  0246               	mulwf	___wmul@multiplicand,c
  2717  000E92  50F3               	movf	prodl,w,c
  2718  000E94  2649               	addwf	___wmul@product+1,f,c
  2719  000E96  C048  F044         	movff	___wmul@product,?___wmul
  2720  000E9A  C049  F045         	movff	___wmul@product+1,?___wmul+1
  2721  000E9E  0012               	return	
  2722  000EA0                     __end_of___wmul:
  2723                           	opt stack 0
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           intcon	equ	0xFF2
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           postdec1	equ	0xFE5
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           postinc2	equ	0xFDE
  2734                           postdec2	equ	0xFDD
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _InitDevice *****************
  2740 ;; Defined at:
  2741 ;;		line 9 in file "init.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;		None               void
  2748 ;; Registers used:
  2749 ;;		wreg, status,2
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    2
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text9
  2770  000CB8                     __ptext9:
  2771                           	opt stack 0
  2772  000CB8                     _InitDevice:
  2773                           	opt stack 28
  2774                           
  2775                           ;init.c: 11: Interrupt_counter = 0;
  2776                           
  2777                           ;incstack = 0
  2778  000CB8  0E00               	movlw	0
  2779  000CBA  0100               	movlb	0	; () banked
  2780  000CBC  6FAF               	movwf	(_Interrupt_counter+1)& (0+255),b
  2781  000CBE  0E00               	movlw	0
  2782  000CC0  6FAE               	movwf	_Interrupt_counter& (0+255),b
  2783                           
  2784                           ;init.c: 14: OSCCON = 0x60;
  2785  000CC2  0E60               	movlw	96
  2786  000CC4  6ED3               	movwf	4051,c	;volatile
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;init.c: 15: OSCCONbits.IRCF = 7;
  2790  000CC6  88D3               	bsf	4051,4,c	;volatile
  2791  000CC8  8AD3               	bsf	4051,5,c	;volatile
  2792  000CCA  8CD3               	bsf	4051,6,c	;volatile
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  2796  000CCC  8C9B               	bsf	3995,6,c	;volatile
  2797                           
  2798                           ;init.c: 19: heartbeatCount = 0;
  2799  000CCE  0E00               	movlw	0
  2800  000CD0  0100               	movlb	0	; () banked
  2801  000CD2  6FB9               	movwf	(_heartbeatCount+1)& (0+255),b
  2802  000CD4  0E00               	movlw	0
  2803  000CD6  6FB8               	movwf	_heartbeatCount& (0+255),b
  2804                           
  2805                           ;init.c: 20: buttonWasPressed = 0;
  2806  000CD8  0E00               	movlw	0
  2807  000CDA  6E26               	movwf	_buttonWasPressed,c
  2808                           
  2809                           ;init.c: 23: ANCON0 = ANCON1 = 0x00;
  2810  000CDC  0E00               	movlw	0
  2811  000CDE  010F               	movlb	15	; () banked
  2812  000CE0  6F5C               	movwf	92,b	;volatile
  2813  000CE2  CF5C FF5D          	movff	3932,3933	;volatile
  2814                           
  2815                           ; BSR set to: 15
  2816                           ;init.c: 24: TRISB = 0xFF;
  2817  000CE6  6893               	setf	3987,c	;volatile
  2818                           
  2819                           ;init.c: 27: TRISA = 0b01111111;
  2820  000CE8  0E7F               	movlw	127
  2821  000CEA  6E92               	movwf	3986,c	;volatile
  2822                           
  2823                           ; BSR set to: 15
  2824                           ;init.c: 28: LATAbits.LATA7 = 0;
  2825  000CEC  9E89               	bcf	3977,7,c	;volatile
  2826                           
  2827                           ;init.c: 31: TRISC = 0b00011000;
  2828  000CEE  0E18               	movlw	24
  2829  000CF0  6E94               	movwf	3988,c	;volatile
  2830                           
  2831                           ; BSR set to: 15
  2832                           ;init.c: 32: LATCbits.LATC6 = 0;
  2833  000CF2  9C8B               	bcf	3979,6,c	;volatile
  2834                           
  2835                           ; BSR set to: 15
  2836                           ;init.c: 33: LATCbits.LATC7 = 0;
  2837  000CF4  9E8B               	bcf	3979,7,c	;volatile
  2838                           
  2839                           ; BSR set to: 15
  2840                           ;init.c: 39: T0CONbits.TMR0ON = 1;
  2841  000CF6  8ED5               	bsf	4053,7,c	;volatile
  2842                           
  2843                           ; BSR set to: 15
  2844                           ;init.c: 40: T0CONbits.T08BIT = 0;
  2845  000CF8  9CD5               	bcf	4053,6,c	;volatile
  2846                           
  2847                           ; BSR set to: 15
  2848                           ;init.c: 41: T0CONbits.T0CS = 0;
  2849  000CFA  9AD5               	bcf	4053,5,c	;volatile
  2850                           
  2851                           ; BSR set to: 15
  2852                           ;init.c: 43: T0CONbits.PSA = 0;
  2853  000CFC  96D5               	bcf	4053,3,c	;volatile
  2854                           
  2855                           ; BSR set to: 15
  2856                           ;init.c: 44: T0CONbits.T0PS = 7;
  2857  000CFE  80D5               	bsf	4053,0,c	;volatile
  2858  000D00  82D5               	bsf	4053,1,c	;volatile
  2859  000D02  84D5               	bsf	4053,2,c	;volatile
  2860                           
  2861                           ;init.c: 51: MAP_BRAKE = 0;
  2862  000D04  0E00               	movlw	0
  2863  000D06  6E16               	movwf	_MAP_BRAKE+1,c
  2864  000D08  0E00               	movlw	0
  2865  000D0A  6E15               	movwf	_MAP_BRAKE,c
  2866                           
  2867                           ;init.c: 52: MAP_BACKLIGHT = 0;
  2868  000D0C  0E00               	movlw	0
  2869  000D0E  6E14               	movwf	_MAP_BACKLIGHT+1,c
  2870  000D10  0E00               	movlw	0
  2871  000D12  6E13               	movwf	_MAP_BACKLIGHT,c
  2872                           
  2873                           ;init.c: 53: MAP_V_BLINK = 0;
  2874  000D14  0E00               	movlw	0
  2875  000D16  6E1E               	movwf	_MAP_V_BLINK+1,c
  2876  000D18  0E00               	movlw	0
  2877  000D1A  6E1D               	movwf	_MAP_V_BLINK,c
  2878                           
  2879                           ;init.c: 54: MAP_H_BLINK = 0;
  2880  000D1C  0E00               	movlw	0
  2881  000D1E  6E1A               	movwf	_MAP_H_BLINK+1,c
  2882  000D20  0E00               	movlw	0
  2883  000D22  6E19               	movwf	_MAP_H_BLINK,c
  2884                           
  2885                           ;init.c: 55: MAP_DIRECTION = 0;
  2886  000D24  0E00               	movlw	0
  2887  000D26  6E18               	movwf	_MAP_DIRECTION+1,c
  2888  000D28  0E00               	movlw	0
  2889  000D2A  6E17               	movwf	_MAP_DIRECTION,c
  2890                           
  2891                           ;init.c: 56: MAP_SAFETYPIN = 0;
  2892  000D2C  0E00               	movlw	0
  2893  000D2E  6E1C               	movwf	_MAP_SAFETYPIN+1,c
  2894  000D30  0E00               	movlw	0
  2895  000D32  6E1B               	movwf	_MAP_SAFETYPIN,c
  2896                           
  2897                           ; BSR set to: 15
  2898  000D34  0012               	return		;funcret
  2899  000D36                     __end_of_InitDevice:
  2900                           	opt stack 0
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           postinc0	equ	0xFEE
  2905                           wreg	equ	0xFE8
  2906                           postdec1	equ	0xFE5
  2907                           fsr1h	equ	0xFE2
  2908                           fsr1l	equ	0xFE1
  2909                           indf2	equ	0xFDF
  2910                           postinc2	equ	0xFDE
  2911                           postdec2	equ	0xFDD
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function _I2CSetup *****************
  2917 ;; Defined at:
  2918 ;;		line 10 in file "I2C.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  i               2   15[COMRAM] int 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;		None               void
  2925 ;; Registers used:
  2926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;Total ram usage:        2 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    2
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text10
  2947  000DA4                     __ptext10:
  2948                           	opt stack 0
  2949  000DA4                     _I2CSetup:
  2950                           	opt stack 28
  2951                           
  2952                           ;I2C.c: 12: SSPADD = 0x55;
  2953                           
  2954                           ; BSR set to: 15
  2955                           ;incstack = 0
  2956  000DA4  0E55               	movlw	85
  2957  000DA6  6EC8               	movwf	4040,c	;volatile
  2958                           
  2959                           ;I2C.c: 13: SSPCON1 = 0x36;
  2960  000DA8  0E36               	movlw	54
  2961  000DAA  6EC6               	movwf	4038,c	;volatile
  2962                           
  2963                           ;I2C.c: 16: SSPSTAT = 0x00;
  2964  000DAC  0E00               	movlw	0
  2965  000DAE  6EC7               	movwf	4039,c	;volatile
  2966                           
  2967                           ;I2C.c: 17: SSPCON2 = 0x01;
  2968  000DB0  0E01               	movlw	1
  2969  000DB2  6EC5               	movwf	4037,c	;volatile
  2970                           
  2971                           ;I2C.c: 19: PIR1bits.SSPIF = 0;
  2972  000DB4  969E               	bcf	3998,3,c	;volatile
  2973                           
  2974                           ;I2C.c: 20: PIE1bits.SSPIE = 1;
  2975  000DB6  869D               	bsf	3997,3,c	;volatile
  2976                           
  2977                           ;I2C.c: 21: INTCONbits.GIE_GIEH = 1;
  2978  000DB8  8EF2               	bsf	intcon,7,c	;volatile
  2979                           
  2980                           ;I2C.c: 22: INTCONbits.PEIE_GIEL = 1;
  2981  000DBA  8CF2               	bsf	intcon,6,c	;volatile
  2982                           
  2983                           ;I2C.c: 25: for(int i = 0; i<16; i++){
  2984  000DBC  0E00               	movlw	0
  2985  000DBE  6E45               	movwf	I2CSetup@i+1,c
  2986  000DC0  0E00               	movlw	0
  2987  000DC2  6E44               	movwf	I2CSetup@i,c
  2988  000DC4                     l2467:
  2989  000DC4  BE45               	btfsc	I2CSetup@i+1,7,c
  2990  000DC6  D006               	goto	l2471
  2991  000DC8  5045               	movf	I2CSetup@i+1,w,c
  2992  000DCA  E10F               	bnz	l2477
  2993  000DCC  0E10               	movlw	16
  2994  000DCE  5C44               	subwf	I2CSetup@i,w,c
  2995  000DD0  B0D8               	btfsc	status,0,c
  2996  000DD2  D00B               	goto	l2477
  2997  000DD4                     l2471:
  2998                           
  2999                           ;I2C.c: 26: i2c_reg_map[i] = 0;
  3000  000DD4  0E01               	movlw	low _i2c_reg_map
  3001  000DD6  2444               	addwf	I2CSetup@i,w,c
  3002  000DD8  6ED9               	movwf	fsr2l,c
  3003  000DDA  0E00               	movlw	high _i2c_reg_map
  3004  000DDC  2045               	addwfc	I2CSetup@i+1,w,c
  3005  000DDE  6EDA               	movwf	fsr2h,c
  3006  000DE0  0E00               	movlw	0
  3007  000DE2  6EDF               	movwf	indf2,c
  3008  000DE4  4A44               	infsnz	I2CSetup@i,f,c
  3009  000DE6  2A45               	incf	I2CSetup@i+1,f,c
  3010  000DE8  D7ED               	goto	l2467
  3011  000DEA                     l2477:
  3012                           
  3013                           ;I2C.c: 27: }
  3014                           ;I2C.c: 30: i2c_reg_map[8] = 1;
  3015  000DEA  0E01               	movlw	1
  3016  000DEC  6E09               	movwf	_i2c_reg_map+8,c	;volatile
  3017                           
  3018                           ;I2C.c: 31: i2c_reg_map[temp_D2] = 1;
  3019  000DEE  502A               	movf	_temp_D2,w,c
  3020  000DF0  0D01               	mullw	1
  3021  000DF2  0E01               	movlw	low _i2c_reg_map
  3022  000DF4  24F3               	addwf	prodl,w,c
  3023  000DF6  6ED9               	movwf	fsr2l,c
  3024  000DF8  0E00               	movlw	high _i2c_reg_map
  3025  000DFA  20F4               	addwfc	prodh,w,c
  3026  000DFC  6EDA               	movwf	fsr2h,c
  3027  000DFE  0E01               	movlw	1
  3028  000E00  6EDF               	movwf	indf2,c
  3029  000E02  0012               	return		;funcret
  3030  000E04                     __end_of_I2CSetup:
  3031                           	opt stack 0
  3032                           prodh	equ	0xFF4
  3033                           prodl	equ	0xFF3
  3034                           intcon	equ	0xFF2
  3035                           postinc0	equ	0xFEE
  3036                           wreg	equ	0xFE8
  3037                           postdec1	equ	0xFE5
  3038                           fsr1h	equ	0xFE2
  3039                           fsr1l	equ	0xFE1
  3040                           indf2	equ	0xFDF
  3041                           postinc2	equ	0xFDE
  3042                           postdec2	equ	0xFDD
  3043                           fsr2h	equ	0xFDA
  3044                           fsr2l	equ	0xFD9
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function _ECAN_Transmit *****************
  3048 ;; Defined at:
  3049 ;;		line 296 in file "ECAN.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  SIDH            1    wreg     unsigned char 
  3052 ;;  SIDL            1   15[COMRAM] unsigned char 
  3053 ;;  DLC             1   16[COMRAM] unsigned char 
  3054 ;;  TRANSMIT_ID     1   17[COMRAM] unsigned char 
  3055 ;;  DATA1           1   18[COMRAM] unsigned char 
  3056 ;;  DATA2           1   19[COMRAM] unsigned char 
  3057 ;;  DATA3           1   20[COMRAM] unsigned char 
  3058 ;;  DATA4           1   21[COMRAM] unsigned char 
  3059 ;;  DATA5           1   22[COMRAM] unsigned char 
  3060 ;;  DATA6           1   23[COMRAM] unsigned char 
  3061 ;;  DATA7           1   24[COMRAM] unsigned char 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  SIDH            1   25[COMRAM] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;		None               void
  3066 ;; Registers used:
  3067 ;;		wreg, status,2
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3073 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;Total ram usage:       11 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    2
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_main
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text11
  3088  000E04                     __ptext11:
  3089                           	opt stack 0
  3090  000E04                     _ECAN_Transmit:
  3091                           	opt stack 28
  3092                           
  3093                           ;incstack = 0
  3094                           ;ECAN_Transmit@SIDH stored from wreg
  3095  000E04  6E4E               	movwf	ECAN_Transmit@SIDH,c
  3096                           
  3097                           ;ECAN.c: 308: TXB0EIDH = 0x00;
  3098  000E06  0E00               	movlw	0
  3099  000E08  010F               	movlb	15	; () banked
  3100  000E0A  6F23               	movwf	35,b	;volatile
  3101                           
  3102                           ;ECAN.c: 309: TXB0EIDL = 0x00;
  3103  000E0C  0E00               	movlw	0
  3104  000E0E  010F               	movlb	15	; () banked
  3105  000E10  6F24               	movwf	36,b	;volatile
  3106                           
  3107                           ; BSR set to: 15
  3108                           ;ECAN.c: 312: TXB0SIDH = SIDH;
  3109  000E12  C04E  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  3110                           
  3111                           ; BSR set to: 15
  3112                           ;ECAN.c: 313: TXB0SIDL = SIDL;
  3113  000E16  C044  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  3114                           
  3115                           ; BSR set to: 15
  3116                           ;ECAN.c: 314: TXB0DLC = DLC;
  3117  000E1A  C045  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  3118                           
  3119                           ; BSR set to: 15
  3120                           ;ECAN.c: 323: TXB0D0 = TRANSMIT_ID;
  3121  000E1E  C046  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  3122                           
  3123                           ; BSR set to: 15
  3124                           ;ECAN.c: 324: TXB0D1 = DATA1;
  3125  000E22  C047  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  3126                           
  3127                           ; BSR set to: 15
  3128                           ;ECAN.c: 325: TXB0D2 = DATA2;
  3129  000E26  C048  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  3130                           
  3131                           ; BSR set to: 15
  3132                           ;ECAN.c: 326: TXB0D3 = DATA3;
  3133  000E2A  C049  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  3134                           
  3135                           ; BSR set to: 15
  3136                           ;ECAN.c: 327: TXB0D4 = DATA4;
  3137  000E2E  C04A  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  3138                           
  3139                           ; BSR set to: 15
  3140                           ;ECAN.c: 328: TXB0D5 = DATA5;
  3141  000E32  C04B  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  3142                           
  3143                           ; BSR set to: 15
  3144                           ;ECAN.c: 329: TXB0D6 = DATA6;
  3145  000E36  C04C  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  3146                           
  3147                           ; BSR set to: 15
  3148                           ;ECAN.c: 330: TXB0D7 = DATA7;
  3149  000E3A  C04D  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  3150                           
  3151                           ; BSR set to: 15
  3152                           ;ECAN.c: 332: TXB0CONbits.TXREQ = 1;
  3153  000E3E  010F               	movlb	15	; () banked
  3154  000E40  8720               	bsf	32,3,b	;volatile
  3155                           
  3156                           ; BSR set to: 15
  3157  000E42  0012               	return		;funcret
  3158  000E44                     __end_of_ECAN_Transmit:
  3159                           	opt stack 0
  3160                           prodh	equ	0xFF4
  3161                           prodl	equ	0xFF3
  3162                           intcon	equ	0xFF2
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           postdec1	equ	0xFE5
  3166                           fsr1h	equ	0xFE2
  3167                           fsr1l	equ	0xFE1
  3168                           indf2	equ	0xFDF
  3169                           postinc2	equ	0xFDE
  3170                           postdec2	equ	0xFDD
  3171                           fsr2h	equ	0xFDA
  3172                           fsr2l	equ	0xFD9
  3173                           status	equ	0xFD8
  3174                           
  3175 ;; *************** function _ECAN_Receive *****************
  3176 ;; Defined at:
  3177 ;;		line 215 in file "ECAN.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  RXMsgFlag       1   15[COMRAM] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      unsigned char 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;Total ram usage:        1 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    2
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text12
  3206  000B60                     __ptext12:
  3207                           	opt stack 0
  3208  000B60                     _ECAN_Receive:
  3209                           	opt stack 28
  3210                           
  3211                           ;ECAN.c: 217: unsigned char RXMsgFlag;
  3212                           ;ECAN.c: 219: RXMsgFlag = 0x00;
  3213                           
  3214                           ; BSR set to: 15
  3215                           ;incstack = 0
  3216  000B60  0E00               	movlw	0
  3217  000B62  6E44               	movwf	ECAN_Receive@RXMsgFlag,c
  3218                           
  3219                           ;ECAN.c: 221: if (RXB0CONbits.RXFUL)
  3220  000B64  AE60               	btfss	3936,7,c	;volatile
  3221  000B66  D01C               	goto	l400
  3222                           
  3223                           ;ECAN.c: 222: {
  3224                           ;ECAN.c: 223: temp_EIDH = RXB0EIDH;
  3225  000B68  CF63 F031          	movff	3939,_temp_EIDH	;volatile
  3226                           
  3227                           ;ECAN.c: 224: temp_EIDL = RXB0EIDL;
  3228  000B6C  CF64 F032          	movff	3940,_temp_EIDL	;volatile
  3229                           
  3230                           ;ECAN.c: 225: temp_SIDH = RXB0SIDH;
  3231  000B70  CF61 F033          	movff	3937,_temp_SIDH	;volatile
  3232                           
  3233                           ;ECAN.c: 226: temp_SIDL = RXB0SIDL;
  3234  000B74  CF62 F034          	movff	3938,_temp_SIDL	;volatile
  3235                           
  3236                           ;ECAN.c: 227: temp_DLC = RXB0DLC;
  3237  000B78  CF65 F030          	movff	3941,_temp_DLC	;volatile
  3238                           
  3239                           ;ECAN.c: 228: MAP_REC_BATTERYSTATUS = RXB0D0;
  3240  000B7C  CF66 F024          	movff	3942,_MAP_REC_BATTERYSTATUS	;volatile
  3241                           
  3242                           ;ECAN.c: 229: MAP_REC_VELOCITY = RXB0D1;
  3243  000B80  CF67 F025          	movff	3943,_MAP_REC_VELOCITY	;volatile
  3244                           
  3245                           ;ECAN.c: 230: temp_D2 = RXB0D2;
  3246  000B84  CF68 F02A          	movff	3944,_temp_D2	;volatile
  3247                           
  3248                           ;ECAN.c: 231: temp_D3 = RXB0D3;
  3249  000B88  CF69 F02B          	movff	3945,_temp_D3	;volatile
  3250                           
  3251                           ;ECAN.c: 232: temp_D4 = RXB0D4;
  3252  000B8C  CF6A F02C          	movff	3946,_temp_D4	;volatile
  3253                           
  3254                           ;ECAN.c: 233: temp_D5 = RXB0D5;
  3255  000B90  CF6B F02D          	movff	3947,_temp_D5	;volatile
  3256                           
  3257                           ;ECAN.c: 234: temp_D6 = RXB0D6;
  3258  000B94  CF6C F02E          	movff	3948,_temp_D6	;volatile
  3259                           
  3260                           ;ECAN.c: 235: temp_D7 = RXB0D7;
  3261  000B98  CF6D F02F          	movff	3949,_temp_D7	;volatile
  3262                           
  3263                           ;ECAN.c: 236: RXB0CONbits.RXFUL = 0;
  3264  000B9C  9E60               	bcf	3936,7,c	;volatile
  3265  000B9E  D03F               	goto	l2689
  3266  000BA0                     l400:
  3267                           
  3268                           ;ECAN.c: 239: else if (RXB1CONbits.RXFUL)
  3269  000BA0  010F               	movlb	15	; () banked
  3270  000BA2  AF30               	btfss	48,7,b	;volatile
  3271  000BA4  D01D               	goto	l402
  3272                           
  3273                           ; BSR set to: 15
  3274                           ;ECAN.c: 240: {
  3275                           ;ECAN.c: 241: temp_EIDH = RXB1EIDH;
  3276  000BA6  CF33 F031          	movff	3891,_temp_EIDH	;volatile
  3277                           
  3278                           ;ECAN.c: 242: temp_EIDL = RXB1EIDL;
  3279  000BAA  CF34 F032          	movff	3892,_temp_EIDL	;volatile
  3280                           
  3281                           ;ECAN.c: 243: temp_SIDH = RXB1SIDH;
  3282  000BAE  CF31 F033          	movff	3889,_temp_SIDH	;volatile
  3283                           
  3284                           ;ECAN.c: 244: temp_SIDL = RXB1SIDL;
  3285  000BB2  CF32 F034          	movff	3890,_temp_SIDL	;volatile
  3286                           
  3287                           ;ECAN.c: 245: temp_DLC = RXB1DLC;
  3288  000BB6  CF35 F030          	movff	3893,_temp_DLC	;volatile
  3289                           
  3290                           ;ECAN.c: 246: MAP_REC_BATTERYSTATUS = RXB1D0;
  3291  000BBA  CF36 F024          	movff	3894,_MAP_REC_BATTERYSTATUS	;volatile
  3292                           
  3293                           ;ECAN.c: 247: MAP_REC_VELOCITY = RXB1D1;
  3294  000BBE  CF37 F025          	movff	3895,_MAP_REC_VELOCITY	;volatile
  3295                           
  3296                           ;ECAN.c: 248: temp_D2 = RXB1D2;
  3297  000BC2  CF38 F02A          	movff	3896,_temp_D2	;volatile
  3298                           
  3299                           ;ECAN.c: 249: temp_D3 = RXB1D3;
  3300  000BC6  CF39 F02B          	movff	3897,_temp_D3	;volatile
  3301                           
  3302                           ;ECAN.c: 250: temp_D4 = RXB1D4;
  3303  000BCA  CF3A F02C          	movff	3898,_temp_D4	;volatile
  3304                           
  3305                           ;ECAN.c: 251: temp_D5 = RXB1D5;
  3306  000BCE  CF3B F02D          	movff	3899,_temp_D5	;volatile
  3307                           
  3308                           ;ECAN.c: 252: temp_D6 = RXB1D6;
  3309  000BD2  CF3C F02E          	movff	3900,_temp_D6	;volatile
  3310                           
  3311                           ;ECAN.c: 253: temp_D7 = RXB1D7;
  3312  000BD6  CF3D F02F          	movff	3901,_temp_D7	;volatile
  3313                           
  3314                           ;ECAN.c: 254: RXB1CONbits.RXFUL = 0;
  3315  000BDA  010F               	movlb	15	; () banked
  3316  000BDC  9F30               	bcf	48,7,b	;volatile
  3317  000BDE  D01F               	goto	l2689
  3318  000BE0                     l402:
  3319                           
  3320                           ; BSR set to: 15
  3321                           ;ECAN.c: 257: else if (B0CONbits.RXFUL)
  3322  000BE0  010E               	movlb	14	; () banked
  3323  000BE2  AF80               	btfss	128,7,b	;volatile
  3324  000BE4  D01E               	goto	l2691
  3325                           
  3326                           ; BSR set to: 14
  3327                           ;ECAN.c: 258: {
  3328                           ;ECAN.c: 259: temp_EIDH = B0EIDH;
  3329  000BE6  CE83 F031          	movff	3715,_temp_EIDH	;volatile
  3330                           
  3331                           ;ECAN.c: 260: temp_EIDL = B0EIDL;
  3332  000BEA  CE84 F032          	movff	3716,_temp_EIDL	;volatile
  3333                           
  3334                           ;ECAN.c: 261: temp_SIDH = B0SIDH;
  3335  000BEE  CE81 F033          	movff	3713,_temp_SIDH	;volatile
  3336                           
  3337                           ;ECAN.c: 262: temp_SIDL = B0SIDL;
  3338  000BF2  CE82 F034          	movff	3714,_temp_SIDL	;volatile
  3339                           
  3340                           ;ECAN.c: 263: temp_DLC = B0DLC;
  3341  000BF6  CE85 F030          	movff	3717,_temp_DLC	;volatile
  3342                           
  3343                           ;ECAN.c: 264: MAP_REC_BATTERYSTATUS = B0D0;
  3344  000BFA  CE86 F024          	movff	3718,_MAP_REC_BATTERYSTATUS	;volatile
  3345                           
  3346                           ;ECAN.c: 265: MAP_REC_VELOCITY = B0D1;
  3347  000BFE  CE87 F025          	movff	3719,_MAP_REC_VELOCITY	;volatile
  3348                           
  3349                           ;ECAN.c: 266: temp_D2 = B0D2;
  3350  000C02  CE88 F02A          	movff	3720,_temp_D2	;volatile
  3351                           
  3352                           ;ECAN.c: 267: temp_D3 = B0D3;
  3353  000C06  CE89 F02B          	movff	3721,_temp_D3	;volatile
  3354                           
  3355                           ;ECAN.c: 268: temp_D4 = B0D4;
  3356  000C0A  CE8A F02C          	movff	3722,_temp_D4	;volatile
  3357                           
  3358                           ;ECAN.c: 269: temp_D5 = B0D5;
  3359  000C0E  CE8B F02D          	movff	3723,_temp_D5	;volatile
  3360                           
  3361                           ;ECAN.c: 270: temp_D6 = B0D6;
  3362  000C12  CE8C F02E          	movff	3724,_temp_D6	;volatile
  3363                           
  3364                           ;ECAN.c: 271: temp_D7 = B0D7;
  3365  000C16  CE8D F02F          	movff	3725,_temp_D7	;volatile
  3366                           
  3367                           ;ECAN.c: 273: B0CONbits.RXFUL = 0;
  3368  000C1A  010E               	movlb	14	; () banked
  3369  000C1C  9F80               	bcf	128,7,b	;volatile
  3370  000C1E                     l2689:
  3371                           
  3372                           ; BSR set to: 14
  3373                           ;ECAN.c: 274: RXMsgFlag = 0x01;
  3374  000C1E  0E01               	movlw	1
  3375  000C20  6E44               	movwf	ECAN_Receive@RXMsgFlag,c
  3376  000C22                     l2691:
  3377                           
  3378                           ;ECAN.c: 275: }
  3379                           ;ECAN.c: 277: if (RXMsgFlag == 0x01)
  3380  000C22  0444               	decf	ECAN_Receive@RXMsgFlag,w,c
  3381  000C24  A4D8               	btfss	status,2,c
  3382  000C26  D005               	goto	l2703
  3383                           
  3384                           ;ECAN.c: 278: {
  3385                           ;ECAN.c: 279: RXMsgFlag = 0x00;
  3386  000C28  0E00               	movlw	0
  3387  000C2A  6E44               	movwf	ECAN_Receive@RXMsgFlag,c
  3388                           
  3389                           ;ECAN.c: 280: PIR5bits.RXB1IF = 0;
  3390  000C2C  9277               	bcf	3959,1,c	;volatile
  3391                           
  3392                           ;ECAN.c: 281: return 1;
  3393  000C2E  0E01               	movlw	1
  3394                           
  3395                           ;ECAN.c: 282: }
  3396  000C30  0012               	return	
  3397  000C32                     l2703:
  3398                           
  3399                           ;ECAN.c: 283: else
  3400                           ;ECAN.c: 284: {
  3401                           ;ECAN.c: 285: return 0;
  3402  000C32  0E00               	movlw	0
  3403  000C34  0012               	return	
  3404  000C36                     __end_of_ECAN_Receive:
  3405                           	opt stack 0
  3406                           prodh	equ	0xFF4
  3407                           prodl	equ	0xFF3
  3408                           intcon	equ	0xFF2
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           postdec1	equ	0xFE5
  3412                           fsr1h	equ	0xFE2
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           postinc2	equ	0xFDE
  3416                           postdec2	equ	0xFDD
  3417                           fsr2h	equ	0xFDA
  3418                           fsr2l	equ	0xFD9
  3419                           status	equ	0xFD8
  3420                           
  3421 ;; *************** function _Delay *****************
  3422 ;; Defined at:
  3423 ;;		line 7 in file "Other.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  count           2   15[COMRAM] unsigned int 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;		None               void
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;Total ram usage:        2 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    2
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_main
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text13
  3452  000EBC                     __ptext13:
  3453                           	opt stack 0
  3454  000EBC                     _Delay:
  3455                           	opt stack 28
  3456  000EBC                     l2673:
  3457  000EBC  0644               	decf	Delay@count,f,c
  3458  000EBE  A0D8               	btfss	status,0,c
  3459  000EC0  0645               	decf	Delay@count+1,f,c
  3460  000EC2  2844               	incf	Delay@count,w,c
  3461  000EC4  E1FB               	bnz	l2673
  3462  000EC6  2845               	incf	Delay@count+1,w,c
  3463  000EC8  B4D8               	btfsc	status,2,c
  3464  000ECA  0012               	return	
  3465  000ECC  D7F7               	goto	l2673
  3466  000ECE                     __end_of_Delay:
  3467                           	opt stack 0
  3468                           prodh	equ	0xFF4
  3469                           prodl	equ	0xFF3
  3470                           intcon	equ	0xFF2
  3471                           postinc0	equ	0xFEE
  3472                           wreg	equ	0xFE8
  3473                           postdec1	equ	0xFE5
  3474                           fsr1h	equ	0xFE2
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           postinc2	equ	0xFDE
  3478                           postdec2	equ	0xFDD
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           
  3483 ;; *************** function _CANSetup *****************
  3484 ;; Defined at:
  3485 ;;		line 104 in file "ECAN.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;		None               void
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;Total ram usage:        0 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    2
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text14
  3514  0007F6                     __ptext14:
  3515                           	opt stack 0
  3516  0007F6                     _CANSetup:
  3517                           	opt stack 28
  3518                           
  3519                           ;ECAN.c: 107: CANCON = 0x80;
  3520                           
  3521                           ;incstack = 0
  3522  0007F6  0E80               	movlw	128
  3523  0007F8  6E6F               	movwf	3951,c	;volatile
  3524  0007FA                     l2413:
  3525  0007FA  386E               	swapf	3950,w,c	;volatile
  3526  0007FC  32E8               	rrcf	wreg,f,c
  3527  0007FE  0B07               	andlw	7
  3528  000800  0A04               	xorlw	4
  3529  000802  A4D8               	btfss	status,2,c
  3530  000804  D7FA               	goto	l2413
  3531                           
  3532                           ;ECAN.c: 111: ECANCON = 0x40;
  3533  000806  0E40               	movlw	64
  3534  000808  6E72               	movwf	3954,c	;volatile
  3535                           
  3536                           ;ECAN.c: 115: BRGCON1 = 0x81;
  3537  00080A  0E81               	movlw	129
  3538  00080C  010E               	movlb	14	; () banked
  3539  00080E  6F43               	movwf	67,b	;volatile
  3540                           
  3541                           ;ECAN.c: 116: BRGCON2 = 0xB8;
  3542  000810  0EB8               	movlw	184
  3543  000812  010E               	movlb	14	; () banked
  3544  000814  6F44               	movwf	68,b	;volatile
  3545                           
  3546                           ;ECAN.c: 117: BRGCON3 = 0x05;
  3547  000816  0E05               	movlw	5
  3548  000818  010E               	movlb	14	; () banked
  3549  00081A  6F45               	movwf	69,b	;volatile
  3550                           
  3551                           ;ECAN.c: 122: BSEL0 = 0xF8;
  3552  00081C  0EF8               	movlw	248
  3553  00081E  010E               	movlb	14	; () banked
  3554  000820  6F7D               	movwf	125,b	;volatile
  3555                           
  3556                           ;ECAN.c: 126: RXM0EIDH = 0x00;
  3557  000822  0E00               	movlw	0
  3558  000824  010E               	movlb	14	; () banked
  3559  000826  6FFA               	movwf	250,b	;volatile
  3560                           
  3561                           ;ECAN.c: 127: RXM0EIDL = 0x00;
  3562  000828  0E00               	movlw	0
  3563  00082A  010E               	movlb	14	; () banked
  3564  00082C  6FFB               	movwf	251,b	;volatile
  3565                           
  3566                           ; BSR set to: 14
  3567                           ;ECAN.c: 128: RXM0SIDH = 0xFF;
  3568  00082E  010E               	movlb	14	; () banked
  3569  000830  69F8               	setf	248,b	;volatile
  3570                           
  3571                           ;ECAN.c: 129: RXM0SIDL = 0xE0;
  3572  000832  0EE0               	movlw	224
  3573  000834  010E               	movlb	14	; () banked
  3574  000836  6FF9               	movwf	249,b	;volatile
  3575                           
  3576                           ;ECAN.c: 132: RXM1EIDH = 0x00;
  3577  000838  0E00               	movlw	0
  3578  00083A  010E               	movlb	14	; () banked
  3579  00083C  6FFE               	movwf	254,b	;volatile
  3580                           
  3581                           ;ECAN.c: 133: RXM1EIDL = 0x00;
  3582  00083E  0E00               	movlw	0
  3583  000840  010E               	movlb	14	; () banked
  3584  000842  6FFF               	movwf	255,b	;volatile
  3585                           
  3586                           ; BSR set to: 14
  3587                           ;ECAN.c: 134: RXM1SIDH = 0xFF;
  3588  000844  010E               	movlb	14	; () banked
  3589  000846  69FC               	setf	252,b	;volatile
  3590                           
  3591                           ;ECAN.c: 135: RXM1SIDL = 0xE0;
  3592  000848  0EE0               	movlw	224
  3593  00084A  010E               	movlb	14	; () banked
  3594  00084C  6FFD               	movwf	253,b	;volatile
  3595                           
  3596                           ;ECAN.c: 139: RXFCON0 = 0x07;
  3597  00084E  0E07               	movlw	7
  3598  000850  010E               	movlb	14	; () banked
  3599  000852  6F46               	movwf	70,b	;volatile
  3600                           
  3601                           ;ECAN.c: 140: RXFCON1 = 0x00;
  3602  000854  0E00               	movlw	0
  3603  000856  010E               	movlb	14	; () banked
  3604  000858  6F47               	movwf	71,b	;volatile
  3605                           
  3606                           ;ECAN.c: 143: MSEL0 = 0xC0;
  3607  00085A  0EC0               	movlw	192
  3608  00085C  010E               	movlb	14	; () banked
  3609  00085E  6F79               	movwf	121,b	;volatile
  3610                           
  3611                           ; BSR set to: 14
  3612                           ;ECAN.c: 144: MSEL1 = 0xFF;
  3613  000860  010E               	movlb	14	; () banked
  3614  000862  697A               	setf	122,b	;volatile
  3615                           
  3616                           ; BSR set to: 14
  3617                           ;ECAN.c: 145: MSEL2 = 0xFF;
  3618  000864  010E               	movlb	14	; () banked
  3619  000866  697B               	setf	123,b	;volatile
  3620                           
  3621                           ; BSR set to: 14
  3622                           ;ECAN.c: 146: MSEL3 = 0xFF;
  3623  000868  010E               	movlb	14	; () banked
  3624  00086A  697C               	setf	124,b	;volatile
  3625                           
  3626                           ;ECAN.c: 150: RXFBCON0 = 0x10;
  3627  00086C  0E10               	movlw	16
  3628  00086E  010E               	movlb	14	; () banked
  3629  000870  6F71               	movwf	113,b	;volatile
  3630                           
  3631                           ;ECAN.c: 151: RXFBCON1 = 0xF2;
  3632  000872  0EF2               	movlw	242
  3633  000874  010E               	movlb	14	; () banked
  3634  000876  6F72               	movwf	114,b	;volatile
  3635                           
  3636                           ; BSR set to: 14
  3637                           ;ECAN.c: 153: RXFBCON2 = 0xFF;
  3638  000878  010E               	movlb	14	; () banked
  3639  00087A  6973               	setf	115,b	;volatile
  3640                           
  3641                           ; BSR set to: 14
  3642                           ;ECAN.c: 154: RXFBCON3 = 0xFF;
  3643  00087C  010E               	movlb	14	; () banked
  3644  00087E  6974               	setf	116,b	;volatile
  3645                           
  3646                           ; BSR set to: 14
  3647                           ;ECAN.c: 155: RXFBCON4 = 0xFF;
  3648  000880  010E               	movlb	14	; () banked
  3649  000882  6975               	setf	117,b	;volatile
  3650                           
  3651                           ; BSR set to: 14
  3652                           ;ECAN.c: 156: RXFBCON5 = 0xFF;
  3653  000884  010E               	movlb	14	; () banked
  3654  000886  6976               	setf	118,b	;volatile
  3655                           
  3656                           ; BSR set to: 14
  3657                           ;ECAN.c: 157: RXFBCON6 = 0xFF;
  3658  000888  010E               	movlb	14	; () banked
  3659  00088A  6977               	setf	119,b	;volatile
  3660                           
  3661                           ; BSR set to: 14
  3662                           ;ECAN.c: 158: RXFBCON7 = 0xFF;
  3663  00088C  010E               	movlb	14	; () banked
  3664  00088E  6978               	setf	120,b	;volatile
  3665                           
  3666                           ;ECAN.c: 164: RXF0EIDH = 0x00;
  3667  000890  0E00               	movlw	0
  3668  000892  010E               	movlb	14	; () banked
  3669  000894  6FE2               	movwf	226,b	;volatile
  3670                           
  3671                           ;ECAN.c: 165: RXF0EIDL = 0x00;
  3672  000896  0E00               	movlw	0
  3673  000898  010E               	movlb	14	; () banked
  3674  00089A  6FE3               	movwf	227,b	;volatile
  3675                           
  3676                           ;ECAN.c: 166: RXF0SIDH = 0x32;
  3677  00089C  0E32               	movlw	50
  3678  00089E  010E               	movlb	14	; () banked
  3679  0008A0  6FE0               	movwf	224,b	;volatile
  3680                           
  3681                           ;ECAN.c: 167: RXF0SIDL = 0xC0;
  3682  0008A2  0EC0               	movlw	192
  3683  0008A4  010E               	movlb	14	; () banked
  3684  0008A6  6FE1               	movwf	225,b	;volatile
  3685                           
  3686                           ;ECAN.c: 168: RXF1EIDH = 0x00;
  3687  0008A8  0E00               	movlw	0
  3688  0008AA  010E               	movlb	14	; () banked
  3689  0008AC  6FE6               	movwf	230,b	;volatile
  3690                           
  3691                           ;ECAN.c: 169: RXF1EIDL = 0x00;
  3692  0008AE  0E00               	movlw	0
  3693  0008B0  010E               	movlb	14	; () banked
  3694  0008B2  6FE7               	movwf	231,b	;volatile
  3695                           
  3696                           ;ECAN.c: 170: RXF1SIDH = 0x33;
  3697  0008B4  0E33               	movlw	51
  3698  0008B6  010E               	movlb	14	; () banked
  3699  0008B8  6FE4               	movwf	228,b	;volatile
  3700                           
  3701                           ;ECAN.c: 171: RXF1SIDL = 0x40;
  3702  0008BA  0E40               	movlw	64
  3703  0008BC  010E               	movlb	14	; () banked
  3704  0008BE  6FE5               	movwf	229,b	;volatile
  3705                           
  3706                           ;ECAN.c: 172: RXF2EIDH = 0x00;
  3707  0008C0  0E00               	movlw	0
  3708  0008C2  010E               	movlb	14	; () banked
  3709  0008C4  6FEA               	movwf	234,b	;volatile
  3710                           
  3711                           ;ECAN.c: 173: RXF2EIDL = 0x00;
  3712  0008C6  0E00               	movlw	0
  3713  0008C8  010E               	movlb	14	; () banked
  3714  0008CA  6FEB               	movwf	235,b	;volatile
  3715                           
  3716                           ;ECAN.c: 174: RXF2SIDH = 0x33;
  3717  0008CC  0E33               	movlw	51
  3718  0008CE  010E               	movlb	14	; () banked
  3719  0008D0  6FE8               	movwf	232,b	;volatile
  3720                           
  3721                           ;ECAN.c: 175: RXF2SIDL = 0xC0;
  3722  0008D2  0EC0               	movlw	192
  3723  0008D4  010E               	movlb	14	; () banked
  3724  0008D6  6FE9               	movwf	233,b	;volatile
  3725                           
  3726                           ;ECAN.c: 178: if (0 ==1)
  3727  0008D8  D00E               	goto	l2447
  3728  0008DA                     l2441:
  3729  0008DA  386E               	swapf	3950,w,c	;volatile
  3730  0008DC  32E8               	rrcf	wreg,f,c
  3731  0008DE  0B07               	andlw	7
  3732  0008E0  0A40               	xorlw	64
  3733  0008E2  A4D8               	btfss	status,2,c
  3734  0008E4  D017               	goto	l2455
  3735  0008E6  D7F9               	goto	l2441
  3736  0008E8                     l2445:
  3737  0008E8  386E               	swapf	3950,w,c	;volatile
  3738  0008EA  32E8               	rrcf	wreg,f,c
  3739  0008EC  0B07               	andlw	7
  3740  0008EE  0A60               	xorlw	96
  3741  0008F0  A4D8               	btfss	status,2,c
  3742  0008F2  D010               	goto	l2455
  3743  0008F4  D7F9               	goto	l2445
  3744  0008F6                     l2447:
  3745                           
  3746                           ;ECAN.c: 189: CANCON = 0x00;
  3747  0008F6  0E00               	movlw	0
  3748  0008F8  6E6F               	movwf	3951,c	;volatile
  3749  0008FA                     l2449:
  3750  0008FA  386E               	swapf	3950,w,c	;volatile
  3751  0008FC  32E8               	rrcf	wreg,f,c
  3752  0008FE  0B07               	andlw	7
  3753  000900  0900               	iorlw	0
  3754  000902  A4D8               	btfss	status,2,c
  3755  000904  D007               	goto	l2455
  3756  000906  D7F9               	goto	l2449
  3757  000908                     l2453:
  3758  000908  386E               	swapf	3950,w,c	;volatile
  3759  00090A  32E8               	rrcf	wreg,f,c
  3760  00090C  0B07               	andlw	7
  3761  00090E  0A40               	xorlw	64
  3762  000910  B4D8               	btfsc	status,2,c
  3763  000912  D7FA               	goto	l2453
  3764  000914                     l2455:
  3765                           
  3766                           ;ECAN.c: 197: }
  3767                           ;ECAN.c: 200: RXB0CON = 0x00;
  3768  000914  0E00               	movlw	0
  3769  000916  6E60               	movwf	3936,c	;volatile
  3770                           
  3771                           ;ECAN.c: 201: RXB1CON = 0x00;
  3772  000918  0E00               	movlw	0
  3773  00091A  010F               	movlb	15	; () banked
  3774  00091C  6F30               	movwf	48,b	;volatile
  3775                           
  3776                           ; BSR set to: 15
  3777  00091E  0012               	return		;funcret
  3778  000920                     __end_of_CANSetup:
  3779                           	opt stack 0
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           postinc0	equ	0xFEE
  3784                           wreg	equ	0xFE8
  3785                           postdec1	equ	0xFE5
  3786                           fsr1h	equ	0xFE2
  3787                           fsr1l	equ	0xFE1
  3788                           indf2	equ	0xFDF
  3789                           postinc2	equ	0xFDE
  3790                           postdec2	equ	0xFDD
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function _ISR *****************
  3796 ;; Defined at:
  3797 ;;		line 98 in file "main.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;		None               void
  3804 ;; Registers used:
  3805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;Total ram usage:       14 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    1
  3818 ;; This function calls:
  3819 ;;		_sample
  3820 ;; This function is called by:
  3821 ;;		Interrupt level 2
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	intcode
  3826  000008                     __pintcode:
  3827                           	opt stack 0
  3828  000008                     _ISR:
  3829                           	opt stack 27
  3830                           
  3831                           ; BSR set to: 15
  3832                           ;incstack = 0
  3833  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3834  00000A  CFFA F036          	movff	pclath,??_ISR
  3835  00000E  CFFB F037          	movff	pclatu,??_ISR+1
  3836  000012  CFE9 F038          	movff	fsr0l,??_ISR+2
  3837  000016  CFEA F039          	movff	fsr0h,??_ISR+3
  3838  00001A  CFE1 F03A          	movff	fsr1l,??_ISR+4
  3839  00001E  CFE2 F03B          	movff	fsr1h,??_ISR+5
  3840  000022  CFD9 F03C          	movff	fsr2l,??_ISR+6
  3841  000026  CFDA F03D          	movff	fsr2h,??_ISR+7
  3842  00002A  CFF3 F03E          	movff	prodl,??_ISR+8
  3843  00002E  CFF4 F03F          	movff	prodh,??_ISR+9
  3844  000032  CFF6 F040          	movff	tblptrl,??_ISR+10
  3845  000036  CFF7 F041          	movff	tblptrh,??_ISR+11
  3846  00003A  CFF8 F042          	movff	tblptru,??_ISR+12
  3847  00003E  CFF5 F043          	movff	tablat,??_ISR+13
  3848                           
  3849                           ;main.c: 112: Interrupt_counter++;
  3850  000042  0100               	movlb	0	; () banked
  3851  000044  4BAE               	infsnz	_Interrupt_counter& (0+255),f,b
  3852  000046  2BAF               	incf	(_Interrupt_counter+1)& (0+255),f,b
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;main.c: 114: if(Interrupt_counter == 2){
  3856  000048  0E02               	movlw	2
  3857  00004A  0100               	movlb	0	; () banked
  3858  00004C  19AE               	xorwf	_Interrupt_counter& (0+255),w,b
  3859  00004E  0100               	movlb	0	; () banked
  3860  000050  11AF               	iorwf	(_Interrupt_counter+1)& (0+255),w,b
  3861  000052  A4D8               	btfss	status,2,c
  3862  000054  D007               	goto	i2l113
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;main.c: 116: sample();
  3866  000056  EC9B  F006         	call	_sample	;wreg free
  3867                           
  3868                           ;main.c: 117: Interrupt_counter = 0;
  3869  00005A  0E00               	movlw	0
  3870  00005C  0100               	movlb	0	; () banked
  3871  00005E  6FAF               	movwf	(_Interrupt_counter+1)& (0+255),b
  3872  000060  0E00               	movlw	0
  3873  000062  6FAE               	movwf	_Interrupt_counter& (0+255),b
  3874  000064                     i2l113:
  3875                           
  3876                           ; BSR set to: 0
  3877  000064  C043  FFF5         	movff	??_ISR+13,tablat
  3878  000068  C042  FFF8         	movff	??_ISR+12,tblptru
  3879  00006C  C041  FFF7         	movff	??_ISR+11,tblptrh
  3880  000070  C040  FFF6         	movff	??_ISR+10,tblptrl
  3881  000074  C03F  FFF4         	movff	??_ISR+9,prodh
  3882  000078  C03E  FFF3         	movff	??_ISR+8,prodl
  3883  00007C  C03D  FFDA         	movff	??_ISR+7,fsr2h
  3884  000080  C03C  FFD9         	movff	??_ISR+6,fsr2l
  3885  000084  C03B  FFE2         	movff	??_ISR+5,fsr1h
  3886  000088  C03A  FFE1         	movff	??_ISR+4,fsr1l
  3887  00008C  C039  FFEA         	movff	??_ISR+3,fsr0h
  3888  000090  C038  FFE9         	movff	??_ISR+2,fsr0l
  3889  000094  C037  FFFB         	movff	??_ISR+1,pclatu
  3890  000098  C036  FFFA         	movff	??_ISR,pclath
  3891  00009C  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3892  00009E  0011               	retfie		f
  3893  0000A0                     __end_of_ISR:
  3894                           	opt stack 0
  3895                           pclatu	equ	0xFFB
  3896                           pclath	equ	0xFFA
  3897                           tblptru	equ	0xFF8
  3898                           tblptrh	equ	0xFF7
  3899                           tblptrl	equ	0xFF6
  3900                           tablat	equ	0xFF5
  3901                           prodh	equ	0xFF4
  3902                           prodl	equ	0xFF3
  3903                           intcon	equ	0xFF2
  3904                           postinc0	equ	0xFEE
  3905                           fsr0h	equ	0xFEA
  3906                           fsr0l	equ	0xFE9
  3907                           wreg	equ	0xFE8
  3908                           postdec1	equ	0xFE5
  3909                           fsr1h	equ	0xFE2
  3910                           fsr1l	equ	0xFE1
  3911                           indf2	equ	0xFDF
  3912                           postinc2	equ	0xFDE
  3913                           postdec2	equ	0xFDD
  3914                           fsr2h	equ	0xFDA
  3915                           fsr2l	equ	0xFD9
  3916                           status	equ	0xFD8
  3917                           
  3918 ;; *************** function _sample *****************
  3919 ;; Defined at:
  3920 ;;		line 39 in file "RFID.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;		None               void
  3927 ;; Registers used:
  3928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;Total ram usage:        1 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_ISR
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text16
  3948  000D36                     __ptext16:
  3949                           	opt stack 0
  3950  000D36                     _sample:
  3951                           	opt stack 27
  3952                           
  3953                           ;RFID.c: 42: val = PORTBbits.RB0;
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;incstack = 0
  3957  000D36  A081               	btfss	3969,0,c	;volatile
  3958  000D38  D003               	goto	i2u129_40
  3959  000D3A  6A35               	clrf	??_sample& (0+255),c
  3960  000D3C  2A35               	incf	??_sample& (0+255),f,c
  3961  000D3E  D001               	goto	i2u129_48
  3962  000D40                     i2u129_40:
  3963  000D40  6A35               	clrf	??_sample& (0+255),c
  3964  000D42                     i2u129_48:
  3965  000D42  5035               	movf	??_sample,w,c
  3966  000D44  6E21               	movwf	_val,c
  3967  000D46  6A22               	clrf	_val+1,c
  3968                           
  3969                           ;RFID.c: 43: bitlenctr++;
  3970  000D48  0100               	movlb	0	; () banked
  3971  000D4A  4BB2               	infsnz	_bitlenctr& (0+255),f,b
  3972  000D4C  2BB3               	incf	(_bitlenctr+1)& (0+255),f,b
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;RFID.c: 45: if(val != curState) {
  3976  000D4E  0100               	movlb	0	; () banked
  3977  000D50  51B4               	movf	_curState& (0+255),w,b
  3978  000D52  1821               	xorwf	_val,w,c
  3979  000D54  E105               	bnz	i2u130_40
  3980  000D56  0100               	movlb	0	; () banked
  3981  000D58  51B5               	movf	(_curState+1)& (0+255),w,b
  3982  000D5A  1822               	xorwf	_val+1,w,c
  3983  000D5C  B4D8               	btfsc	status,2,c
  3984  000D5E  0012               	return	
  3985  000D60                     i2u130_40:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;RFID.c: 47: curState = val;
  3989  000D60  C021  F0B4         	movff	_val,_curState
  3990  000D64  C022  F0B5         	movff	_val+1,_curState+1
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;RFID.c: 48: if(val == 1) {
  3994  000D68  0421               	decf	_val,w,c
  3995  000D6A  1022               	iorwf	_val+1,w,c
  3996  000D6C  A4D8               	btfss	status,2,c
  3997  000D6E  0012               	return	
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;RFID.c: 50: if(rawIndex < 500) {
  4001  000D70  BE20               	btfsc	_rawIndex+1,7,c
  4002  000D72  D006               	goto	i2l2297
  4003  000D74  0EF4               	movlw	244
  4004  000D76  5C1F               	subwf	_rawIndex,w,c
  4005  000D78  0E01               	movlw	1
  4006  000D7A  5820               	subwfb	_rawIndex+1,w,c
  4007  000D7C  B0D8               	btfsc	status,0,c
  4008  000D7E  D00B               	goto	i2l591
  4009  000D80                     i2l2297:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;RFID.c: 51: raw[rawIndex++] = bitlenctr;
  4013  000D80  0EBA               	movlw	low _raw
  4014  000D82  241F               	addwf	_rawIndex,w,c
  4015  000D84  6ED9               	movwf	fsr2l,c
  4016  000D86  0E00               	movlw	high _raw
  4017  000D88  2020               	addwfc	_rawIndex+1,w,c
  4018  000D8A  6EDA               	movwf	fsr2h,c
  4019  000D8C  C0B2  FFDF         	movff	_bitlenctr,indf2
  4020                           
  4021                           ; BSR set to: 0
  4022  000D90  4A1F               	infsnz	_rawIndex,f,c
  4023  000D92  2A20               	incf	_rawIndex+1,f,c
  4024                           
  4025                           ;RFID.c: 52: }
  4026  000D94  D001               	goto	i2l2301
  4027  000D96                     i2l591:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;RFID.c: 53: else{
  4031                           ;RFID.c: 54: INTCONbits.TMR0IE = 0;
  4032  000D96  9AF2               	bcf	intcon,5,c	;volatile
  4033  000D98                     i2l2301:
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;RFID.c: 56: }
  4037                           ;RFID.c: 57: bitlenctr = 1;
  4038  000D98  0E00               	movlw	0
  4039  000D9A  0100               	movlb	0	; () banked
  4040  000D9C  6FB3               	movwf	(_bitlenctr+1)& (0+255),b
  4041  000D9E  0E01               	movlw	1
  4042  000DA0  6FB2               	movwf	_bitlenctr& (0+255),b
  4043                           
  4044                           ; BSR set to: 0
  4045  000DA2  0012               	return	
  4046  000DA4                     __end_of_sample:
  4047                           	opt stack 0
  4048  0000                     pclatu	equ	0xFFB
  4049                           pclath	equ	0xFFA
  4050                           tblptru	equ	0xFF8
  4051                           tblptrh	equ	0xFF7
  4052                           tblptrl	equ	0xFF6
  4053                           tablat	equ	0xFF5
  4054                           prodh	equ	0xFF4
  4055                           prodl	equ	0xFF3
  4056                           intcon	equ	0xFF2
  4057                           postinc0	equ	0xFEE
  4058                           fsr0h	equ	0xFEA
  4059                           fsr0l	equ	0xFE9
  4060                           wreg	equ	0xFE8
  4061                           postdec1	equ	0xFE5
  4062                           fsr1h	equ	0xFE2
  4063                           fsr1l	equ	0xFE1
  4064                           indf2	equ	0xFDF
  4065                           postinc2	equ	0xFDE
  4066                           postdec2	equ	0xFDD
  4067                           fsr2h	equ	0xFDA
  4068                           fsr2l	equ	0xFD9
  4069                           status	equ	0xFD8
  4070                           pclatu	equ	0xFFB
  4071                           pclath	equ	0xFFA
  4072                           tblptru	equ	0xFF8
  4073                           tblptrh	equ	0xFF7
  4074                           tblptrl	equ	0xFF6
  4075                           tablat	equ	0xFF5
  4076                           prodh	equ	0xFF4
  4077                           prodl	equ	0xFF3
  4078                           intcon	equ	0xFF2
  4079                           postinc0	equ	0xFEE
  4080                           fsr0h	equ	0xFEA
  4081                           fsr0l	equ	0xFE9
  4082                           wreg	equ	0xFE8
  4083                           postdec1	equ	0xFE5
  4084                           fsr1h	equ	0xFE2
  4085                           fsr1l	equ	0xFE1
  4086                           indf2	equ	0xFDF
  4087                           postinc2	equ	0xFDE
  4088                           postdec2	equ	0xFDD
  4089                           fsr2h	equ	0xFDA
  4090                           fsr2l	equ	0xFD9
  4091                           status	equ	0xFD8
  4092                           
  4093                           	psect	rparam
  4094  0000                     pclatu	equ	0xFFB
  4095                           pclath	equ	0xFFA
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           intcon	equ	0xFF2
  4103                           postinc0	equ	0xFEE
  4104                           fsr0h	equ	0xFEA
  4105                           fsr0l	equ	0xFE9
  4106                           wreg	equ	0xFE8
  4107                           postdec1	equ	0xFE5
  4108                           fsr1h	equ	0xFE2
  4109                           fsr1l	equ	0xFE1
  4110                           indf2	equ	0xFDF
  4111                           postinc2	equ	0xFDE
  4112                           postdec2	equ	0xFDD
  4113                           fsr2h	equ	0xFDA
  4114                           fsr2l	equ	0xFD9
  4115                           status	equ	0xFD8
  4116                           
  4117                           	psect	temp
  4118  00004F                     btemp:
  4119                           	opt stack 0
  4120  00004F                     	ds	1
  4121  0000                     int$flags	set	btemp
  4122                           pclatu	equ	0xFFB
  4123                           pclath	equ	0xFFA
  4124                           tblptru	equ	0xFF8
  4125                           tblptrh	equ	0xFF7
  4126                           tblptrl	equ	0xFF6
  4127                           tablat	equ	0xFF5
  4128                           prodh	equ	0xFF4
  4129                           prodl	equ	0xFF3
  4130                           intcon	equ	0xFF2
  4131                           postinc0	equ	0xFEE
  4132                           fsr0h	equ	0xFEA
  4133                           fsr0l	equ	0xFE9
  4134                           wreg	equ	0xFE8
  4135                           postdec1	equ	0xFE5
  4136                           fsr1h	equ	0xFE2
  4137                           fsr1l	equ	0xFE1
  4138                           indf2	equ	0xFDF
  4139                           postinc2	equ	0xFDE
  4140                           postdec2	equ	0xFDD
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      78
    BANK0           160     76      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ECAN_Transmit
    _zipCAN->_setBit
    _bitToCode->___wmul

Critical Paths under _ISR in COMRAM

    _ISR->_sample

Critical Paths under _main in BANK0

    _main->_bitToCode

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5882
                                             72 BANK0      4     4      0
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                           _I2CSetup
                         _InitDevice
                          _bitToCode
                          _findStart
                      _multiToSingle
                    _setup_Interrupt
                        _singleToBit
                             _zipCAN
 ---------------------------------------------------------------------------------
 (1) _zipCAN                                               2     2      0    1109
                                             21 COMRAM     2     2      0
                             _setBit
 ---------------------------------------------------------------------------------
 (2) _setBit                                               6     2      4    1109
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _singleToBit                                         22    22      0    1315
                                             15 COMRAM     6     6      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _setup_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _multiToSingle                                       15    13      2     436
                                             15 COMRAM     3     1      2
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (1) _findStart                                            8     6      2     201
                                             15 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _bitToCode                                           74    72      2    1312
                                             21 COMRAM     2     0      2
                                              0 BANK0     72    72      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     848
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2CSetup                                             2     2      0      99
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10    1111
                                             15 COMRAM    11     1     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      46
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay                                                2     0      2     185
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 14    14      0       0
                                              1 COMRAM    14    14      0
                             _sample
 ---------------------------------------------------------------------------------
 (4) _sample                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _I2CSetup
   _InitDevice
   _bitToCode
     ___wmul
   _findStart
   _multiToSingle
   _setup_Interrupt
   _singleToBit
   _zipCAN
     _setBit

 _ISR (ROOT)
   _sample

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     516      35       35.7%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      5A       5       56.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      4E       1       83.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8       6        0.0%
DATA                 0      0     5BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 27 12:48:23 2015

                 _MAP_BACKLIGHT 0013               singleToBit@i_1626 006C               singleToBit@i_1627 0066  
                   _SSPSTATbits 000FC7             ___wmul@multiplicand 0046                     __CFG_BORV$3 000000  
              singleToBit@start 0068                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                             l400 0BA0  
                           l402 0BE0                             l613 0CB6                             l622 0144  
                           l647 046E                             l596 07F0                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             _ISR 0008                             _raw 00BA  
                           _val 0021               _Interrupt_counter 00AE                             prod 000FF3  
                           wreg 000FE8                            ?_ISR 0035                   _MAP_HEARTBEAT 00B0  
                          _B0D0 000E86                            _B0D1 000E87                            _B0D2 000E88  
                          _B0D3 000E89                            _B0D4 000E8A                            _B0D5 000E8B  
                          _B0D6 000E8C                            _B0D7 000E8D                   _MAP_DIRECTION 0017  
                          l2413 07FA                            l2501 0716                            l2441 08DA  
                          l2513 0794                            l2505 0742                            l2521 07DE  
                          l2601 034E                            l2603 0374                            l2611 03A8  
                          l2531 00D6                            l2453 0908                            l2445 08E8  
                          l2517 07BA                            l2509 0768                            l2525 07E6  
                          l2605 0388                            l2621 0402                            l2541 0138  
                          l2455 0914                            l2447 08F6                            l2703 0C32  
                          l2471 0DD4                            l2623 040C                            l2615 03E4  
                          l2535 00EC                            l2711 0938                            l2449 08FA  
                          l2561 01D0                            l2553 017C                            l2801 0AA8  
                          l2467 0DC4                            l2651 0CA8                            l2635 0C46  
                          l2491 06A8                            l2627 0422                            l2571 0246  
                          l2563 01EA                            l2547 014E                            l2723 0990  
                          l2803 0AB6                            l2477 0DEA                            l2653 0CB0  
                          l2573 0260                            l2565 01F2                            l2581 029A  
                          l2557 0196                            l2741 0A14                            l2717 0964  
                          l2663 0494                            l2639 0C56                            l2487 0692  
                          l2735 09E8                            l2673 0EBC                            l2497 06F0  
                          l2593 0302                            l2577 0292                            l2729 09BC  
                          l2825 0AF6                            l2691 0C22                            l2669 063E  
                          l2837 0B52                            l2829 0B10                            l2689 0C1E  
                          l2793 0A74                 ??_multiToSingle 0046                            u1500 072C  
                          u1520 077E                            u1600 017A                            u1610 0194  
                          u1800 0492                            u1480 06DA                            u1384 0EB0  
                          u1385 0EAC                            u1570 012E                            u1900 09A4  
                          u1910 09D0                            u1920 09FC                            u1930 0A28  
                          u1880 094C                            u1960 0B0C                            u1890 0978  
            singleToBit@lastVal 0062                            _main 0A42                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 004F                __end_of_I2CSetup 0E04                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00A0  
                 __CFG_IESO$OFF 000000                __end_of_CANSetup 0920                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000010                           ??_ISR 0036                   _MAP_SAFETYPIN 001B  
                         _B0DLC 000E85                           ?_main 0035                           _BSEL0 000E7D  
                         i2l113 0064                           i2l591 0D96                           _MSEL0 000E79  
                         _MSEL1 000E7A                           _MSEL2 000E7B                           _MSEL3 000E7C  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                _i2c_byte_count 0028                           _Delay 0EBC                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
                         _count 0027                           tablat 000FF5                           status 000FD8  
                    _InitDevice 0CB8           __size_of_ECAN_Receive 00D6                 __initialization 0E44  
                  __end_of_main 0B60                          ??_main 004F                   __activetblptr 000000  
                __CFG_RETEN$OFF 000000                          ?_Delay 0044                          _B0EIDH 000E83  
                        _B0EIDL 000E84                ECAN_Transmit@DLC 0045                          _B0SIDH 000E81  
                        _B0SIDL 000E82                       I2CSetup@i 0044                          _CANCON 000F6F  
                        _ANCON0 000F5D                          _ANCON1 000F5C                    _ECAN_Receive 0B60  
               __CFG_BBSIZ$BB2K 000000                          i2l2301 0D98                          i2l2297 0D80  
      __size_of_setup_Interrupt 000A                          _OSCCON 000FD3                          _RXB0D0 000F66  
                        _RXB0D1 000F67                          _RXB0D2 000F68                          _RXB0D3 000F69  
                        _RXB0D4 000F6A                          _RXB1D0 000F36                          _RXB0D5 000F6B  
                        _RXB1D1 000F37                          _RXB0D6 000F6C                          _RXB1D2 000F38  
                        _RXB0D7 000F6D                          _RXB1D3 000F39                          _RXB1D4 000F3A  
                        _RXB1D5 000F3B                          _RXB1D6 000F3C                          _RXB1D7 000F3D  
                        _TXB0D0 000F26                          _TXB0D1 000F27                          _TXB0D2 000F28  
                        _TXB0D3 000F29                          _TXB0D4 000F2A                          _TXB0D5 000F2B  
                        _TXB0D6 000F2C                          _TXB0D7 000F2D                          _SSPADD 000FC8  
                        _SSPBUF 000FC9                  __CFG_XINST$OFF 000000                          ___wmul 0E7A  
                __CFG_STVREN$ON 000000                _heartBeatCounter 00B6                          clear_0 0E4C  
                        clear_1 0E5E                          clear_2 0E6A                          _setBit 0EA0  
                        _sample 0D36                    ?_singleToBit 0035                          _zipCAN 0920  
          singleToBit@oopcCount 0060                       ?_I2CSetup 0035                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                       ?_CANSetup 0035  
         multiToSingle@totError 0066                      __accesstop 0060         __end_of__initialization 0E70  
      ECAN_Transmit@TRANSMIT_ID 0046                   ___rparam_used 000001                     ?_InitDevice 0035  
                   _i2c_reg_map 0001                   __end_of_Delay 0ECE                  __pcstackCOMRAM 0035  
        __size_of_ECAN_Transmit 0040              __size_of_bitToCode 01DA                      ??_I2CSetup 0044  
                       ??_Delay 0046              __size_of_findStart 0082                     setBit@shift 0044  
                   setBit@value 0046                      ??_CANSetup 0044                      __pbssBANK0 00AC  
           main@start_condition 00A8                 __CFG_PLLCFG$OFF 000000               ??_setup_Interrupt 0044  
             ECAN_Transmit@SIDH 004E               ECAN_Transmit@SIDL 0044                         ?___wmul 0044  
                     _B0CONbits 000E80                         _ECANCON 000F72                         ?_setBit 0044  
                       ?_sample 0035                         ?_zipCAN 0035                         _BRGCON1 000E43  
                       _BRGCON2 000E44                         _BRGCON3 000E45                __CFG_CANMX$PORTB 000000  
           __size_of_InitDevice 007E                         _RXB0DLC 000F65                         _RXB1DLC 000F35  
                       _RXB0CON 000F60                         _RXB1CON 000F30                         _TXB0DLC 000F25  
                       _RXFCON0 000E46                         _RXFCON1 000E47                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7                   _ECAN_Transmit 0E04  
             __end_of_bitToCode 064A           __end_of_multiToSingle 07F6                   bitToCode@code 0068  
               __CFG_PWRTEN$OFF 000000                         __Hparam 0000                         __Lparam 0000  
             __end_of_findStart 0CB8              multiToSingle@_long 0060                 __size_of___wmul 0026  
                       __pcinit 0E44                         __ramtop 0F00                 __size_of_setBit 001C  
               __size_of_sample 006E                         __ptext0 0A42                         __ptext1 0920  
                       __ptext2 0EA0                         __ptext3 00A4                         __ptext4 0ECE  
                       __ptext5 064A                         __ptext6 0C36                         __ptext7 0470  
                       __ptext8 0E7A                         __ptext9 0CB8                 __size_of_zipCAN 0122  
                     _T0CONbits 000FD5                    __size_of_ISR 0098                      bitToCode@i 00A6  
          __size_of_singleToBit 03CC               __CFG_MSSPMSK$MSK7 000000                         _temp_D2 002A  
                       _temp_D3 002B                         _temp_D4 002C                         _temp_D5 002D  
                       _temp_D6 002E                         _temp_D7 002F                  ?_ECAN_Transmit 0044  
                     _MAP_BRAKE 0015            end_of_initialization 0E70                _buttonWasPressed 0026  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE                       _PORTBbits 000F81                __CFG_FOSC$INTIO2 000000  
                    findStart@i 004A               __size_of_I2CSetup 0060               __CFG_SOSCSEL$HIGH 000000  
             __size_of_CANSetup 012A                    ??_InitDevice 0044                    _i2c_reg_addr 0029  
                __end_of___wmul 0EA0                  __end_of_setBit 0EBC                  __end_of_sample 0DA4  
                __end_of_zipCAN 0A42             start_initialization 0E44                 ??_ECAN_Transmit 004E  
                   __end_of_ISR 00A0              __end_of_InitDevice 0D36                 bitToCode@stanna 00A4  
               _setup_Interrupt 0ECE                     _CANSTATbits 000F6E            multiToSingle@_middle 0062  
                      ??___wmul 0048                        ??_setBit 0048                        ??_sample 0035  
                      ??_zipCAN 004A                     __pbssBIGRAM 00BA                     __pbssCOMRAM 0001  
                 __pcstackBANK0 0060                       _bitToCode 0470              ECAN_Transmit@DATA1 0047  
            ECAN_Transmit@DATA2 0048              ECAN_Transmit@DATA3 0049              ECAN_Transmit@DATA4 004A  
            ECAN_Transmit@DATA5 004B              ECAN_Transmit@DATA6 004C              ECAN_Transmit@DATA7 004D  
                     __pintcode 0008           _MAP_REC_BATTERYSTATUS 0024                       _bitlenctr 00B2  
                     _findStart 0C36                  _heartbeatCount 00B8                        _I2C_FLAG 0011  
       __end_of_setup_Interrupt 0ED8                        _I2CSetup 0DA4                  __size_of_Delay 0012  
                      _CANSetup 07F6                   ?_ECAN_Receive 0035                  ___wmul@product 0048  
                      _LATAbits 000F89                        _LATCbits 000F8B                        _PIE1bits 000F9D  
                    ?_bitToCode 004A                       _temp_EIDH 0031                       _temp_EIDL 0032  
                     _temp_SIDH 0033                       _temp_SIDL 0034                        i2u130_40 0D60  
                      i2u129_40 0D40                        i2u129_48 0D42                        _PIR1bits 000F9E  
                      _PIR5bits 000F77                        _RXB0EIDH 000F63                        _RXB0EIDL 000F64  
                      _RXB1EIDH 000F33                        _RXB1EIDL 000F34                        _RCONbits 000FD0  
                      _RXB0SIDH 000F61                        _RXB0SIDL 000F62                        _RXB1SIDH 000F31  
                      _RXF0EIDH 000EE2                        _RXB1SIDL 000F32                        _RXF0EIDL 000EE3  
                      _RXF1EIDH 000EE6                        _RXF1EIDL 000EE7                        _RXF2EIDH 000EEA  
                      _RXF2EIDL 000EEB                        _RXF0SIDH 000EE0                        _RXF0SIDL 000EE1  
                      _TXB0EIDH 000F23                        _RXF1SIDH 000EE4                        _TXB0EIDL 000F24  
                      _RXF1SIDL 000EE5                        _RXF2SIDH 000EE8                        _RXF2SIDL 000EE9  
                      _RXM0EIDH 000EFA                        _RXM0EIDL 000EFB                        _TXB0SIDH 000F21  
                      _RXM1EIDH 000EFE                        _TXB0SIDL 000F22                        _RXM1EIDL 000EFF  
                      _RXFBCON0 000E71                        _RXFBCON1 000E72                        _RXFBCON2 000E73  
                      _RXFBCON3 000E74                        _RXFBCON4 000E75                        _RXFBCON5 000E76  
                      _RXFBCON6 000E77                        _RXFBCON7 000E78                        _RXM0SIDH 000EF8  
                      _RXM0SIDL 000EF9                        _RXM1SIDH 000EFC                        _RXM1SIDL 000EFD  
                    ?_findStart 0044                   ??_singleToBit 0044                _MAP_REC_VELOCITY 0025  
             ___wmul@multiplier 0044           ECAN_Receive@RXMsgFlag 0044          __size_of_multiToSingle 01AC  
                   _MAP_BITDATA 0023                       main@start 00AA                  ??_ECAN_Receive 0044  
                   _MAP_H_BLINK 0019                  bitToCode@start 004A                     _MAP_V_BLINK 001D  
                      __Hrparam 0000                        __Lrparam 0000             multiToSingle@_short 0064  
            __CFG_BOREN$SBORDIS 000000                        _bitArray 043E                ?_setup_Interrupt 0035  
           __end_of_singleToBit 0470                        __ptext10 0DA4                        __ptext11 0E04  
                      __ptext12 0B60                        __ptext13 0EBC                        __ptext14 07F6  
                      __ptext16 0D36                        _curState 00B4                   __size_of_main 011E  
                 _multiToSingle 064A                        _rawIndex 001F                     ??_bitToCode 0060  
                    _FIRST_SEND 00AC                        _temp_DLC 0030                        int$flags 004F  
                   ??_findStart 0046             __CFG_INTOSCSEL$HIGH 000000                      Delay@count 0044  
                   _RXB0CONbits 000F60                     _RXB1CONbits 000F30              __CFG_WDTEN$SWDTDIS 000000  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2           __end_of_ECAN_Transmit 0E44  
                      intlevel2 0000                  ?_multiToSingle 0044                     _TXB0CONbits 000F20  
                findStart@count 0048                      _OSCCONbits 000FD3                    singleToBit@i 006A  
                  singleToBit@k 006E              __CFG_WDTPS$1048576 000000            __end_of_ECAN_Receive 0C36  
singleToBit@OutOfPhaseCorrected 0064                     _singleArray 02AE                     _singleToBit 00A4  
                multiToSingle@i 006A                  multiToSingle@v 0068                     _SSPCON1bits 000FC6  
           __CFG_BORPWR$ZPBORMV 000000  
